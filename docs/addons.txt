Add-ons
=======

Extra features for your Heroku app are available as add-ons.  Some add-ons are free and others have a flat monthly cost, but all require that you verify your account by registering your billing information with us.  (We only collect this information as a way to help manage abuse.  We'll never charge your card without your explicit authorization.)

You can see the current list of add-ons available and their prices at the bottom of [the Heroku pricing page](http://sick-ninja-420.heroku.com/).

Manging addons
--------------

List the add-ons currently in use on your app, and those available to be added:

    $ heroku addons
    Activated addons:
      Nightly Cron
      Memcached

    Available addons:
      Custom Domains
      SSL
      Hourly Cron
      Wildcard Domains
      Dj

Add an add-on:

    $ heroku addons:add memcached
    Adding memcached to myapp...done.

Remove it later:

    $ heroku addons:remove memcached
    Removing memcached from myapp...done.

Custom Domains
--------------

All Heroku apps are accessible at their default web URL, which is http://<appname>.heroku.com.  However, we recommend using your own custom domain name for any app which you plan to make broadly available:

    $ heroku addons:add custom_domains
    Adding custom domains to myapp...done.
    $ heroku domains:add www.example.com
    Added www.example.com as a custom domain name to myapp.heroku.com

Full documentation: [Custom Domains](/custom-domains)

SSL
---

SSL encryption should be used to protect any form posting sensitive data to your site:

    $ heroku addons:add ssl
    Adding ssl to myapp...done.

You can now access your app at https://(yourapp).heroku.com, which piggybacks on our *.heroku.com wildcard SSL certificate.  You can also access your app at https://www.yourdomain.com if you're using a custom domain, but this will produce a warning in the user's browser.

Full documentation: [SSL](/ssl)

Nightly Cron
------------

This add-on will run "rake cron" against your app once per day, generally around midnight PST, but you shouldn't depend on it running at any particular clock time.

    $ cat > lib/tasks/rake.cron
    task :cron do
      puts "Running cron"
    end
    [Ctrl-D]
    $ git add .
    $ git commit -m "cron task"
    ...
    $ git push heroku
    ...
    $ heroku addons:add nightly_cron
    Adding nightly cron to myapp...done.

The next day:

    $ heroku logs:cron
    (in /disk1/home/slugs/39164_b7c3a45_0710/mnt)
    Running cron

Full documentation: [Cron](/cron)

Hourly Cron
-----------

Hourly cron is identical to nightly cron, described above.  It runs the same rake task, but once per hour, instead of once per day.

Full documentation: [Cron](/cron)

Wildcard Domains
----------------

If you wish to use subdomains of your application's hostname, such as subdomain.myapp.heroku.com, or subdomain.yourdomain.com, you can enable the wildcard domains add-on:

    $ curl -I http://foo.myapp.heroku.com/
    HTTP/1.1 404 Object Not Found
    $ heroku addons:add wildcard_domains
    Adding wildcard domains to myapp...done.
    $ curl -I http://foo.myapp.heroku.com/
    HTTP/1.1 200 OK

You can also add wildcards to your custom domains if you have the custom domains add-on:

    $ heroku addons:add custom_domains
    Adding custom domains to myapp...done.
    $ heroku domains:add *.mydomain.com
    Added *.mydomain.com as a custom domain name to myapp.heroku.com

Full documentation: [Wildcard domains](/custom-domains#wildcard-domains)

DJ
--

Delayed::Job is a Rails plugin for running background job.  You should use it if you have any processing that goes on in your app that takes more than a few hundred milliseconds.

    $ script/plugin install git://github.com/tobi/delayed_job.git
    [...other DJ setup...]
    $ git add .
    $ git commit -m "use dj for queueing"
    $ git push heroku
    $ heroku addons:add dj
    Adding dj to myapp...done.

Your DJ background worker will spin up within a few seconds and begin processing jobs from the queue.

Full documentation: [Background jobs](/background-jobs)

Memcached
---------

Memcached is a high-speed, non-persistent datastore that is a key tool for building fast, scalable web applications.  Use it like this:

    $ heroku addons:add memcached
    Adding memcached to myapp...done.
    $ heroku console
    Ruby console for myapp.heroku.com
    >> MemCache.cache['foo'] = 'bar'
    => "bar"
    >> MemCache.cache
    => "bar"

Full documentation: [Memcached](/memcached)
