#Network
<div class="btn-group"><a href="#Properties" class="btn"><i class="icon-list"></i> Properties<sup>&nbsp;8</sup></a><button href="#" class="btn dropdown-toggle" data-toggle="dropdown">  <span class="caret"></span>&nbsp;</button><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li><a href="#pauthPassword" data-target="cPropertyauthPassword" class="autouncollapse">authPassword<i class="icon-book pull-right"></i></a></li><li><a href="#pauthType" data-target="cPropertyauthType" class="autouncollapse">authType<i class="icon-book pull-right"></i></a></li><li><a href="#pauthUser" data-target="cPropertyauthUser" class="autouncollapse">authUser<i class="icon-book pull-right"></i></a></li><li><a href="#pheaders" data-target="cPropertyheaders" class="autouncollapse">headers<i class="icon-book pull-right"></i></a></li><li><a href="#phttpVerb" data-target="cPropertyhttpVerb" class="autouncollapse"><span class="text-info">httpVerb</span><i class="icon-book pull-right"></i></a></li><li><a href="#presponseTimeout" data-target="cPropertyresponseTimeout" class="autouncollapse">responseTimeout<i class="icon-book pull-right"></i></a></li><li><a href="#purl" data-target="cPropertyurl" class="autouncollapse">url<i class="icon-book pull-right"></i></a></li><li><a href="#pverifyPeerCertificate" data-target="cPropertyverifyPeerCertificate" class="autouncollapse"><span class="text-info">verifyPeerCertificate</span><i class="icon-book pull-right"></i></a></li></ul></div><div class="btn-group"><a href="#Methods" class="btn"><i class="icon-cog"></i> Methods<sup>&nbsp;14</sub></a><a class="btn dropdown-toggle" data-toggle="dropdown" data-target="#" href="#Methods" >  <span class="caret"></span>&nbsp;</a><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li><a href="#mcancel" data-target="cMethodcancel" class="autouncollapse">cancel<i class="icon-book pull-right"></i></a></li><li><a href="#mconnectWan" data-target="cMethodconnectWan" class="autouncollapse">connectWan<i class="icon-book pull-right"></i></a></li><li><a href="#mdetectConnection" data-target="cMethoddetectConnection" class="autouncollapse">detectConnection<i class="icon-book pull-right"></i></a></li><li><a href="#mdisconnectWan" data-target="cMethoddisconnectWan" class="autouncollapse">disconnectWan<i class="icon-book pull-right"></i></a></li><li><a href="#mdownloadFile" data-target="cMethoddownloadFile" class="autouncollapse">downloadFile<i class="icon-book pull-right"></i></a></li><li><a href="#mget" data-target="cMethodget" class="autouncollapse">get<i class="icon-book pull-right"></i></a></li><li><a href="#mhasCellNetwork" data-target="cMethodhasCellNetwork" class="autouncollapse">hasCellNetwork<i class="icon-book pull-right"></i></a></li><li><a href="#mhasNetwork" data-target="cMethodhasNetwork" class="autouncollapse">hasNetwork<i class="icon-book pull-right"></i></a></li><li><a href="#mhasWifiNetwork" data-target="cMethodhasWifiNetwork" class="autouncollapse">hasWifiNetwork<i class="icon-book pull-right"></i></a></li><li><a href="#mpost" data-target="cMethodpost" class="autouncollapse">post<i class="icon-book pull-right"></i></a></li><li><a href="#mstartStatusNotify" data-target="cMethodstartStatusNotify" class="autouncollapse">startStatusNotify<i class="icon-book pull-right"></i></a></li><li><a href="#mstopDetectingConnection" data-target="cMethodstopDetectingConnection" class="autouncollapse">stopDetectingConnection<i class="icon-book pull-right"></i></a></li><li><a href="#mstopStatusNotify" data-target="cMethodstopStatusNotify" class="autouncollapse">stopStatusNotify<i class="icon-book pull-right"></i></a></li><li><a href="#muploadFile" data-target="cMethoduploadFile" class="autouncollapse">uploadFile<i class="icon-book pull-right"></i></a></li></ul></div><div class="btn-group pull-right"><button class="btn" id="expandAll" data-toggle="tooltip" title="Expand/Collapse all"><i class="icon-th-list "></i>&nbsp;</button></div><div class="btn-group"><a href="#Remarks" class="btn"><i class="icon-warning-sign"></i> Remarks<sup>&nbsp;3</sup></a><button href="#" class="btn dropdown-toggle" data-toggle="dropdown">  <span class="caret"></span>&nbsp;</button><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li><a href="#r0" data-target="rRemark0" class="autouncollapse">Detecting a connection through proxies</a></li><li><a href="#r1" data-target="rRemark1" class="autouncollapse">Detecting a connection over WAN</a></li><li><a href="#r2" data-target="rRemark2" class="autouncollapse">Preventing access to the device (WEH / WM)</a></li></ul></div><div class="btn-group"><a href="#Examples" class="btn"><i class="icon-edit"></i> Examples<sup>&nbsp;4</sup></a><button href="#" class="btn dropdown-toggle" data-toggle="dropdown">  <span class="caret"></span>&nbsp;</button><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li><a href="#e0" data-target="eExample0" class="autouncollapse">Request a notification from the system when network availability changes</a></li><li><a href="#e1" data-target="eExample1" class="autouncollapse">Check whether the network is available</a></li><li><a href="#e2" data-target="eExample2" class="autouncollapse">Download file and save it to permanent storage</a></li><li><a href="#e3" data-target="eExample3" class="autouncollapse">Upload files via HTTP POST</a></li></ul></div><div  >


<a name='Examples'></a>
<h2><i class='icon-edit'></i>Examples</h2>

<a name='e0'></a><div class='accordion property' id='e0'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cExample0"><strong>Request a notification from the system when network availability changes</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cExample0" class="accordion-body collapse in">  <div class="accordion-inner">

                   When you need to be notified of changes in the status of the network (connected / disconnected), use Network.startStatusNotify
               <ul class='nav nav-tabs' id='exI0-S0Tab'><li class='active'><a href='#exI0-S0JS' data-toggle='tab'>Javascript</a></li><li ><a href='#exI0-S0RUBY' data-toggle='tab'>Ruby</a></li></ul><div class='tab-content'><div class='tab-pane active' id='exI0-S0JS'><pre class='CodeRay'><code>:::javascript

           
    function status_notify_callback(params) {
      alert("Network status changed from "+params["prev_status"]+" to "+params["current_status"]);
    }
  
    function start_status_notify() {
      # Request the system to check every 3 seconds and call us back if there is a change in network connectivity
      Rho.Network.startStatusNotify(3000, status_notify_callback);
    }
    
    function stop_status_notify() {
      // Stop network status notifications
      Rho.Network.stopStatusNotify();
    }

                   
                 </code></pre></div><div class='tab-pane' id='exI0-S0RUBY'><pre class='CodeRay'><code>:::ruby

           
  def start_status_notify
    # Request the system to check every 3 seconds and call us back if there is a change in network connectivity
    Rho::Network.startStatusNotify(3000, url_for(:action =&gt; :status_notify_callback))
    Alert.show_popup "Started network status notifications"
  end

  # This is our notification that the status of the network changed. old_status and new_status can be "disconnected" or "connected"
  def status_notify_callback
    Alert.show_popup("Network status changed from #{@params["prev_status"]} to #{@params["current_status"]}")
  end


  def stop_status_notify
    # Stop network status notifications
    Rho::Network.stopStatusNotify
    Alert.show_popup "Stopped network status notifications"
  end
                   
                 </code></pre></div></div>  </div></div></div></div><a name='e1'></a><div class='accordion property' id='e1'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cExample1"><strong>Check whether the network is available</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cExample1" class="accordion-body collapse in">  <div class="accordion-inner">

                   You can check whether the mobile, Wi-Fi or other network is available. This can be useful for example if you only want to perform large data transfers on wi-fi and avoid doing them while on the cell network
               <ul class='nav nav-tabs' id='exI1-S0Tab'><li class='active'><a href='#exI1-S0JS' data-toggle='tab'>Javascript</a></li><li ><a href='#exI1-S0RUBY' data-toggle='tab'>Ruby</a></li></ul><div class='tab-content'><div class='tab-pane active' id='exI1-S0JS'><pre class='CodeRay'><code>:::javascript

           
    function network_availability() {
      // shows the network availability for...
      // Cell network
      var cell_network = Rho.Network.hasCellNetwork()
      // Wi-Fi network
      var wifi_network = Rho.Network.hasWifiNetwork()
      // Any network
      var network = Rho.Network.hasNetwork()
      
      alert("Cell network: "+cell_network+"\nWi-Fi network: "+wifi_network+"\nNetwork: "+network);
    }
                   
                 </code></pre></div><div class='tab-pane' id='exI1-S0RUBY'><pre class='CodeRay'><code>:::ruby

           
    # check the network availability for...
    # Cell network
    cell_network = Rho::Network.hasCellNetwork
    # Wi-Fi
    wifi_network = Rho::Network.hasWifiNetwork
    # Any network
    network = Rho::Network.hasNetwork
                   
                 </code></pre></div></div>  </div></div></div></div><a name='e2'></a><div class='accordion property' id='e2'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cExample2"><strong>Download file and save it to permanent storage</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cExample2" class="accordion-body collapse in">  <div class="accordion-inner">

                   Download any file from an external server and store it in your device
               <ul class='nav nav-tabs' id='exI2-S0Tab'><li class='active'><a href='#exI2-S0JS' data-toggle='tab'>Javascript</a></li><li ><a href='#exI2-S0RUBY' data-toggle='tab'>Ruby</a></li></ul><div class='tab-content'><div class='tab-pane active' id='exI2-S0JS'><pre class='CodeRay'><code>:::javascript

           
    function download_file_callback(params) {
      if (params["status"] == "ok") {
        alert("Download Succeeded, path is /public/images/sample.png");
      } else {
        alert("Download Failed");
      }
    }

    function download_file() {
      // Download a file to the specified filename. Be careful with the overwriteFile parameter!
      downloadfileProps = {
        url: "http://www.google.com/images/icons/product/chrome-48.png",
        filename: Rho.Application.publicFolder+"/images/sample.png",
        overwriteFile: true
      };
      Rho.Network.downloadFile(downloadfileProps, download_file_callback);
    }
                   
                 </code></pre></div><div class='tab-pane' id='exI2-S0RUBY'><pre class='CodeRay'><code>:::ruby

           
  def download_file
      #Download a file to the specified filename.
      downloadfileProps = Hash.new
      downloadfileProps["url"]='http://www.google.com/images/icons/product/chrome-48.png'
      downloadfileProps["filename"] = Rho::Application.publicFolder+"/images/sample.png"
      downloadfileProps["overwriteFile"] = true
      Rho::Network.downloadFile(downloadfileProps, url_for(:action =&gt; :download_file_callback))
  end
  
  def download_file_callback
    if @params["status"] == "ok"
        Alert.show_popup "Download Success,path is /public/images/sample.png "
    else
        Alert.show_popup "Download Failed"
    end
  end

                   
                 </code></pre></div></div>  </div></div></div></div><a name='e3'></a><div class='accordion property' id='e3'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cExample3"><strong>Upload files via HTTP POST</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cExample3" class="accordion-body collapse in">  <div class="accordion-inner">

                   You can upload any file to an external server via HTTP POST and be notified whether the transfer succeeded or not
               <ul class='nav nav-tabs' id='exI3-S0Tab'><li class='active'><a href='#exI3-S0JS' data-toggle='tab'>Javascript</a></li><li ><a href='#exI3-S0RUBY' data-toggle='tab'>Ruby</a></li></ul><div class='tab-content'><div class='tab-pane active' id='exI3-S0JS'><pre class='CodeRay'><code>:::javascript

           
    function upload_file_callback(params) {
      // Check the result of the upload and act accordingly
      if (params["status"] == "ok") {
        alert("Upload Succeeded.");
      } else {
        alert("Upload Failed.");
      }
    }
    
    function upload_file() {
        // Upload the specified file using HTTP POST.
        uploadfileProps = {
          url: "http://www.example.com",
          filename: Rho.Application.publicFolder+"/images/backButton.png",
          body: "uploading file",
          fileContentType: "image/png"
        };

        Rho.Network.uploadFile(uploadfileProps, upload_file_callback);      
    }
                   
                 </code></pre></div><div class='tab-pane' id='exI3-S0RUBY'><pre class='CodeRay'><code>:::ruby

           
  def upload_file
    # Upload the specified file using HTTP POST.
    uploadfileProps = Hash.new
    uploadfileProps['url'] = "http://www.example.com"
    uploadfileProps['filename'] = Rho::Application.publicFolder+"/images/backButton.png"
    uploadfileProps['body'] = "uploading file"
    uploadfileProps['fileContentType']="image/png"
    Rho::Network.uploadFile(uploadfileProps, url_for(:action =&gt; :upload_file_callback))
  end

  def upload_file_callback
    if @params['status'] == "ok"
        Alert.show_popup "Upload Succeeded."
    else
        Alert.show_popup "Upload Failed."
    end
  end

                   
                 </code></pre></div></div>  </div></div></div></div>
<a name='Properties'></a>
<h2><i class='icon-list'></i>Properties</h2>



NOTE: The properties of this API Class cannot be accessed via setter or getter methods. However they can be used in methods that allow a HASH or Array of properties to be passed in.

<a name='pauthPassword'></a><div class='accordion property' id='pauthPassword'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyauthPassword"><strong>authPassword</strong> : <span class='text-info'>STRING</span>  <i class="icon-chevron-down pull-right"></i></span></div><div id="cPropertyauthPassword" class="accordion-body collapse in">  <div class="accordion-inner">Password for basic authentication.<p>This property cannot be accessed via setter or getter methods. It can be used in methods that allow a HASH or Array of properties to be passed in.</p><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> </p></div> <div><p><strong>Property Access:</strong></p><ul><li><i class="icon-book"></i>Class: This property can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.authPassword</code> </li><li>Ruby: <code>Rho::Network.authPassword</code></li></ul></li></ul></div> </div></div></div></div><a name='pauthType'></a><div class='accordion property' id='pauthType'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyauthType"><strong>authType</strong> : <span class='text-info'>STRING</span>  <i class="icon-chevron-down pull-right"></i></span></div><div id="cPropertyauthType" class="accordion-body collapse in">  <div class="accordion-inner">URL of the request.<p>This property cannot be accessed via setter or getter methods. It can be used in methods that allow a HASH or Array of properties to be passed in.</p><p><strong>Possible Values</strong> (<span class='text-info'>STRING</span>):</p> <dt>basic</dt><dd></dt></dl><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> </p></div> <div><p><strong>Property Access:</strong></p><ul><li><i class="icon-book"></i>Class: This property can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.authType</code> </li><li>Ruby: <code>Rho::Network.authType</code></li></ul></li></ul></div> </div></div></div></div><a name='pauthUser'></a><div class='accordion property' id='pauthUser'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyauthUser"><strong>authUser</strong> : <span class='text-info'>STRING</span>  <i class="icon-chevron-down pull-right"></i></span></div><div id="cPropertyauthUser" class="accordion-body collapse in">  <div class="accordion-inner">User name for basic authentication.<p>This property cannot be accessed via setter or getter methods. It can be used in methods that allow a HASH or Array of properties to be passed in.</p><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> </p></div> <div><p><strong>Property Access:</strong></p><ul><li><i class="icon-book"></i>Class: This property can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.authUser</code> </li><li>Ruby: <code>Rho::Network.authUser</code></li></ul></li></ul></div> </div></div></div></div><a name='pheaders'></a><div class='accordion property' id='pheaders'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyheaders"><strong>headers</strong> : <span class='text-info'>HASH</span>  <i class="icon-chevron-down pull-right"></i></span></div><div id="cPropertyheaders" class="accordion-body collapse in">  <div class="accordion-inner">Request HTTP headers.<p>This property cannot be accessed via setter or getter methods. It can be used in methods that allow a HASH or Array of properties to be passed in.</p><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> </p></div> <div><p><strong>Property Access:</strong></p><ul><li><i class="icon-book"></i>Class: This property can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.headers</code> </li><li>Ruby: <code>Rho::Network.headers</code></li></ul></li></ul></div> </div></div></div></div><a name='phttpVerb'></a><div class='accordion property' id='phttpVerb'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyhttpVerb"><strong><span class="text-info">httpVerb</span></strong> : <span class='text-info'>STRING</span>  <i class="icon-chevron-down pull-right"></i></span></div><div id="cPropertyhttpVerb" class="accordion-body collapse in">  <div class="accordion-inner"><span class='label label-info'>Replaces:http_command</span> Password for basic authentication.<p>This property cannot be accessed via setter or getter methods. It can be used in methods that allow a HASH or Array of properties to be passed in.</p><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> </p></div> <div><p><strong>Property Access:</strong></p><ul><li><i class="icon-book"></i>Class: This property can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.httpVerb</code> </li><li>Ruby: <code>Rho::Network.httpVerb</code></li></ul></li></ul></div> </div></div></div></div><a name='presponseTimeout'></a><div class='accordion property' id='presponseTimeout'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyresponseTimeout"><strong>responseTimeout</strong> : <span class='text-info'>INTEGER</span>  <i class="icon-chevron-down pull-right"></i></span></div><div id="cPropertyresponseTimeout" class="accordion-body collapse in">  <div class="accordion-inner">Timeout of network requests in seconds.<p><strong>Default:</strong> 30</p><p>This property cannot be accessed via setter or getter methods. It can be used in methods that allow a HASH or Array of properties to be passed in.</p><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> </p></div> <div><p><strong>Property Access:</strong></p><ul><li><i class="icon-book"></i>Class: This property can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.responseTimeout</code> </li><li>Ruby: <code>Rho::Network.responseTimeout</code></li></ul></li></ul></div> </div></div></div></div><a name='purl'></a><div class='accordion property' id='purl'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyurl"><strong>url</strong> : <span class='text-info'>STRING</span>  <i class="icon-chevron-down pull-right"></i></span></div><div id="cPropertyurl" class="accordion-body collapse in">  <div class="accordion-inner">URL of the request.<p>This property cannot be accessed via setter or getter methods. It can be used in methods that allow a HASH or Array of properties to be passed in.</p><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> </p></div> <div><p><strong>Property Access:</strong></p><ul><li><i class="icon-book"></i>Class: This property can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.url</code> </li><li>Ruby: <code>Rho::Network.url</code></li></ul></li></ul></div> </div></div></div></div><a name='pverifyPeerCertificate'></a><div class='accordion property' id='pverifyPeerCertificate'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyverifyPeerCertificate"><strong><span class="text-info">verifyPeerCertificate</span></strong> : <span class='text-info'>BOOLEAN</span>  <i class="icon-chevron-down pull-right"></i></span></div><div id="cPropertyverifyPeerCertificate" class="accordion-body collapse in">  <div class="accordion-inner"><span class='label label-info'>Replaces:ssl_verify_peer</span> Verify SSL certificates.<p><strong>Default:</strong> true</p><p>This property cannot be accessed via setter or getter methods. It can be used in methods that allow a HASH or Array of properties to be passed in.</p><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> </p></div> <div><p><strong>Property Access:</strong></p><ul><li><i class="icon-book"></i>Class: This property can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.verifyPeerCertificate</code> </li><li>Ruby: <code>Rho::Network.verifyPeerCertificate</code></li></ul></li></ul></div> </div></div></div></div>
<a name='Methods'></a>
<h2><i class='icon-cog'></i>Methods</h2>

<div class="accordion" id="accordion"><div class='accordion method' id='mcancel'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodcancel"><strong data-toggle="tooltip" title data-original-title="Cancel the request identified by callback. If callback is mossed then all requests will be cancelled.">cancel</strong>(<span class='text-info'>OBJECT</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodcancel" class="accordion-body collapse in">  <div class="accordion-inner">Cancel the request identified by callback. If callback is mossed then all requests will be cancelled.<div><p><strong>Parameters</strong></p><ul><li>callback : <span class='text-info'>OBJECT</span> <span class='label label-info'>Optional</span> </li></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.cancel(...)</code> </li><li>Ruby: <code>Rho::Network.cancel(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mconnectWan'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodconnectWan"><strong data-toggle="tooltip" title data-original-title="Connects RhoElements through a Wide Area Network. The connection destination must be first configured through the Connection Manager and the destination name provided to this method. If a connection is already established, you must first call disconnectWan before attempting another connection. A list of available connection destinations is written to the log file when either connectWan or disconnectWan are first specified. Specify the connection as 'Internet' to use the default internet connection defined on the device. If the specified destination does not exist no connection attempt will be made and an entry will be made in the log file.">connectWan</strong>(<span class="text-info">STRING</span> connectionDestination, <span class='text-info'>HASH</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodconnectWan" class="accordion-body collapse in">  <div class="accordion-inner">Connects RhoElements through a Wide Area Network. The connection destination must be first configured through the Connection Manager and the destination name provided to this method. If a connection is already established, you must first call disconnectWan before attempting another connection. A list of available connection destinations is written to the log file when either connectWan or disconnectWan are first specified. Specify the connection as 'Internet' to use the default internet connection defined on the device. If the specified destination does not exist no connection attempt will be made and an entry will be made in the log file.<div><p><strong>Parameters</strong></p><ul><li>connectionDestination : <span class='text-info'>STRING</span><p>The connection in the Windows Connection manager to use, specify 'Internet' to use the default internet connection. </p></li><li>callback : <span class='text-info'>HASH</span> <span class='label label-warning'>Mandatory</span> </li></ul></div><div><p><strong>Callback Returning Parameters</strong></p><ul><ul><li>phoneSignalStrength : <span class='text-info'>STRING</span><p>The signal strength of the phone as a percentage of maximum strength. Returned as a number between 0 and 100. If there is no phone service this field will be 0. </p></li><li>networkOperator : <span class='text-info'>STRING</span><p>The name of the current network operator associated with the SIM card </p></li><li>connectionTypeAvailable : <span class='text-info'>STRING</span><p>The current data connection type available to RhoElements as provided by the Network. Values can be 'Unavailable', GPRS, 1XRTT, EVDO, EDGE, UMTS, EVDV or HSDPA </p></li><li>connectionTypeConnected : <span class='text-info'>STRING</span><p>The data connection type to which Rhoelements is currently connected. The values returned are identical to connectionTypeAvailable, with the exception that 'Not Connected' replaces 'Unavailable'. </p></li><li>connectionManagerMessage : <span class='text-info'>STRING</span><p>This is the last received status from the Connection Manager. Do NOT use this parameter to determine if you are able to physically send / receive data to a remote host, it only provides an indication of whether the Connection Manager believes the connection is available. To determine if you are connected to a remote host use the detectConnection method. </p></li></ul></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.connectWan(...)</code> </li><li>Ruby: <code>Rho::Network.connectWan(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mdetectConnection'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethoddetectConnection"><strong data-toggle="tooltip" title data-original-title="Begins polling the specified host on the specified URL to check if there is a network connection available. The connection status is reported back via the provided callback. Note that callback will be called only if connection status have changed compared to previous polling.">detectConnection</strong>(<span class="text-info">HASH</span> propertyMap, <span class='text-info'>HASH</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethoddetectConnection" class="accordion-body collapse in">  <div class="accordion-inner">Begins polling the specified host on the specified URL to check if there is a network connection available. The connection status is reported back via the provided callback. Note that callback will be called only if connection status have changed compared to previous polling.<div><p><strong>Parameters</strong></p><ul><li>propertyMap : <span class='text-info'>HASH</span><p>Properties map. </p></li><ul><li>host : <span class='text-info'>STRING</span><p>When detecting a network connection, this is the URL or IP address of the server to attempt to connect to </p></li><li>port : <span class='text-info'>INTEGER</span><p>When detecting a network connection, this is the port on the host to connect to. </p></li><li>pollInterval : <span class='text-info'>INTEGER</span><p>The time, in milliseconds, between each check for a connection. Note that the actual connection report interval will be the sum of the poll interval and the detection timeout.  The minimum allowed value is 5000ms. </p></li><li>detectionTimeout : <span class='text-info'>INTEGER</span><p>The amount of time to attempt to connect to the specified URL before giving up and assuming 'disconnected'.  Value is specified in milliseconds. </p></li></ul><li>callback : <span class='text-info'>HASH</span> <span class='label label-warning'>Mandatory</span> </li></ul></div><div><p><strong>Callback Returning Parameters</strong></p><ul><ul><li>connectionInformation : <span class='text-info'>STRING</span><p>Whether the device is connected to the specified host and port.  Either 'Connected' or 'Disconnected'. </p></li><li>failureMessage : <span class='text-info'>STRING</span><p>If the device is disconnected this field will contain information about why the connection failed. </p></li></ul></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.detectConnection(...)</code> </li><li>Ruby: <code>Rho::Network.detectConnection(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mdisconnectWan'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethoddisconnectWan"><strong data-toggle="tooltip" title data-original-title="Disconnects the current WAN connection. DisconnectWan will only affect connections established by RhoElements so if you have not previously called connectWan this function will have no effect.">disconnectWan</strong>()<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethoddisconnectWan" class="accordion-body collapse in">  <div class="accordion-inner">Disconnects the current WAN connection. DisconnectWan will only affect connections established by RhoElements so if you have not previously called connectWan this function will have no effect.<div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.disconnectWan(...)</code> </li><li>Ruby: <code>Rho::Network.disconnectWan(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mdownloadFile'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethoddownloadFile"><strong data-toggle="tooltip" title data-original-title="Download a file to the specified filename.">downloadFile</strong>(<span class="text-info">HASH</span> propertyMap, <span class='text-info'>OBJECT</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethoddownloadFile" class="accordion-body collapse in">  <div class="accordion-inner">Download a file to the specified filename.<div><p><strong>Parameters</strong></p><ul><li>propertyMap : <span class='text-info'>HASH</span><p>Properties map. </p></li><ul><li>url : <span class='text-info'>STRING</span><p>URL of file to be downloaded. HTTP and HTTPS protocols are supported. </p></li><li>filename : <span class='text-info'>STRING</span><p>The path and name of the file to be uploaded. </p></li><li>overwriteFile : <span class='text-info'>BOOLEAN</span><p>overWriteFile will overwrite the destination file if it already exists. </p></li><li>createFolders : <span class='text-info'>BOOLEAN</span><p>createFolders can automatically create the directory path. </p></li></ul><li>callback : <span class='text-info'>OBJECT</span> <span class='label label-info'>Optional</span> </li></ul></div><div><p><strong>Return:</strong></p><ul><li>HASH<ul><li>body : <span class='text-info'>STRING</span><p>The body of the HTTP response. </p></li><li>headers : <span class='text-info'>HASH</span><p>A hash containing the response headers. </p></li><li>cookies : <span class='text-info'>STRING</span><p>The server cookies, parsed and usable for subsequent requests. </p></li><li>http_error : <span class='text-info'>INTEGER</span><p>HTTP error code if response code was not 200. </p></li><li>fileExists : <span class='text-info'>BOOLEAN</span><p>When overwriteFile is false and file exists, when error return and this flag set to true. </p></li></ul></li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.downloadFile(...)</code> </li><li>Ruby: <code>Rho::Network.downloadFile(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mget'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodget"><strong data-toggle="tooltip" title data-original-title="Perform an HTTP GET request.">get</strong>(<span class="text-info">HASH</span> propertyMap, <span class='text-info'>OBJECT</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodget" class="accordion-body collapse in">  <div class="accordion-inner">Perform an HTTP GET request.<div><p><strong>Parameters</strong></p><ul><li>propertyMap : <span class='text-info'>HASH</span><p>Properties map. </p></li><li>callback : <span class='text-info'>OBJECT</span> <span class='label label-info'>Optional</span> </li></ul></div><div><p><strong>Return:</strong></p><ul><li>HASH<ul><li>body : <span class='text-info'>STRING</span><p>The body of the HTTP response. </p></li><li>headers : <span class='text-info'>HASH</span><p>A hash containing the response headers. </p></li><li>cookies : <span class='text-info'>STRING</span><p>The server cookies, parsed and usable for subsequent requests. </p></li><li>http_error : <span class='text-info'>INTEGER</span><p>HTTP error code if response code was not 200. </p></li></ul></li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.get(...)</code> </li><li>Ruby: <code>Rho::Network.get(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mhasCellNetwork'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodhasCellNetwork"><strong data-toggle="tooltip" title data-original-title="Is device connected to the cell network.">hasCellNetwork</strong>()<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodhasCellNetwork" class="accordion-body collapse in">  <div class="accordion-inner">Is device connected to the cell network.<div><p><strong>Return:</strong></p><ul><li>BOOLEAN</li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.hasCellNetwork(...)</code> </li><li>Ruby: <code>Rho::Network.hasCellNetwork(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mhasNetwork'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodhasNetwork"><strong data-toggle="tooltip" title data-original-title="Is device connected to the network.">hasNetwork</strong>()<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodhasNetwork" class="accordion-body collapse in">  <div class="accordion-inner">Is device connected to the network.<div><p><strong>Return:</strong></p><ul><li>BOOLEAN</li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.hasNetwork(...)</code> </li><li>Ruby: <code>Rho::Network.hasNetwork(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mhasWifiNetwork'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodhasWifiNetwork"><strong data-toggle="tooltip" title data-original-title="Is device connected to the wifi network">hasWifiNetwork</strong>()<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodhasWifiNetwork" class="accordion-body collapse in">  <div class="accordion-inner">Is device connected to the wifi network<div><p><strong>Return:</strong></p><ul><li>BOOLEAN</li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.hasWifiNetwork(...)</code> </li><li>Ruby: <code>Rho::Network.hasWifiNetwork(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mpost'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodpost"><strong data-toggle="tooltip" title data-original-title="Download a file to the specified filename.">post</strong>(<span class="text-info">HASH</span> propertyMap, <span class='text-info'>OBJECT</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodpost" class="accordion-body collapse in">  <div class="accordion-inner">Download a file to the specified filename.<div><p><strong>Parameters</strong></p><ul><li>propertyMap : <span class='text-info'>HASH</span><p>Properties map. </p></li><ul><li>body : <span class='text-info'>STRING</span><p>The message body of the HTTP request. </p></li></ul><li>callback : <span class='text-info'>OBJECT</span> <span class='label label-info'>Optional</span> </li></ul></div><div><p><strong>Return:</strong></p><ul><li>HASH<ul><li>body : <span class='text-info'>STRING</span><p>The body of the HTTP response. </p></li><li>headers : <span class='text-info'>HASH</span><p>A hash containing the response headers. </p></li><li>cookies : <span class='text-info'>STRING</span><p>The server cookies, parsed and usable for subsequent requests. </p></li><li>http_error : <span class='text-info'>INTEGER</span><p>HTTP error code if response code was not 200. </p></li></ul></li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.post(...)</code> </li><li>Ruby: <code>Rho::Network.post(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mstartStatusNotify'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodstartStatusNotify"><strong data-toggle="tooltip" title data-original-title="Start network status notifications.Notification send when Wifi or Cell netwrok appear/disappear. To check real Internet connectivity use detectConnection method.">startStatusNotify</strong>(<span class="text-info">INTEGER</span> pollInterval, <span class='text-info'>HASH</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodstartStatusNotify" class="accordion-body collapse in">  <div class="accordion-inner">Start network status notifications.Notification send when Wifi or Cell netwrok appear/disappear. To check real Internet connectivity use detectConnection method.<div><p><strong>Parameters</strong></p><ul><li>pollInterval : <span class='text-info'>INTEGER</span> <span class='label label-info'>Optional</span><p>The network status polling period for systems that can not notify network status change immediately. In seconds. </p></li><li>callback : <span class='text-info'>HASH</span> <span class='label label-warning'>Mandatory</span> </li></ul></div><div><p><strong>Callback Returning Parameters</strong></p><ul><ul><li>current_status : <span class='text-info'>STRING</span><p>Current status of network connection. Can be "connected" or "disconnected". </p></li><li>prev_status : <span class='text-info'>STRING</span><p>Previous status of network connection. Can be "connected", "disconnected" or "unknown"." </p></li></ul></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.startStatusNotify(...)</code> </li><li>Ruby: <code>Rho::Network.startStatusNotify(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mstopDetectingConnection'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodstopDetectingConnection"><strong data-toggle="tooltip" title data-original-title="Ceases the network detection identified by the given callback">stopDetectingConnection</strong>(<span class='text-info'>OBJECT</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodstopDetectingConnection" class="accordion-body collapse in">  <div class="accordion-inner">Ceases the network detection identified by the given callback<div><p><strong>Parameters</strong></p><ul><li>callback : <span class='text-info'>OBJECT</span> <span class='label label-warning'>Mandatory</span> </li></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.stopDetectingConnection(...)</code> </li><li>Ruby: <code>Rho::Network.stopDetectingConnection(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mstopStatusNotify'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodstopStatusNotify"><strong data-toggle="tooltip" title data-original-title="Stop network status notifications.">stopStatusNotify</strong>()<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodstopStatusNotify" class="accordion-body collapse in">  <div class="accordion-inner">Stop network status notifications.<div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.stopStatusNotify(...)</code> </li><li>Ruby: <code>Rho::Network.stopStatusNotify(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='muploadFile'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethoduploadFile"><strong data-toggle="tooltip" title data-original-title="Upload the specified file using HTTP POST.">uploadFile</strong>(<span class="text-info">HASH</span> propertyMap, <span class='text-info'>OBJECT</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethoduploadFile" class="accordion-body collapse in">  <div class="accordion-inner">Upload the specified file using HTTP POST.<div><p><strong>Parameters</strong></p><ul><li>propertyMap : <span class='text-info'>HASH</span><p>Properties map. </p></li><ul><li>filename : <span class='text-info'>STRING</span><p>The path and name of the file to be uploaded. </p></li><li>body : <span class='text-info'>STRING</span><p>The message body of the HTTP request. </p></li><li>fileContentType : <span class='text-info'>STRING</span><p>Content-Type header for the file, defaults to "application/octet-stream". </p></li><li>multipart : <span class='text-info'>ARRAY</span><p>Array of hashes containing file information. </p></li><ul><li><i>Object<i> : <span class='text-info'>HASH</span><p>Multipart properties. </p></li><ul><li>filename : <span class='text-info'>STRING</span><p>The path and name of the file to be uploaded. </p></li><li>contentType : <span class='text-info'>STRING</span><p>Content-Type header, defaults to "application/octet-stream". </p></li><li>filenameBase : <span class='text-info'>STRING</span><p>Base directory containing the :filename. </p></li><li>name : <span class='text-info'>STRING</span><p>File type, defaults to "blob". </p></li></ul></ul></ul><li>callback : <span class='text-info'>OBJECT</span> <span class='label label-info'>Optional</span> </li></ul></div><div><p><strong>Return:</strong></p><ul><li>HASH<ul><li>body : <span class='text-info'>STRING</span><p>The body of the HTTP response. </p></li><li>headers : <span class='text-info'>HASH</span><p>A hash containing the response headers. </p></li><li>cookies : <span class='text-info'>STRING</span><p>The server cookies, parsed and usable for subsequent requests. </p></li><li>http_error : <span class='text-info'>INTEGER</span><p>HTTP error code if response code was not 200. </p></li></ul></li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/wp8.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="/img/windows.jpg" style="width: 20px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.Network.uploadFile(...)</code> </li><li>Ruby: <code>Rho::Network.uploadFile(...)</code></li></ul></li></ul></div>  </div></div></div></div></div>
<a name='Remarks'></a>
<h2><i class='icon-warning-sign'></i>Remarks</h2>

<a name='r0'></a><div class='accordion property' id='r0'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cRemark0"><strong>Detecting a connection through proxies</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cRemark0" class="accordion-body collapse in">  <div class="accordion-inner"><p>Because the detectConnection method is protocol agnostic, it will not communicate through HTTP proxies to reach a specified URL. In order to determine if you are connected when sitting behind a proxy you should call the method to attempt to connect to your proxy on the appropriate port. A successful connection to the proxy should be taken to assume the device is connected to a network. When configuring your WAN connection bear in mind that the proxy settings defined in the RhoElements configuration file will take precedence.</p>
  </div></div></div></div><a name='r1'></a><div class='accordion property' id='r1'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cRemark1"><strong>Detecting a connection over WAN</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cRemark1" class="accordion-body collapse in">  <div class="accordion-inner"><p>When detecting a network connection over WAN bear in mind if you specify a low networkPollInterval your device will frequently have an active data connection and may prevent the device occasionally from accepting incoming calls.</p>
  </div></div></div></div><a name='r2'></a><div class='accordion property' id='r2'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cRemark2"><strong>Preventing access to the device (WEH / WM)</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cRemark2" class="accordion-body collapse in">  <div class="accordion-inner"><p>Receiving phone calls or texts whilst running RhoElements will cause the start button to be displayed on Windows Embedded Handheld devices, potentially offering users access to the operating system. It is recommended to set the following registry keys to disable Operating System access on Windows Embedded Handheld as required. The registry keys will be applied after a warm boot, omit them entirely to restore the Start and &lsquo;X&rsquo; icons.</p>

<pre>
[HKEY_LOCAL_MACHINE\Software\Microsoft\Shell\BubbleTiles]   Location in Registry
"HardwareStartKeyEnabled"=dword:00000001                    Prevents the Start icon from appearing in the bottom left
"HardwareDoneKeyEnabled"=dword:00000001                     Prevents the 'X' icon from appearing in the bottom right
</pre>



  </div></div></div></div></div>