<?xml version = "1.0"?>
<?xml-stylesheet type="text/xsl" href="pb_help.xsl"?>
<API>
    <MODULE name="Network" parent="Rho">
        <HELP_OVERVIEW></HELP_OVERVIEW>
        <MORE_HELP></MORE_HELP>
        
        <TEMPLATES>
        </TEMPLATES>

        <PROPERTIES access="STATIC" generateAccessors="false">
            <DESC>object supports this properties bla bla bla :</DESC>

            <ALIASES>
                <ALIAS new="ssl_verify_peer" existing="verifyPeerCertificate" deprecated="true"/>
                <ALIAS new="http_command" existing="httpVerb" deprecated="true"/>
            </ALIASES>

            <PROPERTY name="url" type="STRING">
                <DESC>URL of the request.</DESC>
            </PROPERTY>

            <PROPERTY name="authType" type="STRING">
                <DESC>URL of the request.</DESC>
                <VALUES>
                    <VALUE constName="AUTH_BASIC" value ="basic">
                        <DESC></DESC>
                    </VALUE>
                </VALUES>
            </PROPERTY>
            <PROPERTY name="authUser" type="STRING">
                <DESC>User name for basic authentication.</DESC>
            </PROPERTY>
            <PROPERTY name="authPassword" type="STRING">
                <DESC>Password for basic authentication.</DESC>
            </PROPERTY>
            <PROPERTY name="verifyPeerCertificate" type="BOOLEAN" default="true">
                <DESC>Verify SSL certificates.</DESC>
            </PROPERTY>
            <PROPERTY name="httpVerb" type="STRING">
                <DESC>Password for basic authentication.</DESC>
            </PROPERTY>
            <PROPERTY name="headers" type="HASH">
                <DESC>Request HTTP headers.</DESC>
            </PROPERTY>
            
            <PROPERTY name="responseTimeout" type="INTEGER" default="30" generateAccessors="true">
                <DESC>Timeout of network requests in seconds.</DESC>
            </PROPERTY>

        </PROPERTIES>

        <METHODS  access="STATIC">
            <ALIASES>
            </ALIASES>

            <METHOD name="cancel" hasCallback="optional" runInThread="none">
                <DESC>Cancel the request identified by callback. If callback is mossed then all requests will be cancelled.</DESC>
            </METHOD>

            <METHOD name="downloadFile" hasCallback="optional">
                <DESC>Download a file to the specified filename.</DESC>
                <PARAMS>
                    <PARAM name="propertyMap" type="HASH" propertyHash="true">
                        <DESC>Properties map.</DESC>
                        <PARAMS>
                            <PARAM name="filename" type="STRING">
                                <DESC>The path and name of the file to be uploaded.</DESC>
                            </PARAM>
                            <PARAM name="overwriteFile" type="BOOLEAN" default="false">
                                <DESC>overWriteFile will overwrite the destination file if it already exists.</DESC>
                            </PARAM>
                            <PARAM name="createFolders" type="BOOLEAN" default="false">
                                <DESC>createFolders can automatically create the directory path.</DESC>
                            </PARAM>
                            
                        </PARAMS>
                    </PARAM>
                </PARAMS>

                <RETURN type="HASH">
                    <PARAMS>
                        <PARAM name="body" type="STRING">
                            <DESC>The body of the HTTP response.</DESC>
                        </PARAM>
                        <PARAM name="headers" type="HASH">
                            <DESC>A hash containing the response headers.</DESC>
                        </PARAM>
                        <PARAM name="cookies" type="STRING">
                            <DESC>The server cookies, parsed and usable for subsequent requests.</DESC>
                        </PARAM>
                        <PARAM name="http_error" type="INTEGER">
                            <DESC>HTTP error code if response code was not 200.</DESC>
                        </PARAM>
                    </PARAMS>
                </RETURN>

            </METHOD>

            <METHOD name="get" hasCallback="optional">
                <DESC>Perform an HTTP GET request.</DESC>
                <PARAMS>
                    <PARAM name="propertyMap" type="HASH" propertyHash="true">
                        <DESC>Properties map.</DESC>
                    </PARAM>
                </PARAMS>

                <RETURN type="HASH">
                    <PARAMS>
                        <PARAM name="body" type="STRING">
                            <DESC>The body of the HTTP response.</DESC>
                        </PARAM>
                        <PARAM name="headers" type="HASH">
                            <DESC>A hash containing the response headers.</DESC>
                        </PARAM>
                        <PARAM name="cookies" type="STRING">
                            <DESC>The server cookies, parsed and usable for subsequent requests.</DESC>
                        </PARAM>
                        <PARAM name="http_error" type="INTEGER">
                            <DESC>HTTP error code if response code was not 200.</DESC>
                        </PARAM>
                    </PARAMS>
                </RETURN>

            </METHOD>

            <METHOD name="post" hasCallback="optional">
                <DESC>Download a file to the specified filename.</DESC>
                <PARAMS>
                    <PARAM name="propertyMap" type="HASH" propertyHash="true">
                        <DESC>Properties map.</DESC>
                        <PARAMS>
                            <PARAM name="body" type="STRING">
                                <DESC>The message body of the HTTP request.</DESC>
                            </PARAM>
                        </PARAMS>
                    </PARAM>
                </PARAMS>

                <RETURN type="HASH">
                    <PARAMS>
                        <PARAM name="body" type="STRING">
                            <DESC>The body of the HTTP response.</DESC>
                        </PARAM>
                        <PARAM name="headers" type="HASH">
                            <DESC>A hash containing the response headers.</DESC>
                        </PARAM>
                        <PARAM name="cookies" type="STRING">
                            <DESC>The server cookies, parsed and usable for subsequent requests.</DESC>
                        </PARAM>
                        <PARAM name="http_error" type="INTEGER">
                            <DESC>HTTP error code if response code was not 200.</DESC>
                        </PARAM>
                    </PARAMS>
                </RETURN>

            </METHOD>

            <METHOD name="uploadFile" hasCallback="optional">
                <DESC>Upload the specified file using HTTP POST.</DESC>
                <PARAMS>
                    <PARAM name="propertyMap" type="HASH" propertyHash="true">
                        <DESC>Properties map.</DESC>
                        <PARAMS>
                            <PARAM name="filename" type="STRING">
                                <DESC>The path and name of the file to be uploaded.</DESC>
                            </PARAM>
                            <PARAM name="body" type="STRING">
                                <DESC>The message body of the HTTP request.</DESC>
                            </PARAM>
                            <PARAM name="fileContentType" type="STRING">
                                <DESC>Content-Type header for the file, defaults to "application/octet-stream".</DESC>
                            </PARAM>
                            <PARAM name="multipart" type="ARRAY">
                                <DESC>Array of hashes containing file information.</DESC>
                                <PARAM type="HASH">
                                    <DESC>Multipart properties.</DESC>
                                    <PARAMS>
                                        <PARAM name="filename" type="STRING">
                                            <DESC>The path and name of the file to be uploaded.</DESC>
                                        </PARAM>
                                        <PARAM name="contentType" type="STRING">
                                            <DESC>Content-Type header, defaults to "application/octet-stream".</DESC>
                                        </PARAM>
                                        <PARAM name="filenameBase" type="STRING">
                                            <DESC>Base directory containing the :filename.</DESC>
                                        </PARAM>
                                        <PARAM name="name" type="STRING">
                                            <DESC>File type, defaults to "blob".</DESC>
                                        </PARAM>
                                    </PARAMS>
                                </PARAM>
                            </PARAM>    
                        </PARAMS>
                    </PARAM>
                </PARAMS>

                <RETURN type="HASH">
                    <PARAMS>
                        <PARAM name="body" type="STRING">
                            <DESC>The body of the HTTP response.</DESC>
                        </PARAM>
                        <PARAM name="headers" type="HASH">
                            <DESC>A hash containing the response headers.</DESC>
                        </PARAM>
                        <PARAM name="cookies" type="STRING">
                            <DESC>The server cookies, parsed and usable for subsequent requests.</DESC>
                        </PARAM>
                        <PARAM name="http_error" type="INTEGER">
                            <DESC>HTTP error code if response code was not 200.</DESC>
                        </PARAM>
                    </PARAMS>
                </RETURN>

            </METHOD>

            <METHOD name="hasNetwork">
                <DESC>Is device connected to the network.</DESC>
                <RETURN  type="BOOLEAN"/>
            </METHOD>
            <METHOD name="hasWifiNetwork">
                <DESC>Is device connected to the wifi network</DESC>
                <RETURN  type="BOOLEAN"/>
            </METHOD>
            <METHOD name="hasCellNetwork">
                <DESC>Is device connected to the cell network.</DESC>
                <RETURN  type="BOOLEAN"/>
            </METHOD>

            <METHOD name="startStatusNotify" hasCallback="mandatory" runInThread="none">
                <DESC>Start network status notifications.</DESC>
                <PARAMS>
                    <PARAM name="pollInterval" type="INTEGER" default="20">
                        <DESC>The network status polling period for systems that can not notify network status change immediately.</DESC>
                        <CAN_BE_NIL/>
                    </PARAM>
                </PARAMS>
            </METHOD>

            <METHOD name="stopStatusNotify">
                <DESC>Stop network status notifications.</DESC>
            </METHOD>

            <METHOD name="detectConnection" hasCallback="mandatory" runInThread="none">
                <VER_INTRODUCED>4.0.0</VER_INTRODUCED>
                <DESC>Begins polling the specified host on the specified URL to check if there is a network connection available. The connection status is reported back via the provided callback.</DESC>
                <PARAMS>
                    <PARAM name="propertyMap" type="HASH" propertyHash="true">
                        <DESC>Properties map.</DESC>
                        <PARAMS>
							<PARAM name="host" type="STRING" default="www.motorolasolutions.com">
								<DESC>When detecting a network connection, this is the URL or IP address of the server to attempt to connect to</DESC>
							</PARAM>
							<PARAM name="port" type="INTEGER" default="80">
								<DESC>When detecting a network connection, this is the port on the host to connect to.</DESC>
							</PARAM>
							<PARAM name="pollInterval" type="INTEGER" default="30000">
								<DESC>The time, in milliseconds, between each check for a connection. Note that the actual connection report interval will be the sum of the poll interval and the detection timeout.  The minimum allowed value is 5000ms</DESC>
							</PARAM>
							<PARAM name="detectionTimeout" type="INTEGER" default="1000">
								<DESC>The amount of time to attempt to connect to the specified URL before giving up and assuming 'disconnected'.  Value is specified in milliseconds.</DESC>
							</PARAM>                       
                        </PARAMS>
                    </PARAM>
				</PARAMS>
				<CALLBACK  type="HASH">
					<DESC>Information related to the connection to the specified URL.</DESC>
					<PARAMS>
						<PARAM name="connectionInformation" type="STRING">
							<DESC>Whether the device is connected to the specified host and port.  Either 'Connected' or 'Disconnected'.</DESC>
						</PARAM>
						<PARAM name="failureMessage" type="STRING">
							<DESC>If the device is disconnected this field will contain information about why the connection failed.</DESC>
						</PARAM>
					</PARAMS>
				</CALLBACK>    
			</METHOD>
			
			<METHOD name="stopDetectingConnection" hasCallback="mandatory">
                <VER_INTRODUCED>4.0.0</VER_INTRODUCED>
                <DESC>Ceases the network detection identified by the given callback</DESC>
			</METHOD>
			
			<METHOD name="connectWan" hasCallback="mandatory">
                <DESC>Connects RhoElements through a Wide Area Network. The connection destination must be first configured through the Connection Manager and the destination name provided to this method. If a connection is already established, you must first call disconnectWan before attempting another connection. A list of available connection destinations is written to the log file when either connectWan or disconnectWan are first specified. Specify the connection as 'Internet' to use the default internet connection defined on the device. If the specified destination does not exist no connection attempt will be made and an entry will be made in the log file.</DESC>
				<PLATFORM>WM</PLATFORM>
				<APPLIES>This method only applies to platforms with the Windows connection manager</APPLIES>
                <VER_INTRODUCED>1.0.3</VER_INTRODUCED>
				<PARAMS>
					<PARAM name="connectionDestination" type="STRING">
						<DESC>The connection in the Windows Connection manager to use, specify 'Internet' to use the default internet connection.</DESC>
					</PARAM>                     
				</PARAMS>
				<CALLBACK  type="HASH">
					<DESC>Notifies the user whenever any parameter associated with data connectivity changes.  This callback is called when the connectWan method is first called (for the initial state) and again whenever any of the associated parameters change.</DESC>
					<PARAMS>
						<PARAM name="phoneSignalStrength" type="STRING">
							<DESC>The signal strength of the phone as a percentage of maximum strength. Returned as a number between 0 and 100. If there is no phone service this field will be 0.</DESC>
						</PARAM>
						<PARAM name="networkOperator" type="STRING">
							<DESC>The name of the current network operator associated with the SIM card</DESC>
						</PARAM>
						<PARAM name="connectionTypeAvailable" type="STRING">
							<DESC>The current data connection type available to RhoElements as provided by the Network. Values can be 'Unavailable', GPRS, 1XRTT, EVDO, EDGE, UMTS, EVDV or HSDPA</DESC>
						</PARAM>
						<PARAM name="connectionTypeConnected" type="STRING">
							<DESC>The data connection type to which Rhoelements is currently connected. The values returned are identical to connectionTypeAvailable, with the exception that 'Not Connected' replaces 'Unavailable'.</DESC>
						</PARAM>
						<PARAM name="connectionManagerMessage" type="STRING">
							<DESC>This is the last received status from the Connection Manager. Do NOT use this parameter to determine if you are able to physically send / receive data to a remote host, it only provides an indication of whether the Connection Manager believes the connection is available. To determine if you are connected to a remote host use the detectConnection method.</DESC>
						</PARAM>
					</PARAMS>
				</CALLBACK>    
			</METHOD>
			
			<METHOD name="disconnectWan" hasCallback="none" runInThread="separate">
                <VER_INTRODUCED>1.0.3</VER_INTRODUCED>
                <DESC>Disconnects the current WAN connection. DisconnectWan will only affect connections established by RhoElements so if you have not previously called connectWan this function will have no effect.</DESC>
				<PLATFORM>WM</PLATFORM>
				<APPLIES>This method only applies to platforms with the Windows connection manager</APPLIES>
			</METHOD>

        </METHODS>
        
        <VER_INTRODUCED>1.0.0</VER_INTRODUCED>
        <PLATFORM>
            <!--  This section is used for the supported platform images at the top -->
        </PLATFORM>
        <REMARKS>
            <REMARK title="Detecting a connection through proxies">
                <DESC>
                    <![CDATA[
Because the detectConnection method is protocol agnostic, it will not communicate through HTTP proxies to reach a specified URL. In order to determine if you are connected when sitting behind a proxy you should call the method to attempt to connect to your proxy on the appropriate port. A successful connection to the proxy should be taken to assume the device is connected to a network. When configuring your WAN connection bear in mind that the proxy settings defined in the RhoElements configuration file will take precedence.
                ]]>

                </DESC>
            </REMARK>
            <REMARK title="Detecting a connection over WAN">
                <DESC>
                    <![CDATA[
When detecting a network connection over WAN bear in mind if you specify a low networkPollInterval your device will frequently have an active data connection and may prevent the device occasionally from accepting incoming calls.
                    ]]>

                </DESC>
            </REMARK>
            <REMARK title="Preventing access to the device (WEH / WM)">
                <DESC>
                    <![CDATA[
Receiving phone calls or texts whilst running RhoElements will cause the start button to be displayed on Windows Embedded Handheld devices, potentially offering users access to the operating system. It is recommended to set the following registry keys to disable Operating System access on Windows Embedded Handheld as required. The registry keys will be applied after a warm boot, omit them entirely to restore the Start and 'X' icons.

<pre>
[HKEY_LOCAL_MACHINE\Software\Microsoft\Shell\BubbleTiles]   Location in Registry
"HardwareStartKeyEnabled"=dword:00000001                    Prevents the Start icon from appearing in the bottom left
"HardwareDoneKeyEnabled"=dword:00000001                     Prevents the 'X' icon from appearing in the bottom right
</pre>

                    ]]>

                </DESC>
            </REMARK>
        </REMARKS>
        <EXAMPLES >
            <EXAMPLE title="Detecting a Network Connection">
                <SECTIONS>
					<SECTION>
					<DESC>
						This code example shows how you would detect if your device is connected to an external website
					</DESC>
					<CODE lang='ruby'>
				<![CDATA[
	#/app/Model
	def index
		networkProps = Hash.new
		networkProps['host'] = 'www.motorolasolutions.com'
		networkProps['port'] = '80'
		networkProps['pollInterval'] = 10000
		networkProps['detectionTimeout'] = 1000	
		Rho::Network.detectConnection(networkProps, url_for(:action => :connectionEvent))  	
	end

	 def connectionEvent
		puts "ConnectionEvent Called #{@params}"
		if @params['connectionInformation'] == 'Disconnected'
			Alert.show_popup "Connection Lost"
		else
			Alert.show_popup "Connection Restored"
		end
	  end
						]]>
					</CODE>
					</SECTION>
                </SECTIONS>
            </EXAMPLE>
        </EXAMPLES>
    </MODULE>
</API>    