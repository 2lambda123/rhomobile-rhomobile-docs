<?xml version = "1.0"?>
<?xml-stylesheet type="text/xsl" href="pb_help.xsl"?>
<API>
    <MODULE name="NetworkAccess" parent="Rho">
        <HELP_OVERVIEW>is used to either navigate to a URL or call a javascript function when an attached card reader decodes data.</HELP_OVERVIEW>
        <MORE_HELP>Only the foreground RhoElements application is given access to the card reader hardware, when an application is sent to the background its state will be saved and it will automatically relinquish control of the card reader.  When brought back to the foreground, an application previously using the card reader will have its previous configuration (eg. pinTimeout) reapplied to the card reader automatically.</MORE_HELP>
        
        <TEMPLATES>
        </TEMPLATES>

        <PROPERTIES access="STATIC" generateAccessors="false">
            <DESC>object supports this properties bla bla bla :</DESC>

            <ALIASES>
                <ALIAS new="ssl_verify_peer" existing="verifyPeerCertificate" deprecated="true"/>
                <ALIAS new="http_command" existing="httpVerb" deprecated="true"/>
            </ALIASES>

            <PROPERTY name="url" type="STRING">
                <DESC>URL of the request.</DESC>
            </PROPERTY>

            <PROPERTY name="authType" type="STRING">
                <DESC>URL of the request.</DESC>
                <VALUES>
                    <VALUE constName="AUTH_BASIC" value ="basic">
                        <DESC></DESC>
                    </VALUE>
                </VALUES>
            </PROPERTY>
            <PROPERTY name="authUser" type="STRING">
                <DESC>User name for basic authentication.</DESC>
            </PROPERTY>
            <PROPERTY name="authPassword" type="STRING">
                <DESC>Password for basic authentication.</DESC>
            </PROPERTY>
            <PROPERTY name="verifyPeerCertificate" type="BOOLEAN" default="true">
                <DESC>Verify SSL certificates.</DESC>
            </PROPERTY>
            <PROPERTY name="httpVerb" type="STRING">
                <DESC>Password for basic authentication.</DESC>
            </PROPERTY>
            <PROPERTY name="headers" type="HASH">
                <DESC>Request HTTP headers.</DESC>
            </PROPERTY>
        </PROPERTIES>

        <METHODS  access="STATIC">
            <ALIASES>
            </ALIASES>

            <METHOD name="cancel" hasCallback="optional" runInThread="none">
                <DESC>Cancel the request identified by callback. If callback is mossed then all requests will be cancelled.</DESC>
                <CALLBACK optional="true"/>
            </METHOD>

            <METHOD name="downloadFile" hasCallback="optional"  propertyHash="true">
                <DESC>Download a file to the specified filename.</DESC>
                <PARAMS>
                    <PARAM name="propertyMap" type="HASH">
                        <DESC>Properties map.</DESC>
                        <PARAMS>
                            <PARAM name="filename" type="STRING">
                                <DESC>The path and name of the file to be uploaded.</DESC>
                            </PARAM>
                        </PARAMS>
                    </PARAM>
                </PARAMS>

                <CALLBACK optional="false">
                    <PARAMS>
                        <PARAM name="body" type="STRING">
                            <DESC>The body of the HTTP response.</DESC>
                        </PARAM>
                        <PARAM name="headers" type="HASH">
                            <DESC>A hash containing the response headers.</DESC>
                        </PARAM>
                        <PARAM name="cookies" type="STRING">
                            <DESC>The server cookies, parsed and usable for subsequent requests.</DESC>
                        </PARAM>
                        <PARAM name="http_error" type="INTEGER">
                            <DESC>HTTP error code if response code was not 200.</DESC>
                        </PARAM>
                    </PARAMS>
                </CALLBACK>

            </METHOD>

            <METHOD name="get" hasCallback="optional">
                <DESC>Perform an HTTP GET request.</DESC>
                <PARAMS>
                    <PARAM name="propertyMap" type="HASH" propertyHash="true">
                        <DESC>Properties map.</DESC>
                    </PARAM>
                </PARAMS>

                <CALLBACK optional="false">
                    <PARAMS>
                        <PARAM name="body" type="STRING">
                            <DESC>The body of the HTTP response.</DESC>
                        </PARAM>
                        <PARAM name="headers" type="HASH">
                            <DESC>A hash containing the response headers.</DESC>
                        </PARAM>
                        <PARAM name="cookies" type="STRING">
                            <DESC>The server cookies, parsed and usable for subsequent requests.</DESC>
                        </PARAM>
                        <PARAM name="http_error" type="INTEGER">
                            <DESC>HTTP error code if response code was not 200.</DESC>
                        </PARAM>
                    </PARAMS>
                </CALLBACK>

            </METHOD>

            <METHOD name="post" hasCallback="optional">
                <DESC>Download a file to the specified filename.</DESC>
                <PARAMS>
                    <PARAM name="propertyMap" type="HASH" propertyHash="true">
                        <DESC>Properties map.</DESC>
                        <PARAMS>
                            <PARAM name="body" type="STRING">
                                <DESC>The message body of the HTTP request.</DESC>
                            </PARAM>
                        </PARAMS>
                    </PARAM>
                </PARAMS>

                <CALLBACK optional="false">
                    <PARAMS>
                        <PARAM name="body" type="STRING">
                            <DESC>The body of the HTTP response.</DESC>
                        </PARAM>
                        <PARAM name="headers" type="HASH">
                            <DESC>A hash containing the response headers.</DESC>
                        </PARAM>
                        <PARAM name="cookies" type="STRING">
                            <DESC>The server cookies, parsed and usable for subsequent requests.</DESC>
                        </PARAM>
                        <PARAM name="http_error" type="INTEGER">
                            <DESC>HTTP error code if response code was not 200.</DESC>
                        </PARAM>
                    </PARAMS>
                </CALLBACK>

            </METHOD>

            <METHOD name="uploadFile" hasCallback="optional">
                <DESC>Upload the specified file using HTTP POST.</DESC>
                <PARAMS>
                    <PARAM name="propertyMap" type="HASH" propertyHash="true">
                        <DESC>Properties map.</DESC>
                        <PARAMS>
                            <PARAM name="filename" type="STRING">
                                <DESC>The path and name of the file to be uploaded.</DESC>
                            </PARAM>
                            <PARAM name="body" type="STRING">
                                <DESC>The message body of the HTTP request.</DESC>
                            </PARAM>
                            <PARAM name="fileContentType" type="STRING">
                                <DESC>Content-Type header for the file, defaults to "application/octet-stream".</DESC>
                            </PARAM>
                            <PARAM name="multipart" type="ARRAY">
                                <DESC>Array of hashes containing file information.</DESC>
                                <PARAM type="HASH">
                                    <DESC>Multipart properties.</DESC>
                                    <PARAMS>
                                        <PARAM name="filename" type="STRING">
                                            <DESC>The path and name of the file to be uploaded.</DESC>
                                        </PARAM>
                                        <PARAM name="contentType" type="STRING">
                                            <DESC>Content-Type header, defaults to "application/octet-stream".</DESC>
                                        </PARAM>
                                        <PARAM name="filenameBase" type="STRING">
                                            <DESC>Base directory containing the :filename.</DESC>
                                        </PARAM>
                                        <PARAM name="name" type="STRING">
                                            <DESC>File type, defaults to "blob".</DESC>
                                        </PARAM>
                                    </PARAMS>
                                </PARAM>
                            </PARAM>    
                        </PARAMS>
                    </PARAM>
                </PARAMS>

                <CALLBACK optional="false">
                    <PARAMS>
                        <PARAM name="body" type="STRING">
                            <DESC>The body of the HTTP response.</DESC>
                        </PARAM>
                        <PARAM name="headers" type="HASH">
                            <DESC>A hash containing the response headers.</DESC>
                        </PARAM>
                        <PARAM name="cookies" type="STRING">
                            <DESC>The server cookies, parsed and usable for subsequent requests.</DESC>
                        </PARAM>
                        <PARAM name="http_error" type="INTEGER">
                            <DESC>HTTP error code if response code was not 200.</DESC>
                        </PARAM>
                    </PARAMS>
                </CALLBACK>

            </METHOD>

        </METHODS>
        
        <USER_OVERVIEW>
            <!--  More conversational style with INLINE SAMPLES, written in MarkDown -->
            <![CDATA[
    	The following example sets up the card reader to call a javascript function upon successful decoding. The javascript
    					function will be called 3 times, once with the raw card data, once with just the pan data extracted
    					from the raw card data, and once with the encrypted pan data if the pin has been supplied by the
    					user within 10s.:</DESC>
    				<html><head>
    
    				<script language="javascript" type="text/javascript">
    					function doTransaction(data, mode)
    					{
    						switch(mode) {
    						case 'CR':
    							alert('Card: '+data);
    							break;
    						case 'ENCDATA':
    							alert('Encoded data: '+data);
    							break;
    						case 'MESSAGE':
    							alert('Error: '+data);
    							break;
    						case 'PAN':
    							alert('PAN data: '+data);
    							alert('Please turn the unit over and enter the PIN');
    							break;
    						}
    					}
    				</script>
    				</head>
    				<body>
    				</body>
    				</html>
    
    				You must have the appropriate drivers installed on your device to use the CardReader.  You will see which drivers are installed in the RhoElements log file after you attempt to use any of the card reader functions in RhoElements.  All necessary drivers should be included as part of the platform for supported devices.
    
    				]]>
    
        </USER_OVERVIEW>
        <VER_INTRODUCED>1.0.0</VER_INTRODUCED>
        <PLATFORM>
            <!--  This section is used for the supported platform images at the top -->
        </PLATFORM>
    </MODULE>
</API>    