#Camera
<div class="btn-group"><a href="#Properties" class="btn"><i class="icon-list"></i> Properties<sup>&nbsp;19</sup></a><button href="#" class="btn dropdown-toggle" data-toggle="dropdown">  <span class="caret"></span>&nbsp;</button><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li><a href="#pcameraType" data-target="cPropertycameraType" class="autouncollapse"><span class="text-info">cameraType</span></a></li><li><a href="#pcaptureSound" data-target="cPropertycaptureSound" class="autouncollapse">captureSound</a></li><li><a href="#pcolorModel" data-target="cPropertycolorModel" class="autouncollapse"><span class="text-info">colorModel</span></a></li><li><a href="#pcompressionFormat" data-target="cPropertycompressionFormat" class="autouncollapse"><span class="text-info">compressionFormat</span></a></li><li><a href="#pdesiredHeight" data-target="cPropertydesiredHeight" class="autouncollapse"><span class="text-info">desiredHeight</span></a></li><li><a href="#pdesiredWidth" data-target="cPropertydesiredWidth" class="autouncollapse"><span class="text-info">desiredWidth</span></a></li><li><a href="#penableEditing" data-target="cPropertyenableEditing" class="autouncollapse"><span class="text-info">enableEditing</span></a></li><li><a href="#pfileName" data-target="cPropertyfileName" class="autouncollapse">fileName</a></li><li><a href="#pflashMode" data-target="cPropertyflashMode" class="autouncollapse"><span class="text-info">flashMode</span></a></li><li><a href="#pmaxHeight" data-target="cPropertymaxHeight" class="autouncollapse">maxHeight</a></li><li><a href="#pmaxWidth" data-target="cPropertymaxWidth" class="autouncollapse">maxWidth</a></li><li><a href="#poutputFormat" data-target="cPropertyoutputFormat" class="autouncollapse">outputFormat</a></li><li><a href="#ppreviewHeight" data-target="cPropertypreviewHeight" class="autouncollapse">previewHeight</a></li><li><a href="#ppreviewLeft" data-target="cPropertypreviewLeft" class="autouncollapse"><span class="text-info">previewLeft</span></a></li><li><a href="#ppreviewTop" data-target="cPropertypreviewTop" class="autouncollapse"><span class="text-info">previewTop</span></a></li><li><a href="#ppreviewWidth" data-target="cPropertypreviewWidth" class="autouncollapse">previewWidth</a></li><li><a href="#psaveToDeviceGallery" data-target="cPropertysaveToDeviceGallery" class="autouncollapse"><span class="text-info">saveToDeviceGallery</span></a></li><li><a href="#psupportedSizeList" data-target="cPropertysupportedSizeList" class="autouncollapse">supportedSizeList</a></li><li><a href="#puseSystemViewfinder" data-target="cPropertyuseSystemViewfinder" class="autouncollapse">useSystemViewfinder</a></li></ul></div><div class="btn-group"><a href="#Methods" class="btn"><i class="icon-cog"></i> Methods<sup>&nbsp;13</sub></a><a class="btn dropdown-toggle" data-toggle="dropdown" data-target="#" href="#Methods" >  <span class="caret"></span>&nbsp;</a><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li><a href="#mchoosePicture" data-target="cMethodchoosePicture" class="autouncollapse">choosePicture</a></li><li><a href="#mclearAllProperties" data-target="cMethodclearAllProperties" class="autouncollapse">clearAllProperties</a></li><li><a href="#menumerate" data-target="cMethodenumerate" class="autouncollapse">enumerate</a></li><li><a href="#mgetAllProperties" data-target="cMethodgetAllProperties" class="autouncollapse">getAllProperties</a></li><li><a href="#mgetCameraByType" data-target="cMethodgetCameraByType" class="autouncollapse">getCameraByType</a></li><li><a href="#mgetDefault" data-target="cMethodgetDefault" class="autouncollapse">getDefault</a></li><li><a href="#mgetProperties" data-target="cMethodgetProperties" class="autouncollapse">getProperties</a></li><li><a href="#mgetProperty" data-target="cMethodgetProperty" class="autouncollapse">getProperty</a></li><li><a href="#msaveImageToDeviceGallery" data-target="cMethodsaveImageToDeviceGallery" class="autouncollapse"><span class='text-info'>saveImageToDeviceGallery</span></a></li><li><a href="#msetDefault" data-target="cMethodsetDefault" class="autouncollapse">setDefault</a></li><li><a href="#msetProperties" data-target="cMethodsetProperties" class="autouncollapse">setProperties</a></li><li><a href="#msetProperty" data-target="cMethodsetProperty" class="autouncollapse">setProperty</a></li><li><a href="#mtakePicture" data-target="cMethodtakePicture" class="autouncollapse">takePicture</a></li></ul></div><div class="btn-group pull-right"><button class="btn" id="expandAll" data-toggle="tooltip" title="Expand/Collapse all"><i class="icon-th-list "></i>&nbsp;</button></div><div class="btn-group"><a href="#Examples" class="btn"><i class="icon-edit"></i> Examples<sup>&nbsp;6</sup></a><button href="#" class="btn dropdown-toggle" data-toggle="dropdown">  <span class="caret"></span>&nbsp;</button><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li><a href="#e0" data-target="eExample0" class="autouncollapse">Take picture with default camera</a></li><li><a href="#e1" data-target="eExample1" class="autouncollapse">Choose which camera to use when taking images</a></li><li><a href="#e2" data-target="eExample2" class="autouncollapse">Saving a picture to the device's gallery</a></li><li><a href="#e3" data-target="eExample3" class="autouncollapse">Control image properties</a></li><li><a href="#e4" data-target="eExample4" class="autouncollapse">Determine camera capabilities</a></li><li><a href="#e5" data-target="eExample5" class="autouncollapse">Select picture from device gallery</a></li></ul></div><div  >
The Camera API provides access to your device's Camera(s)Use this API to give users the ability to take a photo via one of the device's cameras and return it to the application.  Photos can either be stored on the device and optionally transfered to an online server using the Network API or can be returned as a DataURI object for storing or display.

<a name='Examples'></a>
<h2><i class='icon-edit'></i>Examples</h2>

<a name='e0'></a><div class='accordion property' id='e0'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cExample0"><strong>Take picture with default camera</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cExample0" class="accordion-body collapse in">  <div class="accordion-inner">

                   Take an image with as little code as possible, using all default values
               <ul class='nav nav-tabs' id='exI0-S0Tab'><li class='active'><a href='#exI0-S0JS' data-toggle='tab'>Javascript</a></li><li ><a href='#exI0-S0RUBY' data-toggle='tab'>Ruby</a></li></ul><div class='tab-content'><div class='tab-pane active' id='exI0-S0JS'><pre class='CodeRay'><code>:::javascript

           
function take_picture_with_default_camera() {
  // Capture an image from the default camera on the device, using the default image settings
  Rho.Camera.take_picture({}, picture_taken_callback);
}

function picture_taken_callback(params) {
  // Did we receive an image?
  if (params["status"]=="ok") {
    // Assuming we have an &lt;img id="#captured_image"&gt; tag, we will be able to see the image that was just captured
    $("#captured_image").attr("src", Rho.Application.expandDatabaseBlobFilePath(params["imageUri"]));
  }
}
                   
                 </code></pre></div><div class='tab-pane' id='exI0-S0RUBY'><pre class='CodeRay'><code>:::ruby

           
def take_picture_with_default_camera
  # Capture an image from the default camera on the device, using the default image settings
  Rho::Camera.take_picture({}, :picture_taken_callback)
end
  
def picture_taken_callback
  # Did we really take a picture?
  if (@params["status"]=="ok")
    # If so, show it
    Rho::WebView.navigate(url_for(:action =&gt; :show_picture, :query =&gt; {:image =&gt; Rho::Application.expandDatabaseBlobFilePath(@params["imageUri"])}))
  else
    # Otherwise we are done here
    Rho::WebView.navigate(url_for(:action =&gt; :index))
  end
end
                   
                 </code></pre></div></div>  </div></div></div></div><a name='e1'></a><div class='accordion property' id='e1'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cExample1"><strong>Choose which camera to use when taking images</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cExample1" class="accordion-body collapse in">  <div class="accordion-inner">

                   On devices with more than one camera, you can select which camera to use for taking pictures
               <ul class='nav nav-tabs' id='exI1-S0Tab'><li class='active'><a href='#exI1-S0JS' data-toggle='tab'>Javascript</a></li><li ><a href='#exI1-S0RUBY' data-toggle='tab'>Ruby</a></li></ul><div class='tab-content'><div class='tab-pane active' id='exI1-S0JS'><pre class='CodeRay'><code>:::javascript

           


&lt;div id="camera_list"&gt;
&lt;/div&gt;


var cameras = [];

function choose_camera() {
  // get all available cameras
  cameras = Rho.Camera.enumerate();

  // build an HTML list
  var cameraList = "&lt;ul&gt;";
       
  for (var cameraIndex=0; cameraIndex&lt;cameras.length; cameraIndex++) {
    var camera = cameras[cameraIndex];
    // Create a link for each camera with an onclick handler
    cameraList = cameraList +'&lt;li&gt;&lt;a href="#" class="take_picture_with_selected_camera" onclick="take_picture_with_camera('+cameraIndex+')"&gt;'+camera.cameraType+'&lt;/a&gt;&lt;/li&gt;';
  }
  
  cameraList = cameraList+"&lt;/ul&gt;";
  
  // make camera list visible to the user
  $("#camera_list").html(cameraList);
}

function take_picture_with_camera(cameraIndex) {
  var camera = cameras[cameraIndex];
  camera.take_picture({}, picture_taken_callback);
}
                   
                 </code></pre></div><div class='tab-pane' id='exI1-S0RUBY'><pre class='CodeRay'><code>:::ruby

           

# controller.rb
def choose_camera
  $cameras = Rho::Camera.enumerate
  render
end

def take_picture_using_chosen_camera
  camera = $cameras[@params["cameraIndex"].to_i]
  camera.take({}, url_for(:action =&gt; :picture_taken_callback))
end


# choose_camera.erb
&lt;ul data-role="listview"&gt;
  &lt;% $cameras.each_with_index do |camera, index| %&gt;
    &lt;li&gt;&lt;a href="&lt;%= url_for(:action =&gt; :take_picture_using_chosen_camera, :query =&gt; {:camera_index =&gt; index}) %&gt;"&gt;&lt;%= camera.cameraType %&gt;&lt;/li&gt; 
  &lt;% end %&gt;
&lt;/ul&gt;
                   
                 </code></pre></div></div>  </div></div></div></div><a name='e2'></a><div class='accordion property' id='e2'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cExample2"><strong>Saving a picture to the device's gallery</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cExample2" class="accordion-body collapse in">  <div class="accordion-inner">

                   Apart from taking new pictures, you can also save images to the built-in gallery. In the following examples, the picture we are adding to the gallery is one that was just taken with the camera, but you can add any other image you can access by filename
               <ul class='nav nav-tabs' id='exI2-S0Tab'><li class='active'><a href='#exI2-S0JS' data-toggle='tab'>Javascript</a></li><li ><a href='#exI2-S0RUBY' data-toggle='tab'>Ruby</a></li></ul><div class='tab-content'><div class='tab-pane active' id='exI2-S0JS'><pre class='CodeRay'><code>:::javascript

           
function take_picture_and_save_it_to_gallery() {
  Rho.Camera.choose_picture({}, picture_taken_callback_save_to_gallery);
}

function picture_taken_callback_save_to_gallery(params) {
  if (params["status"]=="ok") {
    Rho.Camera.saveImageToDeviceGallery(Rho.Application.expandDatabaseBlobFilePath(params["imageUri"]));
      
    alert("Image saved to gallery");
  }
}
                   
                 </code></pre></div><div class='tab-pane' id='exI2-S0RUBY'><pre class='CodeRay'><code>:::ruby

           
def take_picture_and_save_it_to_gallery
  Rho::Camera.choose_picture({}, url_for(:action =&gt; :picture_taken_callback_save_to_gallery))    
end
  
def picture_taken_callback_save_to_gallery
  # Did we really take a picture?
  if (@params["status"]=="ok")
    # If so, save it to the gallery
    Rho::Camera.saveImageToDeviceGallery(Rho::Application.expandDatabaseBlobFilePath(@params["imageUri"]))
  end

  Rho::WebView.navigate(url_for(:action =&gt; :index))

end  
                   
                 </code></pre></div></div>  </div></div></div></div><a name='e3'></a><div class='accordion property' id='e3'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cExample3"><strong>Control image properties</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cExample3" class="accordion-body collapse in">  <div class="accordion-inner">

                   You can tweak multiple options to get an image exactly as you need it 
               <ul class='nav nav-tabs' id='exI3-S0Tab'><li class='active'><a href='#exI3-S0JS' data-toggle='tab'>Javascript</a></li><li ><a href='#exI3-S0RUBY' data-toggle='tab'>Ruby</a></li></ul><div class='tab-content'><div class='tab-pane active' id='exI3-S0JS'><pre class='CodeRay'><code>:::javascript

           
function control_image_properties() {
  // Instead of accepting the defaults, let's set some properties to our liking
  
  // We will ask for a PNG file...
  Rho.Camera.compressionFormat = "png";
  
  // ...a particular image size...
  Rho.Camera.desiredWidth = 1024;
  Rho.Camera.desiredHeight = 768;
  
  // ...and force the flash to be used
  Rho.Camera.flashMode = "on";
  
  // Now, take the picture
  Rho.Camera.take_picture({}, picture_taken_callback);      
}

function picture_taken_callback(params) {
  // Did we receive an image?
  if (params["status"]=="ok") {
    // show it in our &lt;img id="captured_image"&gt; tag
    $("#captured_image").attr("src", Rho.Application.expandDatabaseBlobFilePath(params["imageUri"]));
  }

}
                   
                 </code></pre></div><div class='tab-pane' id='exI3-S0RUBY'><pre class='CodeRay'><code>:::ruby

           
def control_image_properties
  # Instead of accepting the defaults, let's set some properties to our liking
    
  # We will ask for a PNG file...
  Rho::Camera.compressionFormat = "png"
    
  # ...a particular image size...
  Rho::Camera.desiredWidth = 1024
  Rho::Camera.desiredHeight = 768
    
  # ...and force the flash to be used
  Rho::Camera.flashMode = "on"
    
  # Now, take the picture
  Rho::Camera.take_picture({}, :picture_taken_callback)    
end

def picture_taken_callback
  # Did we really take a picture?
  if (@params["status"]=="ok")
    # If so, show it
    Rho::WebView.navigate(url_for(:action =&gt; :show_picture, :query =&gt; {:image =&gt; Rho::Application.expandDatabaseBlobFilePath(@params["imageUri"])}))
  else
    # Otherwise we are done here
    Rho::WebView.navigate(url_for(:action =&gt; :index))
  end
end
                   
                 </code></pre></div></div>  </div></div></div></div><a name='e4'></a><div class='accordion property' id='e4'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cExample4"><strong>Determine camera capabilities</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cExample4" class="accordion-body collapse in">  <div class="accordion-inner">

                   You can get all available camera properties in a single call
               <ul class='nav nav-tabs' id='exI4-S0Tab'><li class='active'><a href='#exI4-S0JS' data-toggle='tab'>Javascript</a></li><li ><a href='#exI4-S0RUBY' data-toggle='tab'>Ruby</a></li></ul><div class='tab-content'><div class='tab-pane active' id='exI4-S0JS'><pre class='CodeRay'><code>:::javascript

           
function determine_camera_capabilities() {
  var capabilitiesList = "&lt;ul&gt;"; 

  // Get all capabilities of the camera...
  var capabilities = Rho.Camera.getAllProperties();

  // ... compose a nicely formatted list with their names and values ...
  for (var capability in capabilities) {
    capabilitiesList+="&lt;li&gt;"+capability+": "+capabilities[capability]+"&lt;/li&gt;";
  }

  capabilitiesList += "&lt;/ul&gt;";
  
  // ... and show it
  $("#camera_capabilities").html(capabilitiesList);
}
                   
                 </code></pre></div><div class='tab-pane' id='exI4-S0RUBY'><pre class='CodeRay'><code>:::ruby

           
# controller.rb

def determine_camera_capabilities
  # Get all camera properties
  @properties = Rho::Camera.getAllProperties
  render
end

# determine_camera_capabilities.erb
    &lt;ul data-role="listview"&gt;
    
    &lt;% @properties.each_pair do |name,value| %&gt;
      &lt;li&gt;&lt;%= name %&gt; : &lt;%= value %&gt;&lt;/li&gt;
    &lt;% end %&gt;

    &lt;/ul&gt;
                   
                 </code></pre></div></div>  </div></div></div></div><a name='e5'></a><div class='accordion property' id='e5'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cExample5"><strong>Select picture from device gallery</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cExample5" class="accordion-body collapse in">  <div class="accordion-inner">

                   Apart from taking new pictures, the Camera API also lets you access existing images on the device's gallery
               <ul class='nav nav-tabs' id='exI5-S0Tab'><li class='active'><a href='#exI5-S0JS' data-toggle='tab'>Javascript</a></li><li ><a href='#exI5-S0RUBY' data-toggle='tab'>Ruby</a></li></ul><div class='tab-content'><div class='tab-pane active' id='exI5-S0JS'><pre class='CodeRay'><code>:::javascript

           
function select_picture_from_gallery() {
  Rho.Camera.choose_picture({}, picture_taken_callback);
}

function picture_taken_callback(params) {
  // Did we receive an image?
  if (params["status"]=="ok") {
    // Show it in an &lt;img&gt; tag
    $("#captured_image").attr("src", Rho.Application.expandDatabaseBlobFilePath(params["imageUri"]));
  }
}
                   
                 </code></pre></div><div class='tab-pane' id='exI5-S0RUBY'><pre class='CodeRay'><code>:::ruby

           
def select_picture_from_gallery 
  Rho::Camera.choose_picture({}, url_for(:action =&gt; :picture_taken_callback))
end

def picture_taken_callback
  # Did we really take a picture?
  if (@params["status"]=="ok")
    # If so, show it
    Rho::WebView.navigate(url_for(:action =&gt; :show_picture, :query =&gt; {:image =&gt; Rho::Application.expandDatabaseBlobFilePath(@params["imageUri"])}))
  else
    # Otherwise we are done here
    Rho::WebView.navigate(url_for(:action =&gt; :index))
  end
end
                   
                 </code></pre></div></div>  </div></div></div></div>
<a name='Properties'></a>
<h2><i class='icon-list'></i>Properties</h2>

<a name='pcameraType'></a><div class='accordion property' id='pcameraType'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertycameraType"><strong><span class="text-info">cameraType</span></strong> : <span class='text-info'>STRING</span> <span class='label'>Read Only</span> <i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertycameraType" class="accordion-body collapse in">  <div class="accordion-inner"><span class='label label-info'>Replaces:camera_type</span> camera type: back or front.<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> </p></div><p><strong>Default:</strong> main</p><p><a href="#cameraTypeUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><strong>Possible Values</strong> (<span class='text-info'>STRING</span>):</p> <dt>back</dt><dd>back camera</dt><dt>front</dt><dd>front camera</dt></dl><p><div id="cameraTypeUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.cameraType</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby


# Getting one property
myvar = Rho::Camera.getProperty('cameraType')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['cameraType' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript


# Getting one property
myvar = Rho.Camera.getProperty('cameraType');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['cameraType' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='pcaptureSound'></a><div class='accordion property' id='pcaptureSound'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertycaptureSound"><strong>captureSound</strong> : <span class='text-info'>STRING</span>  <span class='muted pull-right'>4.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertycaptureSound" class="accordion-body collapse in">  <div class="accordion-inner">Path to a sound file resident on the device which will be played when the image is captured.<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"> </p></div><p><a href="#captureSoundUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="captureSoundUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.captureSound</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.captureSound='some string'
# Setting one property
Rho::Camera.setProperty :captureSound, 'some string' 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :captureSound => 'some string' , :another_property => 'some string'}

# Getting one property
myvar = Rho::Camera.getProperty('captureSound')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['captureSound' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.captureSound='some string';
# Setting one property
Rho.Camera.setProperty('captureSound','some string');
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :captureSound:'some string' , :another_property:'some string'});

# Getting one property
myvar = Rho.Camera.getProperty('captureSound');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['captureSound' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='pcolorModel'></a><div class='accordion property' id='pcolorModel'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertycolorModel"><strong><span class="text-info">colorModel</span></strong> : <span class='text-info'>STRING</span>  <span class='muted pull-right'>2.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertycolorModel" class="accordion-body collapse in">  <div class="accordion-inner"><span class='label label-info'>Replaces:color_model</span> Where supported by the hardware this property can be used to select whether to capture a color or a grayscale image.<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"> </p></div><p><strong>Default:</strong> rgb</p><p><a href="#colorModelUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><strong>Possible Values</strong> (<span class='text-info'>STRING</span>):</p> <dt>rgb</dt><dd>A colour image is captured.</dt><dt>grayscale</dt><dd>A grayscale image is captured.</dt></dl><p><div id="colorModelUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.colorModel</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.colorModel='some string'
# Setting one property
Rho::Camera.setProperty :colorModel, 'some string' 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :colorModel => 'some string' , :another_property => 'some string'}

# Getting one property
myvar = Rho::Camera.getProperty('colorModel')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['colorModel' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.colorModel='some string';
# Setting one property
Rho.Camera.setProperty('colorModel','some string');
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :colorModel:'some string' , :another_property:'some string'});

# Getting one property
myvar = Rho.Camera.getProperty('colorModel');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['colorModel' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='pcompressionFormat'></a><div class='accordion property' id='pcompressionFormat'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertycompressionFormat"><strong><span class="text-info">compressionFormat</span></strong> : <span class='text-info'>STRING</span>  <span class='muted pull-right'>4.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertycompressionFormat" class="accordion-body collapse in">  <div class="accordion-inner"><span class='label label-info'>Replaces:format</span> The format of the captured image in subsequent calls to takePicture().  If you do not define this property when you use choose_picture with iOS, the type of image in Gallery will be recognized, and the same format will be used for saving the image to applications data.<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> (JPG is supported on all devices, Android and Windows Mobile does not support PNG images)</p></div><p><strong>Default:</strong> jpg</p><p><a href="#compressionFormatUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><strong>Possible Values</strong> (<span class='text-info'>STRING</span>):</p> <dt>jpg</dt><dd>JPG compression</dt><dt>png</dt><dd>PNG compression</dt></dl><p><div id="compressionFormatUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.compressionFormat</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.compressionFormat='some string'
# Setting one property
Rho::Camera.setProperty :compressionFormat, 'some string' 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :compressionFormat => 'some string' , :another_property => 'some string'}

# Getting one property
myvar = Rho::Camera.getProperty('compressionFormat')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['compressionFormat' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.compressionFormat='some string';
# Setting one property
Rho.Camera.setProperty('compressionFormat','some string');
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :compressionFormat:'some string' , :another_property:'some string'});

# Getting one property
myvar = Rho.Camera.getProperty('compressionFormat');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['compressionFormat' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='pdesiredHeight'></a><div class='accordion property' id='pdesiredHeight'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertydesiredHeight"><strong><span class="text-info">desiredHeight</span></strong> : <span class='text-info'>INTEGER</span>  <span class='muted pull-right'>2.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertydesiredHeight" class="accordion-body collapse in">  <div class="accordion-inner"><span class='label label-info'>Replaces:desired_height</span> Camera hardware is limited to taking photos in a finite number of resolutions, eg 2048x1536, 640x480 etc.  Specifying a desiredHeight will request to take the photo with the specified height but if it is not supported by the hardware then the closest match will be selected.  The callback received when a photo is taken contains the actual resolution of the captured photo.<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> </p></div><p><a href="#desiredHeightUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="desiredHeightUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.desiredHeight</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.desiredHeight=0
# Setting one property
Rho::Camera.setProperty :desiredHeight, 0 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :desiredHeight => 0 , :another_property => 0}

# Getting one property
myvar = Rho::Camera.getProperty('desiredHeight')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['desiredHeight' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.desiredHeight=0;
# Setting one property
Rho.Camera.setProperty('desiredHeight',0);
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :desiredHeight:0 , :another_property:0});

# Getting one property
myvar = Rho.Camera.getProperty('desiredHeight');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['desiredHeight' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='pdesiredWidth'></a><div class='accordion property' id='pdesiredWidth'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertydesiredWidth"><strong><span class="text-info">desiredWidth</span></strong> : <span class='text-info'>INTEGER</span>  <span class='muted pull-right'>2.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertydesiredWidth" class="accordion-body collapse in">  <div class="accordion-inner"><span class='label label-info'>Replaces:desired_width</span> Camera hardware is limited to taking photos in a finite number of resolutions, eg 2048x1536, 640x480 etc.  Specifying a desiredWidth will request to take the photo with the specified width but if it is not supported by the hardware then the closest match will be selected.  The callback received when a photo is taken contains the actual resolution of the captured photo.<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> </p></div><p><a href="#desiredWidthUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="desiredWidthUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.desiredWidth</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.desiredWidth=0
# Setting one property
Rho::Camera.setProperty :desiredWidth, 0 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :desiredWidth => 0 , :another_property => 0}

# Getting one property
myvar = Rho::Camera.getProperty('desiredWidth')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['desiredWidth' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.desiredWidth=0;
# Setting one property
Rho.Camera.setProperty('desiredWidth',0);
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :desiredWidth:0 , :another_property:0});

# Getting one property
myvar = Rho.Camera.getProperty('desiredWidth');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['desiredWidth' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='penableEditing'></a><div class='accordion property' id='penableEditing'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyenableEditing"><strong><span class="text-info">enableEditing</span></strong> : <span class='text-info'>BOOLEAN</span>  <span class='muted pull-right'>2.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertyenableEditing" class="accordion-body collapse in">  <div class="accordion-inner"><span class='label label-info'>Replaces:enable_editing</span> Enables post photo capture image customizing; image will captured reduced to screen size (not full size).<div><p><strong>Platforms: </strong><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"> </p></div><p><strong>Default:</strong> true</p><p><a href="#enableEditingUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="enableEditingUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.enableEditing</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.enableEditing=true
# Setting one property
Rho::Camera.setProperty :enableEditing, true 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :enableEditing => true , :another_property => true}

# Getting one property
myvar = Rho::Camera.getProperty('enableEditing')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['enableEditing' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.enableEditing=true;
# Setting one property
Rho.Camera.setProperty('enableEditing',true);
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :enableEditing:true , :another_property:true});

# Getting one property
myvar = Rho.Camera.getProperty('enableEditing');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['enableEditing' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='pfileName'></a><div class='accordion property' id='pfileName'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyfileName"><strong>fileName</strong> : <span class='text-info'>STRING</span>  <span class='muted pull-right'>4.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertyfileName" class="accordion-body collapse in">  <div class="accordion-inner">The path without filename extension to store captured image in subsequent calls to takePicture(). The filename extension will be added automatically according to compressionFormat property value.<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> </p></div><p><a href="#fileNameUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="fileNameUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.fileName</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.fileName='some string'
# Setting one property
Rho::Camera.setProperty :fileName, 'some string' 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :fileName => 'some string' , :another_property => 'some string'}

# Getting one property
myvar = Rho::Camera.getProperty('fileName')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['fileName' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.fileName='some string';
# Setting one property
Rho.Camera.setProperty('fileName','some string');
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :fileName:'some string' , :another_property:'some string'});

# Getting one property
myvar = Rho.Camera.getProperty('fileName');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['fileName' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='pflashMode'></a><div class='accordion property' id='pflashMode'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyflashMode"><strong><span class="text-info">flashMode</span></strong> : <span class='text-info'>STRING</span>  <span class='muted pull-right'>2.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertyflashMode" class="accordion-body collapse in">  <div class="accordion-inner"><span class='label label-info'>Replaces:flash_mode</span> Specifies the flash behaviour when taking a picture<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"> </p></div><p><a href="#flashModeUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><strong>Possible Values</strong> (<span class='text-info'>STRING</span>):</p> <dt>on</dt><dd>Flash will be used</dt><dt>off</dt><dd>Flash will not be used</dt><dt>auto</dt><dd>Flash will be used if lighting conditions deem it necessary</dt><dt>redEye</dt><dd>Flash with red eye reduction is used</dt><dt>torch</dt><dd>The flash is turned on in torch mode</dt></dl><p><div id="flashModeUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.flashMode</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.flashMode='some string'
# Setting one property
Rho::Camera.setProperty :flashMode, 'some string' 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :flashMode => 'some string' , :another_property => 'some string'}

# Getting one property
myvar = Rho::Camera.getProperty('flashMode')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['flashMode' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.flashMode='some string';
# Setting one property
Rho.Camera.setProperty('flashMode','some string');
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :flashMode:'some string' , :another_property:'some string'});

# Getting one property
myvar = Rho.Camera.getProperty('flashMode');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['flashMode' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='pmaxHeight'></a><div class='accordion property' id='pmaxHeight'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertymaxHeight"><strong>maxHeight</strong> : <span class='text-info'>INTEGER</span> <span class='label'>Read Only</span> <i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertymaxHeight" class="accordion-body collapse in">  <div class="accordion-inner">The maximum height of images which can be captured.<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"> </p></div><p><a href="#maxHeightUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="maxHeightUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.maxHeight</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby


# Getting one property
myvar = Rho::Camera.getProperty('maxHeight')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['maxHeight' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript


# Getting one property
myvar = Rho.Camera.getProperty('maxHeight');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['maxHeight' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='pmaxWidth'></a><div class='accordion property' id='pmaxWidth'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertymaxWidth"><strong>maxWidth</strong> : <span class='text-info'>INTEGER</span> <span class='label'>Read Only</span> <i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertymaxWidth" class="accordion-body collapse in">  <div class="accordion-inner">The maximum width of images which can be captured.<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"> </p></div><p><a href="#maxWidthUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="maxWidthUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.maxWidth</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby


# Getting one property
myvar = Rho::Camera.getProperty('maxWidth')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['maxWidth' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript


# Getting one property
myvar = Rho.Camera.getProperty('maxWidth');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['maxWidth' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='poutputFormat'></a><div class='accordion property' id='poutputFormat'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyoutputFormat"><strong>outputFormat</strong> : <span class='text-info'>STRING</span>  <span class='muted pull-right'>4.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertyoutputFormat" class="accordion-body collapse in">  <div class="accordion-inner">Specifies the way to return the captured image to the application<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"> </p></div><p><strong>Default:</strong> image</p><p><a href="#outputFormatUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><strong>Possible Values</strong> (<span class='text-info'>STRING</span>):</p> <dt>image</dt><dd>The captured image is stored on the device.  The callback associated with takePicture will contain the location of the image.</dt><dt>dataUri</dt><dd>Image will be returned as a Data URI object, this is a base 64 encoding of the image and can be used to easily embed the image on the page or store the image in a database.</dt></dl><p><div id="outputFormatUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.outputFormat</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.outputFormat='some string'
# Setting one property
Rho::Camera.setProperty :outputFormat, 'some string' 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :outputFormat => 'some string' , :another_property => 'some string'}

# Getting one property
myvar = Rho::Camera.getProperty('outputFormat')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['outputFormat' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.outputFormat='some string';
# Setting one property
Rho.Camera.setProperty('outputFormat','some string');
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :outputFormat:'some string' , :another_property:'some string'});

# Getting one property
myvar = Rho.Camera.getProperty('outputFormat');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['outputFormat' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='ppreviewHeight'></a><div class='accordion property' id='ppreviewHeight'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertypreviewHeight"><strong>previewHeight</strong> : <span class='text-info'>INTEGER</span>  <span class='muted pull-right'>4.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertypreviewHeight" class="accordion-body collapse in">  <div class="accordion-inner">In cases where the resident camera application on the device is not used this API is used to control the position of the viewfinder preview window when taking a photo.<div><p><strong>Platforms: </strong><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"> </p></div><p><a href="#previewHeightUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="previewHeightUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.previewHeight</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.previewHeight=0
# Setting one property
Rho::Camera.setProperty :previewHeight, 0 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :previewHeight => 0 , :another_property => 0}

# Getting one property
myvar = Rho::Camera.getProperty('previewHeight')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['previewHeight' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.previewHeight=0;
# Setting one property
Rho.Camera.setProperty('previewHeight',0);
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :previewHeight:0 , :another_property:0});

# Getting one property
myvar = Rho.Camera.getProperty('previewHeight');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['previewHeight' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='ppreviewLeft'></a><div class='accordion property' id='ppreviewLeft'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertypreviewLeft"><strong><span class="text-info">previewLeft</span></strong> : <span class='text-info'>INTEGER</span>  <span class='muted pull-right'>4.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertypreviewLeft" class="accordion-body collapse in">  <div class="accordion-inner"><span class='label label-info'>Replaces:left</span> In cases where the resident camera application on the device is not used this API is used to control the position of the viewfinder preview window when taking a photo.<div><p><strong>Platforms: </strong><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"> </p></div><p><a href="#previewLeftUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="previewLeftUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.previewLeft</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.previewLeft=0
# Setting one property
Rho::Camera.setProperty :previewLeft, 0 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :previewLeft => 0 , :another_property => 0}

# Getting one property
myvar = Rho::Camera.getProperty('previewLeft')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['previewLeft' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.previewLeft=0;
# Setting one property
Rho.Camera.setProperty('previewLeft',0);
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :previewLeft:0 , :another_property:0});

# Getting one property
myvar = Rho.Camera.getProperty('previewLeft');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['previewLeft' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='ppreviewTop'></a><div class='accordion property' id='ppreviewTop'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertypreviewTop"><strong><span class="text-info">previewTop</span></strong> : <span class='text-info'>INTEGER</span>  <span class='muted pull-right'>4.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertypreviewTop" class="accordion-body collapse in">  <div class="accordion-inner"><span class='label label-info'>Replaces:top</span> In cases where the resident camera application on the device is not used this API is used to control the position of the viewfinder preview window when taking a photo.<div><p><strong>Platforms: </strong><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"> </p></div><p><a href="#previewTopUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="previewTopUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.previewTop</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.previewTop=0
# Setting one property
Rho::Camera.setProperty :previewTop, 0 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :previewTop => 0 , :another_property => 0}

# Getting one property
myvar = Rho::Camera.getProperty('previewTop')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['previewTop' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.previewTop=0;
# Setting one property
Rho.Camera.setProperty('previewTop',0);
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :previewTop:0 , :another_property:0});

# Getting one property
myvar = Rho.Camera.getProperty('previewTop');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['previewTop' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='ppreviewWidth'></a><div class='accordion property' id='ppreviewWidth'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertypreviewWidth"><strong>previewWidth</strong> : <span class='text-info'>INTEGER</span>  <span class='muted pull-right'>4.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertypreviewWidth" class="accordion-body collapse in">  <div class="accordion-inner">In cases where the resident camera application on the device is not used this API is used to control the position of the viewfinder preview window when taking a photo.<div><p><strong>Platforms: </strong><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"> </p></div><p><a href="#previewWidthUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="previewWidthUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.previewWidth</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.previewWidth=0
# Setting one property
Rho::Camera.setProperty :previewWidth, 0 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :previewWidth => 0 , :another_property => 0}

# Getting one property
myvar = Rho::Camera.getProperty('previewWidth')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['previewWidth' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.previewWidth=0;
# Setting one property
Rho.Camera.setProperty('previewWidth',0);
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :previewWidth:0 , :another_property:0});

# Getting one property
myvar = Rho.Camera.getProperty('previewWidth');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['previewWidth' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='psaveToDeviceGallery'></a><div class='accordion property' id='psaveToDeviceGallery'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertysaveToDeviceGallery"><strong><span class="text-info">saveToDeviceGallery</span></strong> : <span class='text-info'>BOOLEAN</span>  <span class='muted pull-right'>2.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertysaveToDeviceGallery" class="accordion-body collapse in">  <div class="accordion-inner"><span class='label label-info'>Replaces:save_to_shared_gallery</span> If true, the picture you take will be added to the device photo gallery. At Android default value is true.<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"> </p></div><p><strong>Default:</strong> false</p><p><a href="#saveToDeviceGalleryUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="saveToDeviceGalleryUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.saveToDeviceGallery</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.saveToDeviceGallery=true
# Setting one property
Rho::Camera.setProperty :saveToDeviceGallery, true 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :saveToDeviceGallery => true , :another_property => true}

# Getting one property
myvar = Rho::Camera.getProperty('saveToDeviceGallery')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['saveToDeviceGallery' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.saveToDeviceGallery=true;
# Setting one property
Rho.Camera.setProperty('saveToDeviceGallery',true);
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :saveToDeviceGallery:true , :another_property:true});

# Getting one property
myvar = Rho.Camera.getProperty('saveToDeviceGallery');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['saveToDeviceGallery' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='psupportedSizeList'></a><div class='accordion property' id='psupportedSizeList'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertysupportedSizeList"><strong>supportedSizeList</strong> : <span class='text-info'>ARRAY</span> <span class='label'>Read Only</span> <i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertysupportedSizeList" class="accordion-body collapse in">  <div class="accordion-inner">{}<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"> </p></div><p><a href="#supportedSizeListUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="supportedSizeListUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.supportedSizeList</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby


# Getting one property
myvar = Rho::Camera.getProperty('supportedSizeList')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['supportedSizeList' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript


# Getting one property
myvar = Rho.Camera.getProperty('supportedSizeList');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['supportedSizeList' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div><a name='puseSystemViewfinder'></a><div class='accordion property' id='puseSystemViewfinder'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyuseSystemViewfinder"><strong>useSystemViewfinder</strong> : <span class='text-info'>BOOLEAN</span>  <span class='muted pull-right'>4.0.0</span><i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertyuseSystemViewfinder" class="accordion-body collapse in">  <div class="accordion-inner">Uses system Camera application to take a picture instead of rhodes camera. System Camera does not accept most rhodes camera settings and can be adjusted by UI.<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"> </p></div><p><strong>Default:</strong> false</p><p><a href="#useSystemViewfinderUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="useSystemViewfinderUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">Camera.useSystemViewfinder</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
Rho::Camera.useSystemViewfinder=true
# Setting one property
Rho::Camera.setProperty :useSystemViewfinder, true 
# Setting multiple properties using HASH
Rho::Camera.setProperties { :useSystemViewfinder => true , :another_property => true}

# Getting one property
myvar = Rho::Camera.getProperty('useSystemViewfinder')
# Getting multiple properties
myvar = Rho::Camera.getProperties(['useSystemViewfinder' , 'another_property'])</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
Rho.Camera.useSystemViewfinder=true;
# Setting one property
Rho.Camera.setProperty('useSystemViewfinder',true);
# Setting multiple properties using JSON object
Rho.Camera.setProperties({ :useSystemViewfinder:true , :another_property:true});

# Getting one property
myvar = Rho.Camera.getProperty('useSystemViewfinder');
# Getting multiple properties
myvar = Rho.Camera.getProperties(['useSystemViewfinder' , 'another_property']);</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div>
<a name='Methods'></a>
<h2><i class='icon-cog'></i>Methods</h2>

<div class="accordion" id="accordion"><div class='accordion method' id='mchoosePicture'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodchoosePicture"><strong data-toggle="tooltip" title data-original-title="Choose a picture from the album">choosePicture</strong>(<span class="text-info">HASH</span> propertyMap, <span class='text-info'>HASH</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodchoosePicture" class="accordion-body collapse in">  <div class="accordion-inner">Choose a picture from the album<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Parameters</strong></p><ul><li>propertyMap : <span class='text-info'>HASH</span> <span class='label label-info'>Optional</span><p>Provide a set of properties to configure an image, for example to specify the image size or color mode Not providing properties to this function will use the Camera's default properties, or those previlusly set on the Camera instance</p></li><li>callback : <span class='text-info'>HASH</span><p><p><a href="#choosePictureUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><div id="choosePictureUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">choosePicture Callback</h3>  </div>  <div class="modal-body"><p>The callback parameter can take on one of three forms</p><ol><li>Controller action URL<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.choosePicture(..., url_for :action => :mycallback)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.choosePicture(...,'/app/model/mycallback');</code></pre></li><li>Anonymous function:<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.choosePicture(...,lambda{ |e|
 puts e['status'] }
)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.choosePicture(...,function(e){
//Your code here
 alert(e.status);
};);</code></pre></li><li>Function<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.choosePicture(..., mycallback() )</code></pre><p>Javascript</p>
ok	<pre class='CodeRay'><code>:::javascript
Camera.choosePicture(..., mycallback());</code></pre></li></ol>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><strong>Callback Returning Parameters</strong></p><ul><li>status : <span class='text-info'>STRING</span><p>Whether or not the image was successfully chosen from the gallery.  The returned string will be one of 'ok', 'cancel' or 'error'.</p></li><li>imageUri : <span class='text-info'>STRING</span><p>The URI to the chosen image.</p></li><li>imageHeight : <span class='text-info'>INTEGER</span><p>The height of the image.</p></li><li>imageWidth : <span class='text-info'>INTEGER</span><p>The width of the image.</p></li><li>imageFormat : <span class='text-info'>STRING</span><p>The format of the image, either 'png' or 'jpg'.</p></li><li>message : <span class='text-info'>STRING</span><p>If the returned status is 'error' then this field will contain more information on the error.</p></li><li><span class="text-error">image_uri</span> : <span class='text-info'>STRING <span class='label label-important'>deprecated</span> </span><p>It is recommended to use imageUri in preference to this parameter</p></li><li><span class="text-error">image_height</span> : <span class='text-info'>INTEGER <span class='label label-important'>deprecated</span> </span><p>It is recommended to use imageHeight in preference to this parameter</p></li><li><span class="text-error">image_width</span> : <span class='text-info'>INTEGER <span class='label label-important'>deprecated</span> </span><p>It is recommended to use imageWidth in preference to this parameter</p></li><li><span class="text-error">image_format</span> : <span class='text-info'>STRING <span class='label label-important'>deprecated</span> </span><p>It is recommended to use imageFormat in preference to this parameter</p></li></ul></div>  </div></div></div></div><div class='accordion method' id='mclearAllProperties'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodclearAllProperties"><strong data-toggle="tooltip" title data-original-title="This is documentation">clearAllProperties</strong>()<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodclearAllProperties" class="accordion-body collapse in">  <div class="accordion-inner">This is documentation<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div>  </div></div></div></div><div class='accordion method' id='menumerate'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodenumerate"><strong data-toggle="tooltip" title data-original-title="Returns the cameras present on your device, allowing you to access your device's front or back camera.">enumerate</strong>(<span class='text-info'>OBJECT</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodenumerate" class="accordion-body collapse in">  <div class="accordion-inner">Returns the cameras present on your device, allowing you to access your device's front or back camera.<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Parameters</strong></p><ul><li>callback : <span class='text-info'>OBJECT</span> <span class='label label-info'>Optional</span> <p><p><a href="#enumerateUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><div id="enumerateUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">enumerate Callback</h3>  </div>  <div class="modal-body"><p>The callback parameter can take on one of three forms</p><ol><li>Controller action URL<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.enumerate( url_for :action => :mycallback)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.enumerate('/app/model/mycallback');</code></pre></li><li>Anonymous function:<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.enumerate(lambda{ |e|
 puts e['calbackreturnparamname'] }
)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.enumerate(function(e){
//Your code here
 alert(e.calbackreturnparamname);
};);</code></pre></li><li>Function<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.enumerate( mycallback() )</code></pre><p>Javascript</p>
ok	<pre class='CodeRay'><code>:::javascript
Camera.enumerate( mycallback());</code></pre></li></ol>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>ARRAY : Array of objects.</li></ul></div>  </div></div></div></div><div class='accordion method' id='mgetAllProperties'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodgetAllProperties"><strong data-toggle="tooltip" title data-original-title="This is documentation">getAllProperties</strong>(<span class='text-info'>OBJECT</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodgetAllProperties" class="accordion-body collapse in">  <div class="accordion-inner">This is documentation<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Parameters</strong></p><ul><li>callback : <span class='text-info'>OBJECT</span> <span class='label label-info'>Optional</span> <p><p><a href="#getAllPropertiesUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><div id="getAllPropertiesUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">getAllProperties Callback</h3>  </div>  <div class="modal-body"><p>The callback parameter can take on one of three forms</p><ol><li>Controller action URL<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.getAllProperties( url_for :action => :mycallback)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.getAllProperties('/app/model/mycallback');</code></pre></li><li>Anonymous function:<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.getAllProperties(lambda{ |e|
 puts e['calbackreturnparamname'] }
)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.getAllProperties(function(e){
//Your code here
 alert(e.calbackreturnparamname);
};);</code></pre></li><li>Function<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.getAllProperties( mycallback() )</code></pre><p>Javascript</p>
ok	<pre class='CodeRay'><code>:::javascript
Camera.getAllProperties( mycallback());</code></pre></li></ol>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>HASH : Map of all available properties<ul><li> : <span class='text-info'>STRING</span><p> </p></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mgetCameraByType'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodgetCameraByType"><strong data-toggle="tooltip" title data-original-title="Returns the camera of requested type if that camera exist - else return nil">getCameraByType</strong>(<span class="text-info">STRING</span> cameraType, <span class='text-info'>OBJECT</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodgetCameraByType" class="accordion-body collapse in">  <div class="accordion-inner">Returns the camera of requested type if that camera exist - else return nil<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Parameters</strong></p><ul><li>cameraType : <span class='text-info'>STRING</span><p>cameraType: main or front </p></li><li>callback : <span class='text-info'>OBJECT</span> <span class='label label-info'>Optional</span> <p><p><a href="#getCameraByTypeUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><div id="getCameraByTypeUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">getCameraByType Callback</h3>  </div>  <div class="modal-body"><p>The callback parameter can take on one of three forms</p><ol><li>Controller action URL<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.getCameraByType(..., url_for :action => :mycallback)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.getCameraByType(...,'/app/model/mycallback');</code></pre></li><li>Anonymous function:<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.getCameraByType(...,lambda{ |e|
 puts e['calbackreturnparamname'] }
)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.getCameraByType(...,function(e){
//Your code here
 alert(e.calbackreturnparamname);
};);</code></pre></li><li>Function<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.getCameraByType(..., mycallback() )</code></pre><p>Javascript</p>
ok	<pre class='CodeRay'><code>:::javascript
Camera.getCameraByType(..., mycallback());</code></pre></li></ol>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>SELF_INSTANCE : Camera with requested type or nil if not have requested type camera</li></ul></div>  </div></div></div></div><div class='accordion method' id='mgetDefault'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodgetDefault"><strong data-toggle="tooltip" title data-original-title="This is documentation">getDefault</strong>()<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodgetDefault" class="accordion-body collapse in">  <div class="accordion-inner">This is documentation<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Return:</strong></p><ul><li>SELF_INSTANCE : Default object of Module.</li></ul></div>  </div></div></div></div><div class='accordion method' id='mgetProperties'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodgetProperties"><strong data-toggle="tooltip" title data-original-title="This is documentation">getProperties</strong>(<span class="text-info">ARRAY</span> arrayofNames, <span class='text-info'>OBJECT</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodgetProperties" class="accordion-body collapse in">  <div class="accordion-inner">This is documentation<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Parameters</strong></p><ul><li>arrayofNames : <span class='text-info'>ARRAY</span><p>List of properties I want to know about </p></li><li>callback : <span class='text-info'>OBJECT</span> <span class='label label-info'>Optional</span> <p><p><a href="#getPropertiesUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><div id="getPropertiesUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">getProperties Callback</h3>  </div>  <div class="modal-body"><p>The callback parameter can take on one of three forms</p><ol><li>Controller action URL<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.getProperties(..., url_for :action => :mycallback)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.getProperties(...,'/app/model/mycallback');</code></pre></li><li>Anonymous function:<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.getProperties(...,lambda{ |e|
 puts e['calbackreturnparamname'] }
)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.getProperties(...,function(e){
//Your code here
 alert(e.calbackreturnparamname);
};);</code></pre></li><li>Function<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.getProperties(..., mycallback() )</code></pre><p>Javascript</p>
ok	<pre class='CodeRay'><code>:::javascript
Camera.getProperties(..., mycallback());</code></pre></li></ol>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>HASH : Map of properties I want to know about<ul><li> : <span class='text-info'>STRING</span><p> </p></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mgetProperty'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodgetProperty"><strong data-toggle="tooltip" title data-original-title="This is documentation">getProperty</strong>(<span class="text-info">STRING</span> propertyName, <span class='text-info'>OBJECT</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodgetProperty" class="accordion-body collapse in">  <div class="accordion-inner">This is documentation<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Parameters</strong></p><ul><li>propertyName : <span class='text-info'>STRING</span><p>The one property that I want to know about </p></li><li>callback : <span class='text-info'>OBJECT</span> <span class='label label-info'>Optional</span> <p><p><a href="#getPropertyUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><div id="getPropertyUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">getProperty Callback</h3>  </div>  <div class="modal-body"><p>The callback parameter can take on one of three forms</p><ol><li>Controller action URL<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.getProperty(..., url_for :action => :mycallback)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.getProperty(...,'/app/model/mycallback');</code></pre></li><li>Anonymous function:<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.getProperty(...,lambda{ |e|
 puts e['calbackreturnparamname'] }
)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.getProperty(...,function(e){
//Your code here
 alert(e.calbackreturnparamname);
};);</code></pre></li><li>Function<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.getProperty(..., mycallback() )</code></pre><p>Javascript</p>
ok	<pre class='CodeRay'><code>:::javascript
Camera.getProperty(..., mycallback());</code></pre></li></ol>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>STRING : The one property that I want to know about</li></ul></div>  </div></div></div></div><div class='accordion method' id='msaveImageToDeviceGallery'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodsaveImageToDeviceGallery"><strong data-toggle="tooltip" title data-original-title="<span class='label label-info'>Replaces:save_image_to_device_gallery</span> Save an image to the device gallery"><span class="text-info">saveImageToDeviceGallery</span></strong>(<span class="text-info">STRING</span> pathToImage)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodsaveImageToDeviceGallery" class="accordion-body collapse in">  <div class="accordion-inner"><span class='label label-info'>Replaces:save_image_to_device_gallery</span> Save an image to the device gallery<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"></p></div><div><p><strong>Parameters</strong></p><ul><li>pathToImage : <span class='text-info'>STRING</span><p>The real path to the image that is to be saved in the device gallery. You need to use the RhoApplication method get_blob_path to have the real path, such as Rho::RhoApplication::get_blob_path(img.image_uri). </p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div>  </div></div></div></div><div class='accordion method' id='msetDefault'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodsetDefault"><strong data-toggle="tooltip" title data-original-title="This is documentation">setDefault</strong>(<span class="text-info">SELF_INSTANCE</span> defaultInstance)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodsetDefault" class="accordion-body collapse in">  <div class="accordion-inner">This is documentation<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Parameters</strong></p><ul><li>defaultInstance : <span class='text-info'>SELF_INSTANCE</span><p>Default instance I want to set </p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div>  </div></div></div></div><div class='accordion method' id='msetProperties'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodsetProperties"><strong data-toggle="tooltip" title data-original-title="This is documentation">setProperties</strong>(<span class="text-info">HASH</span> propertyMap)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodsetProperties" class="accordion-body collapse in">  <div class="accordion-inner">This is documentation<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Parameters</strong></p><ul><li>propertyMap : <span class='text-info'>HASH</span><p>Map of properties I want to set </p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div>  </div></div></div></div><div class='accordion method' id='msetProperty'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodsetProperty"><strong data-toggle="tooltip" title data-original-title="This is documentation">setProperty</strong>(<span class="text-info">STRING</span> propertyName, <span class="text-info">STRING</span> propertyValue)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodsetProperty" class="accordion-body collapse in">  <div class="accordion-inner">This is documentation<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Parameters</strong></p><ul><li>propertyName : <span class='text-info'>STRING</span><p>The one property name that I want to set </p></li><li>propertyValue : <span class='text-info'>STRING</span><p>The one property value that I want to set </p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div>  </div></div></div></div><div class='accordion method' id='mtakePicture'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodtakePicture"><strong data-toggle="tooltip" title data-original-title="Start the camera appliction to take a picture.  The user can capture the displayed image either by interacting with the resident camera app or pressing the trigger or enter key, depending on the device in use.">takePicture</strong>(<span class="text-info">HASH</span> propertyMap, <span class='text-info'>HASH</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodtakePicture" class="accordion-body collapse in">  <div class="accordion-inner">Start the camera appliction to take a picture.  The user can capture the displayed image either by interacting with the resident camera app or pressing the trigger or enter key, depending on the device in use.<div><p><strong>Platforms: </strong><img src="../img/android.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Android"><img src="../img/ios.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="../img/windowsmobile.png" style="height: 33px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="../img/wp8.png" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Phone 8, Windows Embedded 8"><img src="../img/windows.jpg" style="width: 33px;padding-top: 8px" rel="tooltip" title="Windows Desktop"></p></div><div><p><strong>Parameters</strong></p><ul><li>propertyMap : <span class='text-info'>HASH</span> <span class='label label-info'>Optional</span><p>Provide a set of properties to configure the camera, for example to specify the flashMode or compressionFormat Not providing properties to this function will use the Camera's default properties, or those previlusly set on the Camera instance</p></li><li>callback : <span class='text-info'>HASH</span><p><p><a href="#takePictureUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><div id="takePictureUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">takePicture Callback</h3>  </div>  <div class="modal-body"><p>The callback parameter can take on one of three forms</p><ol><li>Controller action URL<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.takePicture(..., url_for :action => :mycallback)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.takePicture(...,'/app/model/mycallback');</code></pre></li><li>Anonymous function:<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.takePicture(...,lambda{ |e|
 puts e['status'] }
)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
Camera.takePicture(...,function(e){
//Your code here
 alert(e.status);
};);</code></pre></li><li>Function<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
Camera.takePicture(..., mycallback() )</code></pre><p>Javascript</p>
ok	<pre class='CodeRay'><code>:::javascript
Camera.takePicture(..., mycallback());</code></pre></li></ol>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><strong>Callback Returning Parameters</strong></p><ul><li>status : <span class='text-info'>STRING</span><p>Whether or not the image was successfully captured.  The returned string will be one of 'ok', 'cancel' or 'error'.</p></li><li>imageUri : <span class='text-info'>STRING</span><p>If the specified 'outputFormat' was 'image' then this field is the URI to the taken image stored on the device, this image will have an auto-generated name.  If the specified 'outputFormat' was 'dataUri' then this field will be the image encoded as a Data URI.</p></li><li>imageHeight : <span class='text-info'>INTEGER</span><p>The actual height of the image that was captured, this may differ from the requested height as the Camera will only support a finite number of resolutions.</p></li><li>imageWidth : <span class='text-info'>INTEGER</span><p>The actual width of the image that was captured, this may differ from the requested width as the Camera will only support a finite number of resolutions.</p></li><li>imageFormat : <span class='text-info'>STRING</span><p>The format in which the image was captured, either 'png' or 'jpg'.</p></li><li>message : <span class='text-info'>STRING</span><p>If the returned status is 'error' then this field will contain more information on the error.</p></li><li><span class="text-error">image_uri</span> : <span class='text-info'>STRING <span class='label label-important'>deprecated</span> </span><p>It is recommended to use imageUri in preference to this parameter</p></li><li><span class="text-error">image_height</span> : <span class='text-info'>INTEGER <span class='label label-important'>deprecated</span> </span><p>It is recommended to use imageHeight in preference to this parameter</p></li><li><span class="text-error">image_width</span> : <span class='text-info'>INTEGER <span class='label label-important'>deprecated</span> </span><p>It is recommended to use imageWidth in preference to this parameter</p></li><li><span class="text-error">image_format</span> : <span class='text-info'>STRING <span class='label label-important'>deprecated</span> </span><p>It is recommended to use imageFormat in preference to this parameter</p></li></ul></div>  </div></div></div></div></div></div>