#KeyCapture
<div class="btn-group"><a href="#Properties" class="btn"><i class="icon-list"></i> Properties<sup>&nbsp;1</sup></a><button href="#" class="btn dropdown-toggle" data-toggle="dropdown">  <span class="caret"></span>&nbsp;</button><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li><a href="#phomeKeyValue" data-target="cPropertyhomeKeyValue" class="autouncollapse">homeKeyValue</a></li></ul></div><div class="btn-group"><a href="#Methods" class="btn"><i class="icon-cog"></i> Methods<sup>&nbsp;3</sub></a><a class="btn dropdown-toggle" data-toggle="dropdown" data-target="#" href="#Methods" >  <span class="caret"></span>&nbsp;</a><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li><a href="#mcaptureKey" data-target="cMethodcaptureKey" class="autouncollapse">captureKey</a></li><li><a href="#mcaptureTrigger" data-target="cMethodcaptureTrigger" class="autouncollapse">captureTrigger</a></li><li><a href="#mremapKey" data-target="cMethodremapKey" class="autouncollapse">remapKey</a></li></ul></div><div class="btn-group pull-right"><button class="btn" id="expandAll" data-toggle="tooltip" title="Expand/Collapse all"><i class="icon-th-list "></i>&nbsp;</button></div><div class="btn-group"><a href="#Remarks" class="btn"><i class="icon-warning-sign"></i> Remarks<sup>&nbsp;2</sup></a><button href="#" class="btn dropdown-toggle" data-toggle="dropdown">  <span class="caret"></span>&nbsp;</button><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li><a href="#r0" data-target="rRemark0" class="autouncollapse">TODO - Include key capture table for function keys that is currently just under the configuration settings 

page.</a></li><li><a href="#r1" data-target="rRemark1" class="autouncollapse">TODO - ENSURE ALL OTHER REMARKS FROM RE1 HELP FILE ARE CAPTURED</a></li></ul></div><div class="btn-group"><a href="#Examples" class="btn"><i class="icon-edit"></i> Examples<sup>&nbsp;1</sup></a><button href="#" class="btn dropdown-toggle" data-toggle="dropdown">  <span class="caret"></span>&nbsp;</button><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li><a href="#e0" data-target="eExample0" class="autouncollapse">TODO - ADD EXAMPLES - THERE ARE LOTS IN THE RE1 HELP FILE</a></li></ul></div><div  >
todo.  This is for hardware keys, not software keys... note recommended to use with SIP.

<a name='Examples'></a>
<h2><i class='icon-edit'></i>Examples</h2>

<a name='e0'></a><div class='accordion property' id='e0'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cExample0"><strong>TODO - ADD EXAMPLES - THERE ARE LOTS IN THE RE1 HELP FILE</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cExample0" class="accordion-body collapse in">  <div class="accordion-inner">

						If you just want to display the keystate indicators in their default positions with size 25x25 pixels then call as follows
					
<pre class='CodeRay'><code>:::ruby
				
	  def show_keystates
		Rho::Keystate.showStates({width:25;height:25})
	  end
						
					<
></code></pre>  </div></div></div></div>
<a name='Properties'></a>
<h2><i class='icon-list'></i>Properties</h2>

<a name='phomeKeyValue'></a><div class='accordion property' id='phomeKeyValue'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyhomeKeyValue"><strong>homeKeyValue</strong> : <span class='text-info'>STRING</span>  <i class="icon-chevron-down pull-left"></i></span></div><div id="cPropertyhomeKeyValue" class="accordion-body collapse in">  <div class="accordion-inner">todo - Set to Disabled or the HomeKeyValue to be used.<p><strong>Default:</strong> Disabled</p><p><a href="#homeKeyValueUsage" class="btn" data-toggle="modal" title="View Usage">View Usage</a></p><p><div id="homeKeyValueUsage" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">  <div class="modal-header">    <h3 id="myModalLabel">KeyCapture.homeKeyValue</h3>  </div>  <div class="modal-body">

<strong>Ruby Usage</strong>

<pre class='CodeRay'><code>:::ruby
# Setting directly
KeyCapture.homeKeyValue='some string'</code></pre>

<strong>Javascript Usage</strong>

<pre class='CodeRay'><code>:::javascript

# Setting directly
KeyCapture.homeKeyValue='some string';</code></pre>  </div>  <div class="modal-footer">    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>  </div></div></p>  </div></div></div></div>
<a name='Methods'></a>
<h2><i class='icon-cog'></i>Methods</h2>

<div class="accordion" id="accordion"><div class='accordion method' id='mcaptureKey'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodcaptureKey"><strong data-toggle="tooltip" title data-original-title="todo.  If don't specify a callback then the value will be cleared - also add a return section.  ">captureKey</strong>(<span class="text-info">BOOLEAN</span> dispatch, <span class="text-info">STRING</span> keyValue, <span class='text-info'>Callback &lt;Object&gt;</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodcaptureKey" class="accordion-body collapse in">  <div class="accordion-inner">todo.  If don't specify a callback then the value will be cleared - also add a return section.  <div><p><strong>Parameters</strong></p><ul><li>dispatch : <span class='text-info'>BOOLEAN</span><p>todo </p></li><li>keyValue : <span class='text-info'>STRING</span><p>todo - (string.  Accept keys specified in hex or ALL).  Has to be a string for backwards compatibility.  Must be the numeric representation of that key, for hardware reasons. - use all keys to determine which key it is. </p></li><li>callback : <span class='text-info'>Callback &lt;Object&gt;</span> <span class='label label-info'>Optional</span> <p><p>The callback parameter can take on one of three forms</p><ol><li>Controller action URL<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
KeyCapture.captureKey(...., url_for :action => :mycallback)</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
KeyCapture.captureKey(....,'/app/model/mycallback');</code></pre></li><li>Anonymous function:<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
KeyCapture.captureKey(....,lambda{ 
|params| }
Proc.new{
 |params| })</code></pre><p>Javascript</p>
<pre class='CodeRay'><code>:::javascript
KeyCapture.captureKey(....,function(params){
//Your code here
};);</code></pre></li><li>Function<p>Ruby</p>
<pre class='CodeRay'><code>:::ruby
KeyCapture.captureKey(...., mycallback() )</code></pre><p>Javascript</p>
ok	<pre class='CodeRay'><code>:::javascript
KeyCapture.captureKey(...., mycallback());</code></pre></li></ol></p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><strong>Callback Returning Parameters</strong></p><ul><li>keyValue : <span class='text-info'>INTEGER</span><p>todo</p></li></ul></div>  </div></div></div></div><div class='accordion method' id='mcaptureTrigger'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodcaptureTrigger"><strong data-toggle="tooltip" title data-original-title="todo.  If don't specify a callback then the value will be cleared - also add a return section">captureTrigger</strong>()<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodcaptureTrigger" class="accordion-body collapse in">  <div class="accordion-inner">todo.  If don't specify a callback then the value will be cleared - also add a return section<div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><strong>Callback Returning Parameters</strong></p><ul><li>triggerFlag : <span class='text-info'>INTEGER</span><p>todo</p></li></ul></div>  </div></div></div></div><div class='accordion method' id='mremapKey'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodremapKey"><strong data-toggle="tooltip" title data-original-title="todo.">remapKey</strong>(<span class="text-info">STRING</span> keyValue, <span class="text-info">STRING</span> remapTo)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodremapKey" class="accordion-body collapse in">  <div class="accordion-inner">todo.<div><p><strong>Parameters</strong></p><ul><li>keyValue : <span class='text-info'>STRING</span><p>todo - (string.  Accept keys specified in hex NOT ALL) </p></li><li>remapTo : <span class='text-info'>STRING</span><p>todo - (string.  Accept keys specified in hex NOT ALL) </p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div>  </div></div></div></div></div>
<a name='Remarks'></a>
<h2><i class='icon-warning-sign'></i>Remarks</h2>

<a name='r0'></a><div class='accordion property' id='r0'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cRemark0"><strong>TODO - Include key capture table for function keys that is currently just under the configuration settings 

page.</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cRemark0" class="accordion-body collapse in">  <div class="accordion-inner"><p>To Do</p>
  </div></div></div></div><a name='r1'></a><div class='accordion property' id='r1'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cRemark1"><strong>TODO - ENSURE ALL OTHER REMARKS FROM RE1 HELP FILE ARE CAPTURED</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cRemark1" class="accordion-body collapse in">  <div class="accordion-inner"><p>To Do</p>
  </div></div></div></div></div>