#KeyCapture
<div class="btn-group"><a href="#Properties" class="btn"><i class="icon-list"></i> Properties<sup>&nbsp;1</sup></a><button href="#" class="btn dropdown-toggle" data-toggle="dropdown">  <span class="caret"></span>&nbsp;</button><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li class="disabled"><a tabindex="-1" href="#">Class Properties</a><li><a href="#phomeKeyValue" data-target="cPropertyhomeKeyValue" class="autouncollapse">homeKeyValue</a></li></li></ul></div><div class="btn-group"><a href="#Methods" class="btn"><i class="icon-cog"></i> Methods<sup>&nbsp;3</sub></a><a class="btn dropdown-toggle" data-toggle="dropdown" data-target="#" href="#Methods" >  <span class="caret"></span>&nbsp;</a><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li class="disabled"><a tabindex="-1" href="#">Class Methods</a><li><a href="#mcaptureKey" data-target="cMethodcaptureKey" class="autouncollapse">captureKey</a></li><li><a href="#mcaptureTrigger" data-target="cMethodcaptureTrigger" class="autouncollapse">captureTrigger</a></li><li><a href="#mremapKey" data-target="cMethodremapKey" class="autouncollapse">remapKey</a></li></li></ul></div><div class="btn-group"><a href="#Remarks" class="btn"><i class="icon-warning-sign"></i> Remarks<sup>&nbsp;3</sup></a><button href="#" class="btn dropdown-toggle" data-toggle="dropdown">  <span class="caret"></span>&nbsp;</button><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li><a href="#r0" data-target="rRemark0" class="autouncollapse">Precedence of APIs using the same keyValue</a></li><li><a href="#r1" data-target="rRemark1" class="autouncollapse">Precedence of captureKey events</a></li><li><a href="#r2" data-target="rRemark2" class="autouncollapse">TODO - ENSURE ALL OTHER REMARKS FROM RE1 HELP FILE ARE CAPTURED</a></li></ul></div><div class="btn-group"><a href="#Examples" class="btn"><i class="icon-edit"></i> Examples<sup>&nbsp;1</sup></a><button href="#" class="btn dropdown-toggle" data-toggle="dropdown">  <span class="caret"></span>&nbsp;</button><ul class="dropdown-menu" style="max-height: 500px;overflow: auto;"><li><a href="#e0" data-target="eExample0" class="autouncollapse">TODO - ADD EXAMPLES - THERE ARE LOTS IN THE RE1 HELP FILE</a></li></ul></div><div class="btn-group"><a href="#License" class="btn"><i class="icon-shopping-cart"></i> Licensing</a></div><div class="btn-group pull-right"><button class="btn" id="expandAll" data-toggle="tooltip" title="Expand/Collapse all"><i class="icon-th-list "></i>&nbsp;</button></div><div  >
The KeyCapture module is used to intercept or override hardware keys.

<a name='Examples'></a>
<h2><i class='icon-edit'></i>Examples</h2>

<a name='e0'></a><div class='accordion property' id='e0'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cExample0"><strong>TODO - ADD EXAMPLES - THERE ARE LOTS IN THE RE1 HELP FILE</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cExample0" class="accordion-body collapse in">  <div class="accordion-inner">

						If you just want to display the keystate indicators in their default positions with size 25x25 pixels then call as follows
					<ul class='nav nav-tabs' id='exI0-S0Tab'><li class='active'><a href='#exI0-S0RUBY' data-toggle='tab'>Ruby</a></li></ul><div class='tab-content'><div class='tab-pane active' id='exI0-S0RUBY'><pre class='CodeRay'><code>:::ruby
				
	  def show_keystates
		Rho::Keystate.showStates({width:25;height:25})
	  end
						
					</code></pre></div></div>  </div></div></div></div>
<a name='Properties'></a>
<h2><i class='icon-list'></i>Properties</h2>

<a name='phomeKeyValue'></a><div class='accordion property' id='phomeKeyValue'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cPropertyhomeKeyValue"><strong>homeKeyValue</strong> : <span class='text-info'>STRING</span>  <i class="icon-chevron-down pull-right"></i></span></div><div id="cPropertyhomeKeyValue" class="accordion-body collapse in">  <div class="accordion-inner">Specifies a key which, when pressed, will navigate to the start page as defined in the RhoElements configuration. Set to 'Disabled' to prevent this behavior.<p><strong>Default:</strong> Disabled</p><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"> </p></div> <div><p><strong>Property Access:</strong></p><ul><li><i class="icon-book"></i>Class: This property can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.KeyCapture.homeKeyValue</code> </li><li>Ruby: <code>Rho::KeyCapture.homeKeyValue</code></li></ul></li></ul></div> </div></div></div></div>
<a name='Methods'></a>
<h2><i class='icon-cog'></i>Methods</h2>

<div class="accordion" id="accordion"><div class='accordion method' id='mcaptureKey'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodcaptureKey"><strong data-toggle="tooltip" title data-original-title="todo.  If don't specify a callback then the value will be cleared - also add a return section.  ">captureKey</strong>(<span class="text-info">BOOLEAN</span> dispatch<span class="text-info">STRING</span> keyValue, <span class='text-info'>HASH</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodcaptureKey" class="accordion-body collapse in">  <div class="accordion-inner">todo.  If don't specify a callback then the value will be cleared - also add a return section.  <div><p><strong>Parameters</strong></p><ul><li>dispatch : <span class='text-info'>BOOLEAN</span><p>todo </p></li><li>keyValue : <span class='text-info'>STRING</span><p>todo - (string.  Accept keys specified in hex or ALL).  Has to be a string for backwards compatibility.  Must be the numeric representation of that key, for hardware reasons. - use all keys to determine which key it is. </p></li><li>callback : <span class='text-info'>HASH</span> <span class='label label-info'>Optional</span> </li></ul></div><div><p><strong>Callback Returning Parameters</strong></p><ul><ul><li>keyValue : <span class='text-info'>INTEGER</span><p>todo </p></li></ul></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/ios.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="iphone, ipod touch, ipad"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.KeyCapture.captureKey(...)</code> </li><li>Ruby: <code>Rho::KeyCapture.captureKey(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mcaptureTrigger'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodcaptureTrigger"><strong data-toggle="tooltip" title data-original-title="todo.  If don't specify a callback then the value will be cleared - also add a return section">captureTrigger</strong>(<span class='text-info'>HASH</span> callback)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodcaptureTrigger" class="accordion-body collapse in">  <div class="accordion-inner">todo.  If don't specify a callback then the value will be cleared - also add a return section<div><p><strong>Parameters</strong></p><ul><li>callback : <span class='text-info'>HASH</span> <span class='label label-info'>Optional</span> </li></ul></div><div><p><strong>Callback Returning Parameters</strong></p><ul><ul><li>triggerFlag : <span class='text-info'>INTEGER</span><p>todo </p></li></ul></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"><img src="/img/motowebkit.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Motorola Devices Only"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.KeyCapture.captureTrigger(...)</code> </li><li>Ruby: <code>Rho::KeyCapture.captureTrigger(...)</code></li></ul></li></ul></div>  </div></div></div></div><div class='accordion method' id='mremapKey'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cMethodremapKey"><strong data-toggle="tooltip" title data-original-title="Captures and consumes a specific key value and spawns a new key event with the remapped key code. If remapTo is empty or null, the remapping for this key value will be cleared">remapKey</strong>(<span class="text-info">STRING</span> keyValue<span class="text-info">STRING</span> remapTo)<i class="icon-chevron-down pull-right"></i></span></div><div id="cMethodremapKey" class="accordion-body collapse in">  <div class="accordion-inner">Captures and consumes a specific key value and spawns a new key event with the remapped key code. If remapTo is empty or null, the remapping for this key value will be cleared<div><p><strong>Parameters</strong></p><ul><li>keyValue : <span class='text-info'>STRING</span><p>todo - (string.  Accept keys specified in hex NOT ALL) </p></li><li>remapTo : <span class='text-info'>STRING</span><p>todo - (string.  Accept keys specified in hex NOT ALL) </p></li></ul></div><div><p><strong>Return:</strong></p><ul><li>Void</li></ul></div><div><p><img src="/img/js.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Javascript"><img src="/img/ruby.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Ruby"><img src="/img/android.png" style="width: 20px;padding-top: 8px" rel="tooltip" title="Android"><img src="/img/windowsmobile.png" style="height: 20px;padding-top: 8px" rel="tooltip" title="Windows Mobile, Windows CE, Windows Embedded"></p></div><div><p><strong>Method Access:</strong></p><ul><li><i class="icon-book"></i>Class Method: This method can only be accessed via the API class object. <ul><li>Javascript: <code>Rho.KeyCapture.remapKey(...)</code> </li><li>Ruby: <code>Rho::KeyCapture.remapKey(...)</code></li></ul></li></ul></div>  </div></div></div></div></div>
<a name='Remarks'></a>
<h2><i class='icon-warning-sign'></i>Remarks</h2>

<a name='r0'></a><div class='accordion property' id='r0'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cRemark0"><strong>Precedence of APIs using the same keyValue</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cRemark0" class="accordion-body collapse in">  <div class="accordion-inner"><pre><code>                If captureKey and remapKey have been called with the same keyValue, the remapKey will take precedence. In this case this means that the keyEvent for the inputted key will not be fired as the remapping will occur and consume the key event.
</code></pre>
  </div></div></div></div><a name='r1'></a><div class='accordion property' id='r1'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cRemark1"><strong>Precedence of captureKey events</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cRemark1" class="accordion-body collapse in">  <div class="accordion-inner"><pre><code>                If captureKey has been called with an 'all' value, only the captureKey callback associated with 'all' will be fired on a key press.
</code></pre>
  </div></div></div></div><a name='r2'></a><div class='accordion property' id='r2'><div class="accordion-group"><div class="accordion-heading"><span class="accordion-toggle" data-toggle="collapse"  href="#cRemark2"><strong>TODO - ENSURE ALL OTHER REMARKS FROM RE1 HELP FILE ARE CAPTURED</strong><i class="icon-chevron-down pull-left"></i></span></div><div id="cRemark2" class="accordion-body collapse in">  <div class="accordion-inner"><pre><code>                To do
</code></pre>
  </div></div></div></div></div>
<a name='License'></a>
<h2><i class='icon-shopping-cart'></i>Licensing</h2>

<div class="accordion" id="accordion">You can fully use all features of this API during evaluation, development or testing without obtaining a license. A message will be displayed on application startup and will also display a nag screen periodically. Before deploying an application to a production environment, you must obtain a license key. <a href='/guide/licensing'>Read more about licensing</a>.</div>