<?xml version = "1.0"?>
<?xml-stylesheet type="text/xsl" href="pb_help.xsl"?>
<API>
	<MODULE name="Signature" parent="Rho">
		<HELP_OVERVIEW>creates a rectangular box within which the user can draw by using a finger or the device's stylus to record handwritten data. Common usages for this tag include the capture of client/customer signatures and the input of handwritten text/notations.</HELP_OVERVIEW>
		<MORE_HELP></MORE_HELP>
		<PLATFORM>iOS, Android, WM</PLATFORM>
		<TEMPLATES>
		</TEMPLATES>

		<PROPERTIES access="STATIC" generateAccessors="true" >
			<DESC>These properties are used to configure the appearance and the behaviour of the signature capture area.</DESC>
			<ALIASES>
				<ALIAS new="imageFormat" existing="compressionFormat" deprecated="true"/>
                <ALIAS new="name" existing="fileName" deprecated="true"/>
			</ALIASES>

			<PROPERTY name="compressionFormat" type="STRING" >
				<VER_INTRODUCED>4.0.0</VER_INTRODUCED>
				<DESC>Compression format of the image file for the captured signature.</DESC>
				<APPLIES>JPG and PNG compression are not supported on Windows devices, BMP will always be used.</APPLIES>
				<VALUES>
					<VALUE constName="COMPRESSION_FORMAT_JPG" value ="jpg">
						<DESC>JPEG file format,</DESC>
					</VALUE>
					<VALUE constName="COMPRESSION_FORMAT_PNG" value ="png">
						<DESC>Portable Network Graphics file.</DESC>
					</VALUE>
					<VALUE constName="COMPRESSION_FORMAT_BMP" value ="bmp">
						<DESC>Bitmap image file.</DESC>
					</VALUE>
				</VALUES>
			</PROPERTY>
			
			<PROPERTY name="outputFormat" type="STRING" default="image">
				<VER_INTRODUCED>4.0.0</VER_INTRODUCED>
				<DESC>The return type of the saved signature capture image.</DESC>
				<VALUES>
					<VALUE constName="OUTPUT_FORMAT_IMAGE" value="image">
						<DESC>Outputs the signature capture image into an image file. The compression method and extension of the image file can be specified in compressionFormat.</DESC>
					</VALUE>
					<VALUE constName="OUTPUT_FORMAT_DATAURI" value="dataUri">
						<DESC>Outputs the signature capture image as a DataURI string.</DESC>
					</VALUE>
				</VALUES>
			</PROPERTY>
			
			<PROPERTY name="fileName" type="STRING" default="signature">
				<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
                <DESC>The filename in which to store the signature image, if OUTPUT_FORMAT_IMAGE is used. The file extension is determined by the compressionFormat used.</DESC>
            </PROPERTY>

			<PROPERTY name="border" type="BOOLEAN" default="true">
				<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
				<DESC>Shows or hides a border for the rectangular capture area. Not applicable to fullscreen signature capture area.</DESC>
			</PROPERTY>

			<PROPERTY name="penColor" type="INTEGER" default="0x000000FF">
				<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
				<DESC>RGB or RGBA value that sets the color of the stylus pen ink using HTML web colors.</DESC>
			</PROPERTY>

			<PROPERTY name="penWidth" type="INTEGER" >
				<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
				<DESC>Sets the width of the pen line in pixels.</DESC>
			</PROPERTY>

			<PROPERTY name="bgColor" type="INTEGER" default="0xFFFFFFFF">
				<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
				<DESC>RGB or RGBA value that sets the background color of the signature capture area.</DESC>
			</PROPERTY>

			<PROPERTY name="left" type="INTEGER" default="15">
				<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
				<DESC>The coordinates in pixels of the left side of the signature capture area. Not applicable to fullscreen signature capture area.</DESC>
			</PROPERTY>

			<PROPERTY name="top" type="INTEGER" default="60">
				<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
				<DESC>The coordinates in pixels of the top side of the signature capture area. Not applicable to fullscreen signature capture area.</DESC>
			</PROPERTY>

			<PROPERTY name="width" type="INTEGER" default="200">
				<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
				<DESC>The width of the signature capture area in pixels. Not applicable to fullscreen signature capture area.</DESC>
			</PROPERTY>

			<PROPERTY name="height" type="INTEGER" default="150">
				<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
				<DESC>The height of the signature capture area in pixels. Not applicable to fullscreen signature capture area.</DESC>
			</PROPERTY>
			
			<PROPERTY name="fullScreen" type="BOOLEAN" default="true">
				<VER_INTRODUCED>4.0.0</VER_INTRODUCED>
				<DESC>Sets whether the signature capture area should be fullscreen (true) or inline (false).</DESC>
			</PROPERTY>
		</PROPERTIES>

		<METHODS access="STATIC">
			<METHOD name="takeFullScreen" hasCallback="mandatory" runInThread="ui">
				<VER_INTRODUCED>2.0.0</VER_INTRODUCED>
				<DESC>Shows a signature area. The callback is fired when the signature is closed (when in fullscreen) or when capture is called.</DESC>
				<PARAMS>
					<PARAM name="propertyMap" type="HASH" propertyHash="true">
						<DESC>Map of signature properties to be set</DESC>
						<CAN_BE_NIL>
							<DESC>Use already set properties</DESC>
						</CAN_BE_NIL>
					</PARAM>
				</PARAMS>
				<CALLBACK  type="HASH">
					<PARAMS>
						<PARAM name="status" type="STRING">
							<DESC>Whether a signature was captured or the signature capture area was dismissed (Fullscreen version only). Possible values:'ok' or 'cancel'</DESC>
						</PARAM>
						<PARAM name="imageUri" type="STRING">
							<DESC>If the outputFormat is "image", this will be the URI of the captured signature image. If the outputFormat is "dataUri", this will be the DataURI representation of the captured signature image.</DESC>
						</PARAM>
                        <PARAM name="signature_uri" type="STRING" deprecated="true">
                            <DESC>If the outputFormat is "image", this will be the URI of the captured signature image. If the outputFormat is "dataUri", this will be the DataURI representation of the captured signature image.</DESC>
                        </PARAM>
                    </PARAMS>
				</CALLBACK>
			</METHOD>

			<METHOD name="show" runInThread="ui">
				<VER_INTRODUCED>2.0.0</VER_INTRODUCED>
				<DESC>Show inline signature window</DESC>
				<PARAMS>
					<PARAM name="propertyMap" type="HASH" propertyHash="true">
						<DESC>Map of signature properties to be set</DESC>
						<CAN_BE_NIL>
							<DESC>Use already set properties</DESC>
						</CAN_BE_NIL>
					</PARAM>
				</PARAMS>
			</METHOD>
		
			<METHOD name="capture" hasCallback="mandatory" runInThread="ui">
				<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
				<DESC>Captures the signature area as an image.</DESC>

				<CALLBACK  type="HASH">
					<PARAMS>
						<PARAM name="status" type="STRING">
							<DESC>Whether a signature was captured or the signature capture area was dismissed (Fullscreen version only). Possible values:'ok' or 'cancel'</DESC>
						</PARAM>
						<PARAM name="imageUri" type="STRING">
							<DESC>If the outputFormat is "image", this will be the URI of the captured signature image. If the outputFormat is "dataUri", this will be the DataURI representation of the captured signature image.</DESC>
						</PARAM>
                        <PARAM name="signature_uri" type="STRING" deprecated="true">
                            <DESC>If the outputFormat is "image", this will be the URI of the captured signature image. If the outputFormat is "dataUri", this will be the DataURI representation of the captured signature image.</DESC>
                        </PARAM>
                    </PARAMS>
				</CALLBACK>
			</METHOD>

			<METHOD name="clear" runInThread="ui">
				<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
				<DESC>Clears the capture area</DESC>
			</METHOD>

			<METHOD name="hide" runInThread="ui">
				<VER_INTRODUCED>4.0.0</VER_INTRODUCED>
				<DESC>Hides the signature capture area from view but doesnt clear the inputed signature data. In a hidden state, a user cannot interact with the signature capture area</DESC>
			</METHOD>
			
			<METHOD name="setVectorCallback" hasCallback="mandatory" runInThread="ui">
				<VER_INTRODUCED>4.0.0</VER_INTRODUCED>
				<PLATFORM>WM</PLATFORM>
				<DESC>Signature data is formatted into a series of vectors and returned to the application via this callback function. The received data may not represent the entire signature as the vectors will be sent in batches if the signature is large. A single vector (array entry) contains an X, Y coordinate and the beginning / end of the signature is defined by (65535, 65535). This callback is independent of the callback of the capture method, when specified the callback will be called whenever a 'pen up' occurs in the signature box.</DESC>
                <CALLBACK  type="HASH">
                    <DESC>Not providing a callback will result in the vector callback being cleared</DESC>
					<PARAMS>
						<PARAM name="vectorArray" type="ARRAY">
							<DESC>JavaScript array of vectors which represent the signature.</DESC>
						</PARAM>
					</PARAMS>
				</CALLBACK>    
			</METHOD>
		</METHODS>
		
		<USER_OVERVIEW>
			<!--  More conversational style with INLINE SAMPLES, written in MarkDown -->
			<![CDATA[
Fullscreen and Inline
=====================
The signature capture feature can work in two visual modes, Fullscreen and Inline. The fullscreen variant has buttons to capture, clear and cancel the signature capture box, so the methods: "clear", "hide", "capture" don't need to be used. Whereas with the inline signature capture, there are no such buttons so these will have to be designed into the app itself.

Parameters which clear the signature
====================================
The signature capture area is designed to be set up prior to capturing the signature, as such the following parameters will clear any current signature: "width", "height", "penColor", "bgColor".
		]]>
	
		</USER_OVERVIEW>
		<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
		<PLATFORM>WM</PLATFORM>
		<EXAMPLES >
           <EXAMPLE title="Capture signature to file (fullscreen) and display it in a view">
               <SECTIONS>
               <SECTION>
               <DESC>
                   In order to capture a signature in fullscreen mode you need to 
               </DESC>
               <CODE lang='ruby'>
           <![CDATA[
  def capture_fullscreen
  	# Invoke signature capture screen and assign callback
    Rho::Signature.takeFullScreen({}, url_for(:action => :signature_callback))
    
    render :action => :show_signature
  end

  def signature_callback
  	# If status is not 'ok', the capture was cancelled
    if @params['status'] == 'ok'
    
      # By default, the output format is "image", so the imageUri parameter will contain the relative filename of an image
      # We must convert that relative filename to an absolute path in order to access the file
      signature = Rho::Application.expandDatabaseBlobFilePath(@params["imageUri"])

      # In our example, we will display the signature as soon as it is captured.
      # We have a javascript function in our page to set the src attribute of an img element and we will call it now
      # 
      WebView.executeJavascript("updateSignature('#{signature}')")
    else
      # if we did not really capture a signature, there is nothing else to do here
      WebView.navigate(url_for(:action => :index )) 
    end  
  end

                   ]]>
               </CODE>
               </SECTION>
               <SECTION>
               <DESC>
                   In the view, we have an img element to display the captured signature and a javascript function to update it
               </DESC>
               <CODE lang='javascript' >
           <![CDATA[
<div data-role="page">

    
  <div data-role="header" data-position="inline">
    <h1>Captured signature</h1>
  </div>

  <div data-role="content">
    <img id="signature-image" src="<%= @signature %>">
  </div>

  <script type="text/javascript">
    function updateSignature(signature) {
      $("#signature-image").attr('src',signature);
    }
  </script>

</div>
                   ]]>

               </CODE>
               </SECTION>
               </SECTIONS>
           </EXAMPLE>
                      <EXAMPLE title="Set signature capture properties">
               <SECTIONS>
               <SECTION>
               <DESC>
                   Several properties affect the appearance of the signature capture functionality. You can set their values before showing the capture interface:
               </DESC>
               <CODE>
               	<RUBY>
           <![CDATA[ 
	# Change fullscreen from true (default) to false           
    # Change background color from white (default) to black
    # Change pen color from blue (default) to white
    Rho::Signature.show {:fullScreen => false, :bgColor => "#000000", :penColor => "#FFFFFF"}
                   ]]>
                 </RUBY>
                 <JAVASCRIPT>
           <![CDATA[
    // Change fullscreen from true (default) to false           
    // Change background color from white (default) to black
    // Change pen color from blue (default) to white
	Rho::Signature.show ({:fullScreen => false, :bgColor => "#000000", :penColor => "#FFFFFF"});

                   ]]>
                 </JAVASCRIPT>  
               </CODE>
               </SECTION>
               </SECTIONS>
           </EXAMPLE>
           <EXAMPLE title="Capture as DataURI">
            <SECTIONS>
               
              <SECTION>
               <DESC>
                   By default, the Signature API returns the capture as an image. If you prefer a DataURI representation of the signature, use the "outputFormat" property
               </DESC>
               <CODE>
                <RUBY>
           <![CDATA[
Rho::Signature.takeFullScreen({:outputFormat => "dataUri"}, url_for(:action => :signature_callback))
                   ]]>
                 </RUBY>
                <JAVASCRIPT>
           <![CDATA[
Rho.Signature.takeFullScreen({outputFormat : "dataUri"}, signature_callback)
                   ]]>
                 </JAVASCRIPT>
               </CODE>
               </SECTION>
               </SECTIONS>
           </EXAMPLE>
           
       </EXAMPLES>

	</MODULE>
</API>    