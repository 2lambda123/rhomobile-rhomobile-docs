<?xml version = "1.0"?>
<?xml-stylesheet type="text/xsl" href="pb_help.xsl"?>
<API>
    <MODULE name="System" parent="Rho" generateUnderscoreRubyNames="true">
        <HELP_OVERVIEW>is used to either navigate to a URL or call a javascript function when an attached card reader decodes data.</HELP_OVERVIEW>
        <MORE_HELP>Only the foreground RhoElements application is given access to the card reader hardware, when an application is sent to the background its state will be saved and it will automatically relinquish control of the card reader.  When brought back to the foreground, an application previously using the card reader will have its previous configuration (eg. pinTimeout) reapplied to the card reader automatically.</MORE_HELP>
        <ALIASES>
            <ALIAS new="System" deprecated="true"/>
        </ALIASES>
        <TEMPLATES>
            <!-- <DEFAULT_INSTANCE/> -->
            <PROPERTY_BAG/> <!-- object has properties, produce getProps(), setProps() methods -->
        </TEMPLATES>
        <PROPERTIES usePropertyBag="PropertyBagViaAccessors" limitPropertyBag="true" access="STATIC">
            <DESC>object supports this properties bla bla bla :</DESC>
            <ALIASES>
                <ALIAS new="http_proxy_url" existing="httpProxyURI" deprecated="true"/>
                <ALIAS new="deviceId" existing="devicePushId" deprecated="true"/>
            </ALIASES>
            <PROPERTY name="platform" type="STRING" readOnly="true">
                <DESC>Platform where application is running.</DESC>
                <VALUES>         
                    <VALUE constName="PLATFORM_WM_CE" value ="WINDOWS">
                        <DESC></DESC>
                    </VALUE>
                    <VALUE constName="PLATFORM_ANDROID" value ="ANDROID">
                        <DESC></DESC>
                    </VALUE>
                    <VALUE constName="PLATFORM_IOS" value ="APPLE">
                        <DESC></DESC>
                    </VALUE>
                    <VALUE constName="PLATFORM_WP8" value ="WP8">
                        <DESC></DESC>
                    </VALUE>
                    <VALUE constName="PLATFORM_WINDOWS_DESKTOP" value ="WINDOWS_DESKTOP">
                        <DESC></DESC>
                    </VALUE>

                </VALUES>
            </PROPERTY>
            <PROPERTY name="hasCamera" type="BOOLEAN" readOnly="true">
                <DESC>Is camera available on the device.</DESC>
            </PROPERTY>
            <PROPERTY name="screenWidth" type="INTEGER" readOnly="true">
                <DESC>Screen width in logical pixels (used for set coordinates).</DESC>
            </PROPERTY>
            <PROPERTY name="screenHeight" type="INTEGER" readOnly="true">
                <DESC>Screen height in logical pixels (used for set coordinates).</DESC>
            </PROPERTY>
            <PROPERTY name="realScreenWidth" type="INTEGER" readOnly="true">
                <DESC>Screen width in real pixels.</DESC>
            </PROPERTY>
            <PROPERTY name="realScreenHeight" type="INTEGER" readOnly="true">
                <DESC>Screen height in real pixels.</DESC>
            </PROPERTY>
            <PROPERTY name="screenOrientation" type="STRING" readOnly="true">
                <DESC>Current screen orientation.</DESC>
                <VALUES>
                    <VALUE constName="SCREEN_PORTRAIT" value ="portrait">
                        <DESC></DESC>
                    </VALUE>
                    <VALUE constName="SCREEN_LANDSCAPE" value ="landscape">
                        <DESC></DESC>
                    </VALUE>

                </VALUES>
            </PROPERTY>
            <PROPERTY name="ppiX" type="INTEGER" readOnly="true">
                <DESC>Horizontal PPI (Pixels Per Inch).</DESC>
            </PROPERTY>
            <PROPERTY name="ppiY" type="INTEGER" readOnly="true">
                <DESC>Vertical PPI (Pixels Per Inch).</DESC>
            </PROPERTY>
            <PROPERTY name="phoneNumber" type="STRING" readOnly="true">
                <DESC>Device phone number.</DESC>
            </PROPERTY>
            <PROPERTY name="deviceOwnerEmail" type="STRING" readOnly="true">
                <DESC>Primary email of phone owner.</DESC>
                <PLATFORM>Android</PLATFORM>
            </PROPERTY>
            <PROPERTY name="deviceOwnerName" type="STRING" readOnly="true">
                <DESC>Name(account name) of phone owner.</DESC>
              <PLATFORM>Android</PLATFORM>
            </PROPERTY>
            <PROPERTY name="devicePushId" type="STRING" readOnly="true">
                <DESC>Push notifications device ID which may be used to receive push messages.</DESC>
            </PROPERTY>
            <PROPERTY name="phoneId" type="STRING" readOnly="true">
                <DESC>Hardware based ID. It depends on capabilities configured for an application and has to remain same even across application uninstall/install.</DESC>
            </PROPERTY>
            <PROPERTY name="deviceName" type="STRING" readOnly="true">
                <DESC>Name of device application running on. Examples: '9000' (BB), 'iPhone', 'dream' (Android).</DESC>
            </PROPERTY>
            <PROPERTY name="osVersion" type="STRING" readOnly="true">
                <DESC>Version OS of device. Examples: '4.6.0.192' (BB), '3.0' (iPhone), '1.6' (Android).</DESC>
            </PROPERTY>
            <PROPERTY name="locale" type="STRING" readOnly="true">
                <DESC>Current device locale.Like 'en', 'ru' etc.</DESC>
            </PROPERTY>
            <PROPERTY name="country" type="STRING" readOnly="true">
                <DESC>Current device country code.</DESC>
            </PROPERTY>
            <PROPERTY name="isEmulator" type="BOOLEAN" readOnly="true">
                <DESC>Is application is running on emulator.</DESC>
            </PROPERTY>
            <PROPERTY name="isRhoSimulator" type="BOOLEAN" readOnly="true">
                <DESC>Is application is running on RhoSimulator.</DESC>
            </PROPERTY>
            <PROPERTY name="hasCalendar" type="BOOLEAN" readOnly="true">
                <DESC>Is calendar support is available.</DESC>
            </PROPERTY>
            <PROPERTY name="isMotorolaDevice" type="BOOLEAN" readOnly="true">
                <DESC>Is device supports Motorola device capabilities, such as Scanner, etc.</DESC>
            </PROPERTY>
            <PROPERTY name="oemInfo" type="STRING" readOnly="true">
                <DESC>The OEM Information string for the terminal.</DESC>
            </PROPERTY>
            <PROPERTY name="uuid" type="STRING" readOnly="true">
                <DESC>The Unique Unit IDentifier for the terminal.</DESC>
            </PROPERTY>
            <PROPERTY name="applicationIconBadge" type="INTEGER">
                <DESC>Set the application icon to have this badge number. Set to 0 (zero) to remove badge.</DESC>
              <PLATFORM>iOS</PLATFORM>
            </PROPERTY>
            <PROPERTY name="httpProxyURI" type="STRING">
                <DESC>Client HTTP proxy.</DESC>
            </PROPERTY>
            <PROPERTY name="lockWindowSize" type="BOOLEAN" default="false">
                <DESC>Lock/unlock the window size change by the user.</DESC>
                <PLATFORM>Win32</PLATFORM>
            </PROPERTY>
           <PROPERTY name="keyboardState" type="STRING">
                <DESC>For Windows Mobile and Windows CE the keyboard can be manually shown or hidden as required.  All other platforms only support 'Automatic'.</DESC>
                <VALUES>
                    <VALUE constName="KEYBOARD_SHOWN" value ="shown">
                        <DESC>Shows the on screen keyboard, after setting the keyboard to shown or hidden it will no longer appear / disappear automatically until you set this property to automatic.</DESC>
                    </VALUE>
                    <VALUE constName="KEYBOARD_HIDDEN" value ="hidden">
                        <DESC>Hides the on screen keyboard, after setting the keyboard to shown or hidden it will no longer appear / disappear automatically until you set this property to automatic.  This is most useful if your device has a hardware keyboard or you are scanning / capturing data to an input field.</DESC>
                    </VALUE>
                    <VALUE constName="KEYBOARD_AUTOMATIC" value ="automatic">
                        <DESC>Automatically shows or hides the keyboard as needed by the application</DESC>
                    </VALUE>
                </VALUES>
            </PROPERTY>
            <PROPERTY name="localServerPort" type="INTEGER" default="8080">
                <DESC>Port of the local (embedded) HTTP server. This parameter is mainly for debug purposes. If not specified, application will use dynamically selected one.</DESC>
            </PROPERTY>
            <PROPERTY name="freeServerPort" type="INTEGER" readOnly="true">
                <DESC>Get free local server port, available for binding.</DESC>
            </PROPERTY>
            <PROPERTY name="screenAutoRotate" type="BOOLEAN" default="true">
                <DESC>Screen auto rotate.</DESC>
            </PROPERTY>
            <PROPERTY name="hasTouchscreen" type="BOOLEAN" readOnly="true">
                <DESC>Is device has touch screen.</DESC>
            </PROPERTY>
            <PROPERTY name="securityTokenNotPassed" type="BOOLEAN" readOnly="true">
                <DESC>Is the security token check was failed.</DESC>
            </PROPERTY>
            <PROPERTY name="webviewFramework" type="STRING" readOnly="true">
                <DESC>Browser framework identity string.</DESC>
            </PROPERTY>
            <PROPERTY name="screenSleeping" type="BOOLEAN">
                <DESC>Should screen go to sleep by timeout.</DESC>
            </PROPERTY>
            <PROPERTY name="hasNetwork" type="BOOLEAN" readOnly="true" deprecated="true">
                <DESC>USE Network.hasNetwork: Is device connected to the network.</DESC>
            </PROPERTY>
            <PROPERTY name="hasWifiNetwork" type="BOOLEAN" readOnly="true" deprecated="true">
                <DESC>USE Network.hasWifiNetwork: Is device connected to the wifi network</DESC>
            </PROPERTY>
            <PROPERTY name="hasCellNetwork" type="BOOLEAN" readOnly="true" deprecated="true">
                <DESC>USE Network.hasCellNetwork: Is device connected to the cell network.</DESC>
            </PROPERTY>
            <PROPERTY name="hasSqlite" type="BOOLEAN" readOnly="true" deprecated="true">
                <DESC>Does sqlite used on this platform.</DESC>
            </PROPERTY>
        </PROPERTIES>
        <METHODS  access="STATIC">
            <ALIASES>
                <ALIAS new="get_property" existing="getProperty" deprecated="true">
                    <DESC>Use property names methods instead.</DESC>
                </ALIAS>

                <ALIAS new="run_app" existing="runApplication" deprecated="true"/>
                <ALIAS new="app_install" existing="applicationInstall" deprecated="true"/>
                <ALIAS new="app_installed?" existing="isApplicationInstalled" deprecated="true"/>
                <ALIAS new="app_uninstall" existing="applicationUninstall" deprecated="true"/>
                <ALIAS new="set_do_not_bakup_attribute" existing="setDoNotBackupAttribute" deprecated="true"/>
                
            </ALIASES>
            <METHOD name="applicationInstall">
                <DESC>Install an application.</DESC>
                <PARAMS>
                    <PARAM name="applicationUrl" type="STRING">
                        <DESC>The url of an application to install on the device.</DESC>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="isApplicationInstalled">
                <DESC>Is application installed on the device?</DESC>
                <PARAMS>
                    <PARAM name="applicationName" type="STRING">
                        <DESC>The name of the application.</DESC>
                    </PARAM>
                </PARAMS>

                <RETURN type="BOOLEAN"/>

            </METHOD>
            <METHOD name="applicationUninstall">
                <DESC>Uninstall the application.</DESC>
                <PLATFORM>WM, Win32, Android, WP8</PLATFORM>
                <PARAMS>
                    <PARAM name="applicationName" type="STRING">
                        <DESC>The name of the application.</DESC>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="getStartParams">
                <DESC>Return the command line parameters.</DESC>
                <RETURN type="STRING"/>
            </METHOD>
            <METHOD name="openUrl">
                <DESC>Open the application associated with the URL.</DESC>
                <PARAMS>
                    <PARAM name="url" type="STRING">
                        <DESC>Open the application at this url; behavior may be different on different platforms and depend on installed software.</DESC>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="unzipFile">
                <DESC>Unzip file.</DESC>
                <PARAMS>
                    <PARAM name="localPathToZip" type="STRING">
                        <DESC>The path to the file to be unzipped.</DESC>
                    </PARAM>
                    <PARAM name="password" type="STRING">
                        <DESC>Password for the zip.</DESC>
                        <CAN_BE_NIL/>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="zipFile">
                <DESC>Zip one file.</DESC>
                <PARAMS>
                    <PARAM name="localPathToZip" type="STRING">
                        <DESC>The path to the specified zip.</DESC>
                    </PARAM>
                    <PARAM name="localPathToFile" type="STRING">
                        <DESC>The path to the file to be zipped.</DESC>
                    </PARAM>
                    <PARAM name="password" type="STRING">
                        <DESC>Password for the zip.</DESC>
                        <CAN_BE_NIL/>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="zipFiles">
                <DESC>Zip list of files.</DESC>
                <PARAMS>
                    <PARAM name="localPathToZip" type="STRING">
                        <DESC>The path to the specified zip.</DESC>
                    </PARAM>
                    <PARAM name="basePath" type="STRING">
                        <DESC>Base path to the files to be zipped.</DESC>
                    </PARAM>
                    <PARAM name="filePathsToZip" type="ARRAY">
                        <DESC>List of file paths to be zipped.</DESC>
                    </PARAM>
                    <PARAM name="password" type="STRING">
                        <DESC>Password for the zip.</DESC>
                        <CAN_BE_NIL/>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="setRegistrySetting">
                <DESC>Set a value in the device registry.  Only applicable on Windows Mobile / Embedded Handheld and CE devices.</DESC>
                <PARAMS>
					<PARAM name="propertyMap" type="HASH" propertyHash="true">
						<DESC>Map of properties associated with the registry key being set</DESC>
						<PARAMS>
							<PARAM name="hive" type="STRING">
								<DESC>The hive name</DESC>
								<VALUES>
									<VALUE constName="HKEY_CLASSES_ROOT" value ="HKCR">
										<DESC>Set the property in the HKEY_CLASSES_ROOT hive</DESC>
									</VALUE>
									<VALUE constName="HKEY_CURRENT_USER" value ="HKCU">
										<DESC>Set the property in the HKEY_CURRENT_USER hive</DESC>
									</VALUE>
									<VALUE constName="HKEY_LOCAL_MACHINE" value ="HKLM">
										<DESC>Set the property in the HKEY_LOCAL_MACHINE hive</DESC>
									</VALUE>
									<VALUE constName="HKEY_USERS" value ="HKU">
										<DESC>Set the property in the HKEY_USERS hive</DESC>
									</VALUE>
								</VALUES>
							</PARAM>
							<PARAM name="type" type="STRING">
								<DESC>The type</DESC>
								<VALUES>
									<VALUE constName="REG_SZ" value ="String">
										<DESC>The type of the value being set is a string</DESC>
									</VALUE>
									<VALUE constName="REG_BINARY" value ="Binary">
										<DESC>The type of the value being set is a binary number</DESC>
									</VALUE>
									<VALUE constName="REG_DWORD" value ="DWORD">
										<DESC>The type of the value being set is a natural number (DWORD)</DESC>
									</VALUE>
									<VALUE constName="REG_MULTI_SZ" value ="MultiSZ">
										<DESC>The type of the value being set is a multi line string.  Separate your lines with \n (\\n in Javascript)</DESC>
									</VALUE>
								</VALUES>
							</PARAM>
							<PARAM name="key" type="STRING">
								<DESC>Full path of the key, including '\' separators as required. Remember to use '\\' in Javascript to specify backslash</DESC>
							</PARAM>
							<PARAM name="setting" type="STRING">
								<DESC>The name of the setting to be set</DESC>
							</PARAM>
							<PARAM name="value" type="STRING">
								<DESC>The value to be set</DESC>
							</PARAM>
							<PARAM name="persistent" type="BOOLEAN">
								<DESC>Whether or not to create a corresponding merge file, setting to true will cause your value to persist across a device clean boot.  A .reg file is written to the \Application folder on the device to persist the setting.</DESC>
							</PARAM>
						</PARAMS>
					</PARAM>
                </PARAMS>
                <RETURN type="BOOLEAN">
                    <DESC>Whether or not the registry key was successfully set.</DESC>
                </RETURN>
			</METHOD>

            <METHOD name="getRegistrySetting">
                <DESC>Retrieve a value from the device registry.  Only applicable on Windows Mobile / Embedded Handheld and CE devices.</DESC>
                <PARAMS>
					<PARAM name="propertyMap" type="HASH" propertyHash="true">
						<DESC>Map of properties associated with the registry key being set</DESC>
						<PARAMS>
							<PARAM name="hive" type="STRING">
								<DESC>The hive name</DESC>
								<VALUES>
									<VALUE constName="HKEY_CLASSES_ROOT" value ="HKCR">
										<DESC>Get the property from the HKEY_CLASSES_ROOT hive</DESC>
									</VALUE>
									<VALUE constName="HKEY_CURRENT_USER" value ="HKCU">
										<DESC>Get the property from the HKEY_CURRENT_USER hive</DESC>
									</VALUE>
									<VALUE constName="HKEY_LOCAL_MACHINE" value ="HKLM">
										<DESC>Get the property from the HKEY_LOCAL_MACHINE hive</DESC>
									</VALUE>
									<VALUE constName="HKEY_USERS" value ="HKU">
										<DESC>Get the property from the HKEY_USERS hive</DESC>
									</VALUE>
								</VALUES>
							</PARAM>
							<PARAM name="key" type="STRING">
								<DESC>Full path of the key, including '\' separators as required. Remember to use '\\' in Javascript to specify backslash</DESC>
							</PARAM>
							<PARAM name="setting" type="STRING">
								<DESC>The name of the setting to be retrieved</DESC>
							</PARAM>
						</PARAMS>
					</PARAM>
                </PARAMS>
                <RETURN type="STRING">
                    <DESC>Regsitry value of the key.</DESC>
                </RETURN>
            </METHOD>
			
            <METHOD name="deleteRegistrySetting">
                <DESC>Deletes the specified value from the device registry.  Only applicable on Windows Mobile / Embedded Handheld and CE devices.</DESC>
                <PARAMS>
					<PARAM name="propertyMap" type="HASH" propertyHash="true">
						<DESC>Map of properties associated with the registry key being set</DESC>
						<PARAMS>
							<PARAM name="hive" type="STRING">
								<DESC>The hive name</DESC>
								<VALUES>
									<VALUE constName="HKEY_CLASSES_ROOT" value ="HKCR">
										<DESC>Delete the property from the HKEY_CLASSES_ROOT hive</DESC>
									</VALUE>
									<VALUE constName="HKEY_CURRENT_USER" value ="HKCU">
										<DESC>Delete the property from the HKEY_CURRENT_USER hive</DESC>
									</VALUE>
									<VALUE constName="HKEY_LOCAL_MACHINE" value ="HKLM">
										<DESC>Delete the property from the HKEY_LOCAL_MACHINE hive</DESC>
									</VALUE>
									<VALUE constName="HKEY_USERS" value ="HKU">
										<DESC>Delete the property from the HKEY_USERS hive</DESC>
									</VALUE>
								</VALUES>
							</PARAM>
							<PARAM name="key" type="STRING">
								<DESC>Full path of the key, including '\' separators as required. Remember to use '\\' in Javascript to specify backslash</DESC>
							</PARAM>
							<PARAM name="setting" type="STRING">
								<DESC>The name of the setting to be deleted</DESC>
							</PARAM>
							<PARAM name="persistent" type="BOOLEAN">
								<DESC>If the registry value was set to be persistent, ie a corresponding .reg file was created in the \Application folder then setting true here will delete that .reg file.</DESC>
							</PARAM>
						</PARAMS>
					</PARAM>
                </PARAMS>
                <RETURN type="BOOLEAN">
                    <DESC>Whether or not the registry key was successfully deleted.</DESC>
                </RETURN>
			</METHOD>	
            <METHOD name="setWindowFrame">
                <DESC>Change application window position and size</DESC>
                <PLATFORM>Win32</PLATFORM>
                <PARAMS>
                    <PARAM name="x" type="INTEGER">
                        <DESC>Left corner of window.</DESC>
                    </PARAM>
                    <PARAM name="y" type="INTEGER">
                        <DESC>Top corner of window.</DESC>
                    </PARAM>
                    <PARAM name="width" type="INTEGER">
                        <DESC>Width of window.</DESC>
                    </PARAM>
                    <PARAM name="height" type="INTEGER">
                        <DESC>Height of window.</DESC>
                    </PARAM>

                </PARAMS>
            </METHOD>
            <METHOD name="setWindowPosition">
                <DESC>Change application window position</DESC>
                <PLATFORM>Win32</PLATFORM>
                <PARAMS>
                    <PARAM name="x" type="INTEGER">
                        <DESC>Left corner of window.</DESC>
                    </PARAM>
                    <PARAM name="y" type="INTEGER">
                        <DESC>Top corner of window.</DESC>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="setWindowSize">
                <DESC>Change application window size</DESC>
                <PLATFORM>Win32</PLATFORM>
                <PARAMS>
                    <PARAM name="width" type="INTEGER">
                        <DESC>Width of the window.</DESC>
                    </PARAM>
                    <PARAM name="height" type="INTEGER">
                        <DESC>Width of the of window.</DESC>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="bringToFront">
                <DESC>Bring application window to the top of the screen.</DESC>
            </METHOD>
            <METHOD name="replaceCurrentBundle">
                <DESC>Replace application bundle.</DESC>
                <PARAMS>
                    <PARAM name="pathToBundle" type="STRING">
                        <DESC>Path to bundle.</DESC>
                    </PARAM>
                    <PARAM name="params" type="HASH">
                        <DESC>Update parameters.</DESC>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="deleteFolder">
                <DESC>Delete folder.</DESC>
                <PARAMS>
                    <PARAM name="pathToFolder" type="STRING">
                        <DESC>Path to folder.</DESC>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="setDoNotBackupAttribute">
                <DESC>Set do not backup attribute for file.</DESC>
                <PLATFORM>iOS</PLATFORM>
                <PARAMS>
                    <PARAM name="pathToFile" type="STRING">
                        <DESC>Path to file.</DESC>
                    </PARAM>
                    <PARAM name="doNotBackup" type="BOOLEAN">
                        <DESC>true set doNotBakup attribute to file (exlude this file from bakup), false for remove doNotBakup attribute from file</DESC>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="isBlobAttr" deprecated="true">
                <DESC>Use Database.isBlobAttr: is model attribute is blob.</DESC>
                <PARAMS>
                    <PARAM name="partition" type="STRING"/>
                    <PARAM name="sourceID" type="INTEGER"/>
                    <PARAM name="attrName" type="STRING"/>
                </PARAMS>
                <RETURN type="BOOLEAN"/>
            </METHOD>
            <METHOD name="updateBlobAttribs" deprecated="true">
                <DESC>Use Database.updateBlobAttribs: update model blob attributes list.</DESC>
                <PARAMS>
                    <PARAM name="partition" type="STRING"/>
                    <PARAM name="sourceID" type="INTEGER"/>
                </PARAMS>
            </METHOD>
            <METHOD name="get_locale" deprecated="true">
                <DESC>Use System.locale property: Current device locale.</DESC>
                <RETURN type="STRING"/>
            </METHOD>
            <METHOD name="set_locale" deprecated="true" generateAPI="false" access="STATIC">
                <DESC>Use Application.setLocale method: set application specific locale</DESC>
                <PARAMS>
                    <PARAM name="locale_code" type="STRING"/>
                    <PARAM name="country_code" type="STRING"/>
                </PARAMS>
            </METHOD>
            <METHOD name="setPushNotification" deprecated="true">
                <DESC>Use Push.setPushNotification: Register push callback, the method to call upon receiving a push message.</DESC>
                <PARAMS>
                    <PARAM name="url" type="STRING">
                        <DESC>URL of the callback method. If empty, unregisters rhoconnect-push.</DESC>
                    </PARAM>
                    <PARAM name="url_params" type="STRING">
                        <DESC>Params which will be added to callback URL.</DESC>
                        <CAN_BE_NIL/>
                    </PARAM>
                    <PARAM name="push_client" type="STRING">
                        <DESC>Name of a push service client. Current values can be 'rhoconnect_push' or 'gcm' or 'legacy' or empty.</DESC>
                        <CAN_BE_NIL>
                            <DESC>The call will be applied to every push client.</DESC>
                        </CAN_BE_NIL>    
                    </PARAM>
                </PARAMS>

            </METHOD>
            <METHOD name="setScreenRotationNotification" deprecated="true">
                <DESC>Use ScreenOrientation.setNotification: Notify (call a callback method) when the screen rotates.</DESC>
                <PARAMS>
                    <PARAM name="url" type="STRING">
                        <DESC>URL of the callback method. If empty, unregisters notification callback.</DESC>
                    </PARAM>
                    <PARAM name="url_params" type="STRING">
                        <DESC>Params which will be added to callback URL.</DESC>
                        <CAN_BE_NIL/>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="exit" deprecated="true">
                <DESC>Use Application.quit: exit application.</DESC>
            </METHOD>
            <METHOD name="set_sleeping" deprecated="true">
                <DESC>Use System.screenSleeping property: enable/disable phone sleeping.</DESC>
                <PARAMS>
                    <PARAM name="enable" type="BOOLEAN"/>
                </PARAMS>
            </METHOD>
            <METHOD name="startTimer" deprecated="true">
                <DESC>Use Timer.start: start timer.</DESC>
                <PARAMS>
                    <PARAM name="interval" type="INTEGER">
                        <DESC>Timer interval.</DESC>
                    </PARAM>
                    <PARAM name="url" type="STRING">
                        <DESC>URL of the callback method.</DESC>
                    </PARAM>
                    <PARAM name="url_params" type="STRING">
                        <DESC>Params which will be added to callback URL.</DESC>
                        <CAN_BE_NIL/>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="stopTimer" deprecated="true">
                <DESC>Use Timer.stop: stop timer.</DESC>
                <PARAMS>
                    <PARAM name="url" type="STRING">
                        <DESC>URL of the callback method which identify the timer to stop.</DESC>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="setNetworkStatusNotify" deprecated="true">
                <DESC>Use Network.setStatusNotify: set network notification callback.</DESC>
                <PARAMS>
                    <PARAM name="url" type="STRING">
                        <DESC>The url to the user-defined callback method.</DESC>
                    </PARAM>
                    <PARAM name="poll_interval" type="INTEGER">
                        <DESC>iOS. The network status polling period for systems that can not notify network status change immediately. Default value is 20 seconds.</DESC>
                    </PARAM>
                </PARAMS>
            </METHOD>
            <METHOD name="clearNetworkStatusNotify" deprecated="true">
                <DESC>Use Network.clearStatusNotify: Clear network status callback.</DESC>
            </METHOD>
            <METHOD name="set_http_proxy_url" deprecated="true">
                <DESC>Use System.httpProxyURI property: To use client with the HTTP proxy</DESC>
                <PARAMS>
                    <PARAM name="proxyURI" type="STRING"/>
                </PARAMS>
            </METHOD>
            <METHOD name="unset_http_proxy" deprecated="true">
                <DESC>Use System.httpProxyURI property: Stop using HTTP proxy that was set by the command line, rhoconfig.txt or set_http_proxy_url.</DESC>
            </METHOD>
            <METHOD name="set_application_icon_badge" deprecated="true">
                <DESC>Use System.applicationIconBadge: Set the application icon to have this badge number. Set to 0 (zero) to remove badge.iOS only.</DESC>
               <PLATFORM>iOS</PLATFORM>
		<PARAMS>
                    <PARAM name="badgeNumber" type="INTEGER"/>
                </PARAMS>
            </METHOD>
            <METHOD name="runApplication" deprecated="true">
                <DESC>Use System.Process.runApplication: Run an application.</DESC>
                <PARAMS>
                    <PARAM name="appName" type="STRING">
                        <DESC>The name of the application on the device to run.</DESC>
                    </PARAM>
                    <PARAM name="params" type="STRING">
                        <DESC>The name of the application on the device to run.</DESC>
                        <CAN_BE_NIL/>
                    </PARAM>
                    <PARAM name="blockingCall" type="BOOLEAN">
                        <DESC>The name of the application on the device to run.</DESC>
                        <CAN_BE_NIL>
                            <DESC>False by default</DESC>
                        </CAN_BE_NIL>
                    </PARAM>
                </PARAMS>

            </METHOD>
        </METHODS>
 	<VER_INTRODUCED>1.0.0</VER_INTRODUCED>
        <PLATFORM>
            <!--  This section is used for the supported platform images at the top -->
        </PLATFORM>
        <EXAMPLES >
            <EXAMPLE title="Working with the Windows Registry">
                <SECTIONS>
					<SECTION>
					<DESC>
						On devices running Windows Mobile, Windows CE, Windows Embedded Handheld and Windows Embedded CE it is possible to interact with the registry, this example shows how to do that.
					</DESC>
					<CODE lang='ruby'>
<![CDATA[
#/app/Model

#  Retrieve a value from the Registry
def get_registry_sync
	theRegSetting = Rho::System.getRegistrySetting({hive:'HKLM', key:'software', Setting:'RhoElementsTest'})
	puts "Registry Setting retrieved: #{theRegSetting}"
end

#  Set a value in the registry which will persist across a clean boot of the device  
def set_registry_sync
	theRegSetting = Rho::System.setRegistrySetting({hive:'HKLM', type:'String', key:'Software', setting:'RhoElementsTest', value:'MVC ftw', persistent:true})
	puts "Registry Setting Success?: #{theRegSetting}"
end
	  
#  Delete a value from the registry
def delete_registry_sync
	theRegSetting = Rho::System.deleteRegistrySetting({hive:'HKLM', key:'Software', setting:'RhoElementsTest', persistent:true})
	puts "Registry Deleting Success?: #{theRegSetting}"
end						]]>

					</CODE>
					</SECTION>
                </SECTIONS>
            </EXAMPLE>
        </EXAMPLES>
    </MODULE>
</API>    
