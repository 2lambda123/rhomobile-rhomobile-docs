Gem Bundler
===========

Gem Bundler is the default gem manager for Rails 3, and can be used with any Ruby project as it has no dependency on framework.  Gem Bundler is under active development, and is not recommended for production use yet.  

NOTE: Bundler can only be used on the Bamboo stack.  Using Bundler with the Aspen stack is NOT supported.

Bundler Version
---------------
0.9.11

Bundler is evolving quickly.  Heroku will try to stay as up-to-date as possible as Bundler releases new versions.  As this is experimental support, it is your responsibility to make sure you stay compatible with the latest version of Bundler.  Announcements of new versions will be posted to the [google group](http://groups.google.com/group/heroku/).

Using Bundler
-------------

To use, install bundler:

    $ gem install bundler

Create a file named Gemfile in the root of your app specifying what gems are required to run it:

    {ruby}
    source :gemcutter
    gem 'sinatra', '0.9.4'

The Gemfile should be added to the git repository since it is part of the app. You should also add the .bundle directory to your gitignore file.  Once you have added the Gemfile, it makes it easy for other developers to get their environment ready to run the app:

    $ bundle install --without production

This will ensure all gems specified on Gemfile, together with their dependencies, are available for your application.

Heroku also uses that file to resolve and install your application dependencies automatically. All you need to do is to push it:

    -----> Heroku receiving push
    -----> Gemfile detected, running Bundler
           Unresolved dependencies detected; Installing...
           Fetching source index from http://gemcutter.org
           Resolving dependencies
           Installing mime-types (1.16) from rubygems repository at http://gemcutter.org 
           Installing rack (1.1.0) from rubygems repository at http://gemcutter.org 
           Installing sinatra (0.9.4) from rubygems repository at http://gemcutter.org 
           Your bundle is complete!
           Locking environment


Specifying gems & groups
------------------------

The recommended use of gem bundler is to bundle absolutely every gem your app depends upon.  This includes your framework (Rails, Sinatra, etc) and your database connectors. 

Bundling Rails and other dependencies does increase your slug size by a few megabytes.  Increased slug size is a worthwhile tradeoff for vastly simplified dependency management, as well as the flexibility of being able to use any version of Rails you wish.

Heroku does not specify any groups during bundle installation, so all gems from all groups will be bundled with your application.

Using Bundler from Rails 3
--------------------------

Rails 3 is built on top of Bundler. That means there is no setup needed, all gems specified on the Gemfile are ready for use on your app.
    
Using Bundler from Rails 2.3.5
------------------------------

Follow the instructions [here](http://gembundler.com/rails23.html).  Remember to remove all your "config.gem" lines from your environment configuration file!  Also remember to specify the your database gem as appropriate.

    gem "pg", :group => :production
    gem "sqlite3-ruby", :group => :development
    
After you have added the code to your application, run

    $ bundle install --without production
    
And your app should now be using Gembundler.

Using Bundler from Sinatra or any Rack app
------------------------------------------

To use gems from your bundler environment under Sinatra or other non-Rails framework, add the following to the top of your app:

    {ruby}
    begin
      # Require the preresolved locked set of gems.
      require ::File.expand_path('../.bundle/environment', __FILE__)
    rescue LoadError
      # Fallback on doing the resolve at runtime.
      require "rubygems"
      require "bundler"
      Bundler.setup
    end


Migrating from 0.8
------------------

Bundler 0.9 brought several changes to the Bundler API and philosophy.

[This post on Yehuda's blog](http://yehudakatz.com/2010/02/01/bundler-0-9-heading-toward-1-0/) enumerates most of the differences, while the [Gem Bundler readme](http://github.com/carlhuda/bundler) describes what was deprecated on the previous API.

Further reading
---------------

* [Nick Quaranto: Gem Bundler is the Future](http://litanyagainstfear.com/blog/2009/10/14/gem-bundler-is-the-future/)
* [Gem Bundler readme](http://github.com/carlhuda/bundler)
