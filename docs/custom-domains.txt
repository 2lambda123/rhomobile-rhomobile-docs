Custom domain names
===================

All Heroku apps will always be accessible by their Heroku subdomain: appname.heroku.com.  You can also assign one or more custom domain names if you enable the custom domains [add-on](/addons).

CNAME setup
---------------

Set up your domain with your registrar, then select the subdomain that you wish to point at your Heroku app.  This could be something like myapp.mycompany.com, or the standard www.mydomain.com, or it could be the root-level domain, mydomain.com.

Configure your DNS provider to make your chosen custom domain name be an alias which points to proxy.heroku.com.  In DNS terms this is known as a CNAME.

Check that your DNS is configured correctly with the "host" command:

    $ host www.example.com
    www.example.com is an alias for proxy.heroku.com.
    proxy.heroku.com has address 75.101.142.103
    proxy.heroku.com has address 75.101.141.116

Output of the host command varies by Unix flavor, but it should indicate that your domain name is either an alias of proxy.heroku.com, or a CNAME of proxy.heroku.com (these both mean the same thing).

* [Screencast tutorial of setting up DNS on GoDaddy](http://onticoren.com/2009/06/29/go-daddy-dns-heroku/) by Oren Teich

Root domain & custom mail servers
--------------

NOTE: Due to Heroku's cloud architecture, from time to time we may need to change the public IP addresses.  By using the A record configuraiton, be aware that we may request that you change your settings at some point in the future.  We will provide advance notice, but if you do not update your addresses, your site may stop working.  For this reason, if you can use the CNAME option, we STRONGLY encourage you to do so.

When configuring your root domain with custom mail servers (MX records), you must use A records instead of CNAME.  Only your root domain - mydomain.com - may use A records.  Any host or subdomain such as www.mydomain.com must use the above CNAME setup.

To setup your domain using A records, you will setup two records for the domain, pointing to two different IP addresses:

	75.101.142.103
	75.101.141.116
		
NOTE: You must have both records in your DNS.

Check that your DNS is configured correctly with the "host" command:
	
	$ host example.com
	example.com has address 75.101.142.103
	example.com has address 75.101.141.116


Heroku setup
------------

Once your DNS is pointing at your app, enable the custom domains [add-on](/addons) for the app:

    $ heroku addons:add custom_domains
    Adding wildcard_domains to myapp...done.

Then inform Heroku of the domain you are using:

    $ heroku domains:add www.example.com
    Added www.example.com as a custom domain name to myapp.heroku.com

You can add any number of domains to a single app by repeating the add command with different values.  Remove domains with:

    $ heroku domains:remove myapp.mydomain.com
    Removed www.example.com as a custom domain name to myapp.heroku.com

You can also clear all the domains at once (often the easiest even if you only have one domain):

    $ heroku domains:clear
    Removed all domain names for myapp.heroku.com

NOTE: If you have multiple domains, or your app has users that access it via its Heroku subdomain but you later switched to your own custom domain, you will probably want to get all users onto the same domain with a redirect in a before filter.  Something like this will do the job:

    class ApplicationController
      before_filter :ensure_domain

      TheDomain = 'myapp.mydomain.com'

      def ensure_domain
        if request.env['HTTP_HOST'] != TheDomain
          redirect_to TheDomain
        end
      end

Wildcard domains
----------------

If you'd like your app to respond to any subdomain under your custom domain name (as in *.yourdomain.com), youâ€™ll need to use the wildcard domains add-on. First, you'll need to select the add-on:

    $ heroku addons:add wildcard_domains
    Adding wildcard_domains to myapp...done.
    $ curl http://arbitrary-subdomain.myapp.heroku.com/
    HTTP/1.1 200 OK

To use with a custom domain, configure your registrar to point *.yourdomain.com at heroku.com.  If things are set up correctly you should be able to look up any arbitrary subdomain:

    $ host arbitrary-subdomain.yourdomain.com
    arbitrary-subdomain.yourdomain.com is an alias for heroku.com.

Then add the wildcard domain on Heroku:

    $ heroku domains:add *.youdomain.com
    Added *.yourdomain.com as a custom domain name to myapp.heroku.com
    $ curl http://arbitrary-subdomain.yourdomain.com/
    HTTP/1.1 200 OK

