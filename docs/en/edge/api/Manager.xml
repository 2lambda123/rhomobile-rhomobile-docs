<?xml version = "1.0"?>
<?xml-stylesheet type="text/xsl" href="pb_help.xsl"?>
<API>
    <MODULE name="Manager" parent="Rho.NFC">
        <HELP_OVERVIEW>NFC Manager</HELP_OVERVIEW>
        <MORE_HELP>NFC Manager is main singletone class for working with NFC</MORE_HELP>
    
        <TEMPLATES>
        </TEMPLATES>

        <PROPERTIES access="STATIC" generateAccessors="true">
            
            <DESC>list of properties supported by class</DESC>
            
             <PROPERTY name="supported" type="BOOLEAN" readOnly="true">
                <DESC>return true if NFC supported on this device</DESC>
                 <PLATFORM>WM, Android</PLATFORM>
            </PROPERTY>
            <PROPERTY name="enabled" type="BOOLEAN">
                <DESC>enable/disable NFC functionality</DESC>
                <PLATFORM>WM, Android</PLATFORM>
            </PROPERTY>
            <PROPERTY name="versionMajor" type="INTEGER" readOnly="true">
                <DESC>major version</DESC>
                <PLATFORM>WM</PLATFORM>
            </PROPERTY>
            <PROPERTY name="versionMinor" type="INTEGER" readOnly="true">
                <DESC>minor version</DESC>
                <PLATFORM>WM</PLATFORM>
            </PROPERTY>
            <PROPERTY name="versionRevision" type="INTEGER" readOnly="true">
                <DESC>revision version</DESC>
                <PLATFORM>WM</PLATFORM>
            </PROPERTY>
            <PROPERTY name="pollingTimeout" type="INTEGER">
                <DESC>polling timeout</DESC>
                <PLATFORM>WM</PLATFORM>
            </PROPERTY>
            <PROPERTY name="passkey" type="STRING">
                <DESC>passkey</DESC>
                <PLATFORM>WM</PLATFORM>
            </PROPERTY>

        </PROPERTIES>
        
        <CONSTANTS>
            
            
            <CONSTANT name="NFC_SUCCESS" value="NFC_SUCCESS">
                <DESC>The function was completed successfully and no error occurred.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_FAILED" value="NFC_FAILED">
                <DESC>Other failures.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_BAD_HANDLE" value="NFC_ERROR_BAD_HANDLE">
                <DESC>A bad handle value was detected.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_BAD_PARAMETER" value="NFC_ERROR_BAD_PARAMETER">
                <DESC>A wrong value was detected for a parameter.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_OUT_OF_RESOURCE" value="NFC_ERROR_OUT_OF_RESOURCE">
                <DESC>Resources error.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_BAD_TAG_FORMAT" value="NFC_ERROR_BAD_TAG_FORMAT">
                <DESC>Incorrect tag format.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_BAD_NDEF_FORMAT" value="NFC_ERROR_BAD_NDEF_FORMAT">
                <DESC>Incorrect NDEF format.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_TIMEOUT" value="NFC_ERROR_TIMEOUT">
                <DESC>The communication failed because a timeout expired.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_FEATURE_NOT_SUPPORTED" value="NFC_ERROR_FEATURE_NOT_SUPPORTED">
                <DESC>The requested feature is not supported.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_NDEF_UNKNOWN" value="NFC_ERROR_NDEF_UNKNOWN">
                <DESC>The NDEF message type is unknown.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_LOCKED_TAG" value="NFC_ERROR_LOCKED_TAG">
                <DESC>A write operation failed because the tag is locked or protected against writing operation.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_TAG_WRITE" value="NFC_ERROR_TAG_WRITE">
                <DESC>An error is detected in the data written into a tag.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_INCORRECT_RECORD_NO" value="NFC_ERROR_INCORRECT_RECORD_NO">
                <DESC>Incorrect record number provided as parameter.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_UICC_COMMUNICATION" value="NFC_ERROR_UICC_COMMUNICATION">
                <DESC>Error in communicating with UICC SE.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_TAG_DISCONNECTED" value="NFC_ERROR_TAG_DISCONNECTED">
                <DESC>Tag is no longer in Proximity.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_TAG_NOT_NDEF" value="NFC_ERROR_TAG_NOT_NDEF">
                <DESC>Tag is not NDEF Formatted.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_TAG_ALREADY_NDEF" value="NFC_ERROR_TAG_ALREADY_NDEF">
                <DESC>Tag is already NDEF Formatted.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_TAG_ALREADY_READONLY" value="NFC_ERROR_TAG_ALREADY_READONLY">
                <DESC>Tag is already Made Read only and locked for Writing.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_WRONG_RTD" value="NFC_ERROR_WRONG_RTD">
                <DESC>Incorrect RTD type.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_COMMAND_NOT_SUPPORTED" value="NFC_ERROR_COMMAND_NOT_SUPPORTED">
                <DESC>Command Not supported response from tag.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_OPERATION_PENDING" value="NFC_ERROR_OPERATION_PENDING">
                <DESC>Last operation not yet completed.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_INVALID_PARAMETER" value="NFC_ERROR_INVALID_PARAMETER">
                <DESC>Invalid Parameters response from tag.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_DLL_NOT_AVAILABLE" value="NFC_ERROR_DLL_NOT_AVAILABLE">
                <DESC>DLL not loaded.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_NOT_SUPPORTED" value="NFC_ERROR_NOT_SUPPORTED">
                <DESC>NFC not supported in the terminal.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_INCORRECT_RECORD_NO" value="NFC_ERROR_INCORRECT_RECORD_NO">
                <DESC>Record No. provided is invalid.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_ERROR_BUFFER_TOO_LARGE" value="NFC_ERROR_BUFFER_TOO_LARGE">
                <DESC>The buffer to be written to a Tag is large than the Tag capacity.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_BATTERY_CRITICAL" value="NFC_BATTERY_CRITICAL">
                <DESC>Battery percentage is below 6% and polling can’t be started.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_STATUS_FLIGHT_MODE_ON" value="NFC_STATUS_FLIGHT_MODE_ON">
                <DESC>Flight mode is ON and polling can’t be started.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_NOTIFY_TARGET_LOST" value="NFC_NOTIFY_TARGET_LOST">
                <DESC>Target moved out of the proximity.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_STATUS_UICC_IN_PROGRESS" value="NFC_STATUS_UICC_IN_PROGRESS">
                <DESC>UICC card emulation is in progress.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_STATUS_HOH_IN_PROGRESS" value="NFC_STATUS_HOH_IN_PROGRESS">
                <DESC>Host card emulation is in progress.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_STATUS_RW_IN_PROGRESS" value="NFC_STATUS_RW_IN_PROGRESS">
                <DESC>Reader mode is in progress.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_CE_CLOSED" value="NFC_CE_CLOSED">
                <DESC>Card emulation stopped due to reader mode enabled.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_STACK_ALREADY_INITIALISED" value="NFC_STACK_ALREADY_INITIALISED">
                <DESC>Stack is already initialized.</DESC>
            </CONSTANT>
            <CONSTANT name="NFC_STACK_NOT_INITIALISED" value="NFC_STACK_NOT_INITIALISED">
                <DESC>Stack is not initialized.</DESC>
            </CONSTANT>


            <CONSTANT name="NFC_MODE_P2P" value="NFC_MODE_P2P">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_MODE_Reader_Writer" value="NFC_MODE_Reader_Writer">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_MODE_CE" value="NFC_MODE_CE">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_MODE_CE_UICC" value="NFC_MODE_CE_UICC">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_MODE_CE_SE" value="NFC_MODE_CE_SE">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_MODE_CE_Host" value="NFC_MODE_CE_Host">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_MODE_Multiple_NDEFMessages" value="NFC_MODE_Multiple_NDEFMessages">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_MODE_LLCP" value="NFC_MODE_LLCP">
                <DESC></DESC>
            </CONSTANT>           
            <CONSTANT name="NFC_MODE_SNEP" value="NFC_MODE_SNEP">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_MODE_NPP" value="NFC_MODE_NPP">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_MODE_BT_StaticHandover" value="NFC_MODE_BT_StaticHandover">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_MODE_BT_DynamicHandover" value="NFC_MODE_BT_DynamicHandover">
                <DESC></DESC>
            </CONSTANT>
            
            <CONSTANT name="NFC_TAG_MiFareUL" value="NFC_TAG_MiFareUL">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TAG_MiFareStd" value="NFC_TAG_MiFareStd">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TAG_MiFareULC" value="NFC_TAG_MiFareULC">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TAG_ISO14443_4A" value="NFC_TAG_ISO14443_4A">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TAG_ISO14443_4B" value="NFC_TAG_ISO14443_4B">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TAG_ISO15693" value="NFC_TAG_ISO15693">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TAG_FeliCa" value="NFC_TAG_FeliCa">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TAG_Jewel" value="NFC_TAG_Jewel">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TAG_Desfire" value="NFC_TAG_Desfire">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TAG_MiFarePlus" value="NFC_TAG_MiFarePlus">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TAG_NXPIcode" value="NFC_TAG_NXPIcode">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TAG_Topaz" value="NFC_TAG_Topaz">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TAG_TITagIt" value="NFC_TAG_TITagIt">
                <DESC></DESC>
            </CONSTANT>
            
            <CONSTANT name="NFC_TNF_EMPTY" type="INTEGER" value="0">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TNF_WELL_KNOWN" type="INTEGER" value="1">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TNF_MIME_MEDIA" type="INTEGER" value="2">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TNF_ABSOLUTE_URI" type="INTEGER" value="3">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TNF_EXTERNAL_TYPE" type="INTEGER" value="4">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TNF_UNKNOWN" type="INTEGER" value="5">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_TNF_UNCHANGED" type="INTEGER" value="6">
                <DESC></DESC>
            </CONSTANT>

            <CONSTANT name="NFC_RTD_TEXT" type="STRING" value="T">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_RTD_URI" type="STRING" value="U">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_RTD_SMART_POSTER" type="STRING" value="Sp">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_RTD_ALTERNATIVE_CARRIER" type="STRING" value="ac">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_RTD_HANDOVER_CARRIER" type="STRING" value="Hc">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_RTD_HANDOVER_REQUEST" type="STRING" value="Hr">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_RTD_HANDOVER_SELECT" type="STRING" value="Hs">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_RTD_SIGNATURE_TYPE" type="STRING" value="Sig">
                <DESC></DESC>
            </CONSTANT>
            <CONSTANT name="NFC_RTD_GENERIC_CONTROL" type="STRING" value="Gc">
                <DESC></DESC>
            </CONSTANT>
            
            
        </CONSTANTS>	
        
        <METHODS>

            <METHOD name="intitialize" access="STATIC" hasCallback="optional">
                <DESC>init NFC</DESC>
                <RETURN type="STRING">
                    <DESC>return NFC_SUCCESS if OK</DESC>
                </RETURN>
                <PLATFORM>WM, Android</PLATFORM>
            </METHOD>

            <METHOD name="deIntitialize" access="STATIC" hasCallback="optional">
                <DESC>deinit NFC</DESC>
                <RETURN type="STRING">
                    <DESC>return NFC_SUCCESS if OK</DESC>
                </RETURN>
                <PLATFORM>WM, Android</PLATFORM>
            </METHOD>
            
            <METHOD name="resetConfigToDefault" access="STATIC" hasCallback="optional">
                <DESC>resett polling interval and passkey to default values</DESC>
                <RETURN type="STRING">
                    <DESC>return NFC_SUCCESS if OK</DESC>
                </RETURN>
                <PLATFORM>WM</PLATFORM>
            </METHOD>
            
            <METHOD name="getCapabilities" access="STATIC" hasCallback="optional">
                <DESC>return capability info hash</DESC>
                <RETURN type="HASH">
                    <DESC>return hash with capabilities</DESC>
                    <PARAMS>
                        <PARAM name="modesSupported;" type="ARRAY">
                            <DESC></DESC>
                            <PARAM type="STRING"/>
                        </PARAM>
                        <PARAM name="tagsSupported" type="ARRAY">
                            <DESC></DESC>
                            <PARAM type="STRING"/>
                        </PARAM>
                        <PARAM name="tagsFormattingSupported" type="ARRAY">
                            <DESC></DESC>
                            <PARAM type="STRING"/>
                        </PARAM>
                        <PARAM name="tagsMakeReadOnlySupported" type="ARRAY">
                            <DESC></DESC>
                            <PARAM type="STRING"/>
                        </PARAM>
                        <PARAM name="vendorName" type="STRING">
                            <DESC></DESC>
                        </PARAM>
                    </PARAMS>	
                </RETURN>
                <PLATFORM>WM, Android</PLATFORM>
            </METHOD>
            
            <METHOD name="closeAllHandles" access="STATIC" hasCallback="optional">
                <DESC>close all HW handles</DESC>
                <RETURN type="STRING">
                    <DESC>return NFC_SUCCESS if OK</DESC>
                </RETURN>
                <PLATFORM>WM</PLATFORM>
            </METHOD>
            
            <METHOD name="registerForTagDetection" access="STATIC" hasCallback="mandatory">
                <DESC>register callback for Tag detection</DESC>
                <PARAMS>
                    <PARAM name="tagsToBeDetected" type="ARRAY">
                        <DESC>array with tag types - only those tags will be detected</DESC>
                        <PARAM type="STRING">
                        </PARAM>    
                    </PARAM>
                </PARAMS>
                <CALLBACK type="HASH">
                    <DESC></DESC>
                    <PARAMS>
                        <PARAM name="status" type="STRING">
                            <DESC>NFC_SUCCESS if OK</DESC>
                        </PARAM>
                        <PARAM name="tag" type="Rho.NFC.Tag">
                            <DESC></DESC>
                        </PARAM>
                    </PARAMS>	
                </CALLBACK>
                <PLATFORM>WM, Android</PLATFORM>
            </METHOD>
            
            <METHOD name="registerForMessage" access="STATIC" hasCallback="mandatory">
                <DESC>register callback for Message receive</DESC>
                <PARAMS>
                    <PARAM name="TNFs" type="ARRAY">
                        <DESC>array with TNF - only those TNFs will be detected, if empty array - all TNFs</DESC>
                        <PARAM type="INTEGER">
                        </PARAM>    
                    </PARAM>
                    <PARAM name="RTDs" type="ARRAY">
                        <DESC>array with message types - only those typess will be detected, if empty array - all types</DESC>
                        <PARAM type="STRING">
                        </PARAM>    
                    </PARAM>
                </PARAMS>
                <CALLBACK type="HASH">
                    <DESC></DESC>
                    <PARAMS>
                        <PARAM name="status" type="STRING">
                            <DESC>NFC_SUCCESS if OK</DESC>
                        </PARAM>
                        <PARAM name="tag" type="Rho.NFC.Message">
                            <DESC></DESC>
                        </PARAM>
                    </PARAMS>	
                </CALLBACK>
                <PLATFORM>WM, Android</PLATFORM>
            </METHOD>
            
            <METHOD name="createMessage" access="STATIC" hasCallback="optional">
                <DESC>make new Message object, if payloadByteArray is setted, then Message make from this byte array</DESC>
                <PARAMS>
                    <PARAM name="payloadByteArray" type="ARRAY">
                        <PARAM type="INTEGER">
                        </PARAM>    
                        <DESC></DESC>
                        <CAN_BE_NIL/>
                    </PARAM>
                </PARAMS>
                <RETURN type="Rho.NFC.Message">
                    <DESC></DESC>
                </RETURN>
                <PLATFORM>WM, Android</PLATFORM>
            </METHOD>
            
            <METHOD name="createRecord" access="STATIC" hasCallback="optional">
                <DESC>make new Record object from byte array or string (you can set only one of payload parameter)</DESC>
                <PARAMS>
                    <PARAM name="TNF" type="INTEGER">
                        <DESC></DESC>
                    </PARAM>
                    <PARAM name="RTD" type="STRING">
                        <DESC></DESC>
                    </PARAM>
                    <PARAM name="payloadString" type="STRING">
                        <DESC></DESC>
                        <CAN_BE_NIL/>
                    </PARAM>
                    <PARAM name="payloadByteArray" type="ARRAY">
                        <PARAM type="INTEGER">
                        </PARAM>    
                        <DESC></DESC>
                        <CAN_BE_NIL/>
                    </PARAM>
                </PARAMS>
                <RETURN type="Rho.NFC.Record">
                    <DESC></DESC>
                </RETURN>
                <PLATFORM>WM, Android</PLATFORM>
            </METHOD>

        </METHODS>
        
        <USER_OVERVIEW>
        </USER_OVERVIEW>

        <VER_INTRODUCED>1.0.0</VER_INTRODUCED>
        <PLATFORM>
         </PLATFORM>
    </MODULE>
</API>    
