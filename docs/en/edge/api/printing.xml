<?xml version = "1.0"?>
<?xml-stylesheet type="text/xsl" href="pb_help.xsl"?>
<API>
    <MODULE name="Printer" parent="Rho">
        <HELP_OVERVIEW>The Printer Module provides access to find, connect, and print to BT, Network, and USB printers.</HELP_OVERVIEW>
        <MORE_HELP>This is general API that does not provides access to low level device functions. User should add appropriate extension to gain access to vendor specific API. Almost all operations are asynchronous, use callbacks for sequence of operations.</MORE_HELP>
    
        <TEMPLATES>
            <DEFAULT_INSTANCE/>
            <PROPERTY_BAG/>
            <SINGLETON_INSTANCES/>
        </TEMPLATES>

        <CONSTANTS>
            <!-- Printer control languages -->
            <CONSTANT name="PRINTER_LANGUAGE_ZPL" value="PRINTER_LANGUAGE_ZPL" type="STRING">
                <DESC>Printer control language ZPL</DESC>
            </CONSTANT>

            <CONSTANT name="PRINTER_LANGUAGE_CPCL" value="PRINTER_LANGUAGE_CPCL" type="STRING">
                <DESC>Printer control language CPCL</DESC>
            </CONSTANT>

            <CONSTANT name="PRINTER_LANGUAGE_EPS" value="PRINTER_LANGUAGE_EPS" type="STRING">
                <DESC>Printer control language EPS</DESC>
            </CONSTANT>

            <!-- Printer types -->
            <CONSTANT name="PRINTER_TYPE_ANY" value="PRINTER_TYPE_ANY" type="STRING"/>
            <CONSTANT name="PRINTER_TYPE_NATIVE" value="PRINTER_TYPE_NATIVE" type="STRING"/>
            <CONSTANT name="PRINTER_TYPE_ZEBRA" value="PRINTER_TYPE_ZEBRA" type="STRING"/>
            <CONSTANT name="PRINTER_TYPE_EPSON" value="PRINTER_TYPE_EPSON" type="STRING"/>
            <CONSTANT name="PRINTER_TYPE_APD" value="PRINTER_TYPE_APD" type="STRING"/>
            <!-- Connection types types -->
            <CONSTANT name="CONNECTION_TYPE_ANY" value="CONNECTION_TYPE_ANY" type="STRING"/>
            <CONSTANT name="CONNECTION_TYPE_ON_BOARD" value="CONNECTION_TYPE_ON_BOARD" type="STRING"/>
            <CONSTANT name="CONNECTION_TYPE_BLUETOOTH" value="CONNECTION_TYPE_BLUETOOTH" type="STRING"/>
            <CONSTANT name="CONNECTION_TYPE_TCP" value="CONNECTION_TYPE_TCP" type="STRING"/>
            <!-- Printer Status result -->
            <CONSTANT name="PRINTER_STATUS_SUCCESS" value="PRINTER_STATUS_SUCCESS" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERROR" value="PRINTER_STATUS_ERROR" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_IO" value="PRINTER_STATUS_ERR_IO" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_MEMORY" value="PRINTER_STATUS_ERR_MEMORY" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_NETWORK" value="PRINTER_STATUS_ERR_NETWORK" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_NOT_CONNECTED" value="PRINTER_STATUS_ERR_NOT_CONNECTED" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_NOT_FOUND" value="PRINTER_STATUS_ERR_NOT_FOUND" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_PARAM" value="PRINTER_STATUS_ERR_PARAM" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_PROCESSING" value="PRINTER_STATUS_ERR_PROCESSING" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_RESPONSE" value="PRINTER_STATUS_ERR_RESPONSE" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_TIMEOUT" value="PRINTER_STATUS_ERR_TIMEOUT" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_UNSUPPORTED" value="PRINTER_STATUS_ERR_UNSUPPORTED" type="STRING"/>

            <CONSTANT name="PRINTER_STATE_IS_READY_TO_PRINT" value="PRINTER_STATE_IS_READY_TO_PRINT" type="STRING">
                <DESC>use this name for requestState(), return true if printer ready to print</DESC>
            </CONSTANT>
            <CONSTANT name="PRINTER_STATE_IS_COVER_OPENED" value="PRINTER_STATE_IS_COVER_OPENED" type="STRING">
                <DESC>use this name for requestState(), return true if cover is opened</DESC>
            </CONSTANT>
            <CONSTANT name="PRINTER_STATE_IS_DRAWER_OPENED" value="PRINTER_STATE_IS_DRAWER_OPENED" type="STRING">
                <DESC>use this name for requestState(), return true if drawer is opened</DESC>
            </CONSTANT>
            <CONSTANT name="PRINTER_STATE_IS_PAPER_OUT" value="PRINTER_STATE_IS_PAPER_OUT" type="STRING">
                <DESC>use this name for requestState(), return true if paper out</DESC>
            </CONSTANT>
            <CONSTANT name="PRINTER_STATE_IS_BATTERY_LOW" value="PRINTER_STATE_IS_BATTERY_LOW" type="STRING">
                <DESC>use this name for requestState(), return true if battery low</DESC>
            </CONSTANT>
            
        </CONSTANTS>
        
        <PROPERTIES> 
            <!-- Common properties -->
            <DESC>general properties for Printer</DESC>
            <PROPERTY name="ID" type="STRING" readOnly="true">
                <DESC>unique printer ID during application lifetime</DESC>
            </PROPERTY>
            <PROPERTY name="deviceName" type="STRING" readOnly="true">
                <DESC>Bluetooth/Network name of printer</DESC>
            </PROPERTY>
            <PROPERTY name="printerType" type="STRING" readOnly="true">
                <DESC>type of printer - see PRINTER_TYPE_... consts</DESC>
            </PROPERTY>
            <PROPERTY name="deviceAddress" type="STRING" readOnly="true">
                <DESC>Bluetooth mac/TCP IP address</DESC>
            </PROPERTY>
            <PROPERTY name="devicePort" type="INTEGER" generateAccessors="true">
                <DESC>Default port when connecting using TCP/IP</DESC>
            </PROPERTY>
            <PROPERTY name="connectionType" type="STRING" readOnly="true">
                <DESC>Type of connection to printer</DESC>
            </PROPERTY>
            <PROPERTY name="isConnected" type="BOOLEAN" readOnly="true">
                <DESC>Connection status flag. All other properties are valid only if isConnect equals to true.</DESC>
            </PROPERTY>
        </PROPERTIES>   
        
        <METHODS access="INSTANCE">
            <METHOD name="enumerateSupportedTypes" access="STATIC" hasCallback="optional">
                <DESC>Return array with printer types that are supported in this build.</DESC>
                <CALLBACK type="ARRAY">
                    <DESC>Array of supported printer types, may contain PRINTER_TYPE_ZEBRA, PRINTER_TYPE_EPSON, PRINTER_TYPE_APD, PRINTER_TYPE_NATIVE or any combination of them. Result is returned immideatley. </DESC>
                    <PARAM type="STRING">
                        <DESC>Type of device.</DESC>
                    </PARAM>
                </CALLBACK>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>

            <METHOD name="searchPrinters" access="STATIC" hasCallback="mandatory">
                <DESC>search all printers on device and allBluetooth(R) or Network printers that are discoverable. Calls callback on each printer</DESC>
                <PARAMS>
                    <PARAM name="options" type="HASH">
                        <DESC>options for discover</DESC>
                        <CAN_BE_NIL/>
                        <PARAMS>
                            <PARAM name="printerType" type="STRING" default="PRINTER_TYPE_ANY">
                                <DESC>Printer types to search</DESC>
                            </PARAM>
                            <PARAM name="connectionType" type="STRING" default="CONNECTION_TYPE_ANY">
                                <DESC>Interfaces for seach (Bluetooth/TCP/All)</DESC>
                            </PARAM>
                            <PARAM name="timeout" type="INTEGER" default="30000">
                                <DESC>Maximum search interval in milliseconds</DESC>
                            </PARAM>
                            <PARAM name="deviceAddress" type="STRING">
                                <DESC>Printer adress (mac or ip). Can be used for setting either subnet mask or full address of printer. For TCP if address is not specified /8 subnet will be used for search.</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                            <PARAM name="devicePort" type="INTEGER">
                                <DESC>Override default printer port number.</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                        </PARAMS>
                    </PARAM>
                </PARAMS>
                <CALLBACK type="HASH">
                    <PARAMS>
                        <PARAM name="status" type="STRING">
                            <DESC>PRINTER_STATUS_SUCCESS, PRINTER_STATUS_ERROR</DESC>
                        </PARAM>
                        <PARAM name="printerID" type="STRING">
                            <DESC>printer ID only if status = PRINTER_STATUS_SUCCESS</DESC>
                            <CAN_BE_NIL/>
                        </PARAM>
                        <PARAM name="message" type="STRING">
                            <DESC>error message, only if status = ERROR</DESC>
                            <CAN_BE_NIL/>
                        </PARAM>
                        <PARAM name="additionalPrinterDiscoveryProperties" type="HASH">
                            <DESC>hash with printer parameters. Can be used for any additional parameters for founded printer. On Android for Zebra this hash conatin discoveryMap - full set of discovery printer properties</DESC>
                            <PLATFORM>Android</PLATFORM> 
                            <PARAMS>
                                <DESC>pairs string-string with printers parameters</DESC>
                                <PARAM name="prpertyWithStringValue" type="STRING">
                                    <DESC>Ignore it - it added for generate correct type for Hash in native code.</DESC>
                                    <CAN_BE_NIL/>
                                </PARAM>
                            </PARAMS>    
                        </PARAM>
                    </PARAMS>
                </CALLBACK>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>

            <METHOD name="stopSearch" access="STATIC" hasCallback="optional">
                <DESC>Stop discovery process</DESC>
            </METHOD>
            
            <METHOD name="getPrinterByID" access="STATIC">
                <DESC>return printer instance</DESC>
                <PARAMS>
                    <PARAM name="printerId" type="STRING">
                    </PARAM>
                </PARAMS>    
                <RETURN type="SELF_INSTANCE">
                </RETURN>   
            </METHOD>

            <METHOD name="connect" hasCallback="optional">
                <DESC>Connect to a printer using default options. After this function call state is automatically updated. NB: default options are defined by printer SDK and platform and may vary between different devices. </DESC>
                <CALLBACK type="STRING">
                    <DESC>Returns result of a connection attempt to printer. PRINTER_STATUS_SUCCESS, PRINTER_STATUS_TIMEOUT, PRINTER_STATUS_ERROR, PRINTER_STATUS_NOT_FOUND</DESC>
                </CALLBACK>
            </METHOD>

            <METHOD name="connectWithOptions" hasCallback="optional">
                <DESC>Connect to a printer using user options. After this function call state is automatically updated..</DESC>
                <PARAMS>
                    <PARAM name="options" type="HASH">                              
                        <DESC>Connect options</DESC>
                        <PARAMS>
                            <PARAM name="timeout" type="INTEGER" default="15000">
                                <DESC>connection timeout in milliseconds</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                            <PARAM name="additionalStringOption" type="STRING" generateDoc="false">
                                <DESC>Any addtional info. Ignore it - it added for generate correct type for Hash in native code.</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                        </PARAMS>
                    </PARAM>
                </PARAMS>
                <CALLBACK type="STRING">
                    <DESC>Returns result of a connection attempt to printer. PRINTER_STATUS_SUCCESS, PRINTER_STATUS_TIMEOUT, PRINTER_STATUS_ERROR, PRINTER_STATUS_NOT_FOUND</DESC>
                    <CAN_BE_NIL/>
                </CALLBACK>
            </METHOD>

            <METHOD name="requestState" hasCallback="mandatory">
                <DESC>Request printer state for list of parameters</DESC>
                <PARAMS>
                    <PARAM name="listOfParameters" type="ARRAY">
                        <DESC>list of parameters for request from printer device.</DESC>
                        <PARAM type="STRING">
                            <DESC>parameter name - see consts with PRINTER_STATE_...</DESC>
                        </PARAM>
                    </PARAM>
                </PARAMS>>
                <CALLBACK type="HASH">
                    <DESC>hash with pairs requestedParameter => value, also "status" always in returned hash. If you do not receive requested parameter thne this parameter is unsupported by printer</DESC>
                    <PARAMS>
                        <PARAM name="status" type="STRING">
                            <DESC>PRINTER_STATUS_SUCCESS, PRINTER_STATUS_ERROR</DESC>
                        </PARAM>
                        <PARAM name="message" type="STRING">
                            <DESC>error message, only if status = ERROR</DESC>
                            <CAN_BE_NIL/>
                        </PARAM>
                        <PARAM name="propertyWithIntValue" type="INTEGER" generateDoc="false">
                            <DESC>Ignore it - it added for generate correct type for Hash in native code.</DESC>
                            <CAN_BE_NIL/>
                        </PARAM>
                    </PARAMS>
                </CALLBACK>
            </METHOD>

            <METHOD name="disconnect" hasCallback="optional">
                <DESC>Disconnect from printer. If you want to receive result, you must specify callback</DESC>
                <RETURN type="STRING">
                    <DESC>Returns result of a disconnection. PRINTER_STATUS_SUCCESS, PRINTER_STATUS_ERROR</DESC>
                </RETURN>
            </METHOD>

            <METHOD name="printFile" hasCallback="optional">
                <DESC>Prints file. File extension is used to determine its type. Supported types: JPEG and PNG images, all other types are platform depend.</DESC>
                <PARAMS>
                    <PARAM name="path" type="STRING">
                        <DESC>Location of file to print.</DESC>
                    </PARAM>
                    <PARAM name="options" type="HASH">
                        <CAN_BE_NIL>
                            <DESC>Not providing properties to this function will print with default settings.</DESC>                                
                        </CAN_BE_NIL>
                        <PARAMS>
                            <DESC>Proivde a set of properties to configure file printing.</DESC>
                                <PARAM name="propertyWithStringValue" type="STRING"  generateDoc="false">
                                    <DESC>Ignore it - it added for generate correct type for Hash in native code.</DESC>
                                    <CAN_BE_NIL/>
                                </PARAM>
                                <PARAM name="propertyWithIntValue" type="INTEGER" generateDoc="false">
                                    <DESC>Ignore it - it added for generate correct type for Hash in native code.</DESC>
                                    <CAN_BE_NIL/>
                                </PARAM>                        
                        </PARAMS>    
                    </PARAM>
                </PARAMS>
                <RETURN type="STRING">
                    <DESC>Returns result of a printing attempt. PRINTER_STATUS_SUCCESS, PRINTER_STATUS_ERROR, </DESC>
                </RETURN>
            </METHOD>

            <METHOD name="printImageFromFile" hasCallback="optional">
                <DESC>Prints an image from mobile digital device's file system to the connected printer as a monochrome image. Note: if the image resolution is large (e.g. 1024x768) this method may take a long time to execute.</DESC>
                <PARAMS>
                    <PARAM name="path" type="STRING">
                        <DESC>Full path to image file. (The image must be either a PNG or JPG, all other types are platform depend).</DESC>
                    </PARAM>
                    <PARAM name="x" type="INTEGER">
                        <DESC>Horizontal starting position in dots.</DESC>
                    </PARAM>
                    <PARAM name="y" type="INTEGER">
                        <DESC>Vertical starting position in dots.</DESC>
                    </PARAM>
                    <PARAM name="options" type="HASH">
                        <DESC>Proivde a set of optional parameters.</DESC>
                        <CAN_BE_NIL></CAN_BE_NIL>
                        <PARAMS>
                            <PARAM name="width" type="INTEGER">
                                <DESC>Desired width of the printed image. Passing -1 will preserve original width.</DESC>
                            </PARAM>
                            <PARAM name="height" type="INTEGER">
                                <DESC>Desired height of the printed image. Passing -1 will preserve original height.</DESC>
                            </PARAM>
                            <PARAM name="isInsideFormat" type="BOOLEAN">
                                <DESC>Boolean value indicating whether this image should be printed by itself (false), or is part of a format being written to the connection (true).</DESC>
                            </PARAM>
                    </PARAMS>
                    </PARAM>
                </PARAMS>
                <CALLBACK type="STRING">
                    <DESC>Returns result of a printing attempt. PRINTER_STATUS_SUCCESS, PRINTER_STATUS_ERROR, </DESC>
                </CALLBACK>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>

            <METHOD name="printRawString" hasCallback="optional">
                <DESC>Send raw string to printer.</DESC>
                <PARAMS>
                    <PARAM name="command" type="STRING">
                        <DESC>Raw string to print.</DESC>
                    </PARAM>
                    <PARAM name="options" type="HASH">
                        <CAN_BE_NIL>
                            <DESC>Not providing properties to this function will print with default settings.</DESC>                                
                        </CAN_BE_NIL>
                        <PARAMS>
                            <DESC>Proivde a set of properties to configure the printer.</DESC>
                            <PARAM name="propertyWithStringValue" type="STRING"  generateDoc="false">
                                <DESC>Ignore it - it added for generate correct type for Hash in native code.</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                            <PARAM name="propertyWithIntValue" type="INTEGER"  generateDoc="false">
                                <DESC>Ignore it - it added for generate correct type for Hash in native code.</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>                        
                        </PARAMS>    
                    </PARAM>
                </PARAMS>
                <CALLBACK type="HASH">
                    <DESC></DESC>
                    <PARAMS>
                        <PARAM name="status" type="STRING">
                            <DESC>PRINTER_STATUS_SUCCESS, PRINTER_STATUS_ERROR</DESC>
                        </PARAM>
                        <PARAM name="message" type="STRING">
                            <DESC>error message, only if status = ERROR</DESC>
                            <CAN_BE_NIL/>
                        </PARAM>
                        <PARAM name="stringResponce" type="STRING">
                            <DESC>responce from printer if received, converted to string from byteArray(original data)</DESC>
                            <CAN_BE_NIL/>
                            <PLATFORM>Android</PLATFORM>
                        </PARAM>
                        <PARAM name="byteArrayResponce" type="ARRAY">
                            <PARAM type="INTEGER">
                            </PARAM>    
                            <DESC>responce from printer if received</DESC>
                            <CAN_BE_NIL/>
                            <PLATFORM>Android</PLATFORM>
                        </PARAM>
                    </PARAMS>
                </CALLBACK>
            </METHOD>

            <METHOD name="enumerateSupportedControlLanguages" hasCallback="optional">
                <DESC>Return array with languages supported by this printer</DESC>
                <CALLBACK type="ARRAY">
                    <DESC>Array of supported printer control languages</DESC>
                    <PARAM type="STRING">
                        <DESC>Language. See - PRINTER_LANGUAGE_... constants.</DESC>
                    </PARAM>
                </CALLBACK>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>
        </METHODS>
        
        <USER_OVERVIEW>
        </USER_OVERVIEW>
        <VER_INTRODUCED>1.0.0</VER_INTRODUCED>
        <PLATFORM>
         </PLATFORM>
    </MODULE>
</API>    
