<?xml version = "1.0"?>
<?xml-stylesheet type="text/xsl" href="pb_help.xsl"?>
<API>
    <MODULE name="Printer" parent="Rho">
        <HELP_OVERVIEW>The Printer Module provides access to find, connect, and print to Bluetooth and WiFi Network printers.</HELP_OVERVIEW>
        <MORE_HELP>This is general API that does not provides access to low level device functions. User should add appropriate extension to gain access to vendor specific API. Almost all operations are asynchronous, use callbacks for sequence of operations.

## Enabling the API
In order to use this API you must include the following extension in your `build.yml`
    :::ruby
    extensions: ["printing"]

NOTE: If you are building a Windows Mobile or Windows CE app with this API, you must set your app_type as "rhoelements" in your build.yml as shown [here](../guide/build_config#other-build-time-settings).

## JavaScript Usage
Be sure to review the [JavaScript API Usage](/guide/api_js) guide for important information about using this API in JavaScript.

## Ruby Usage
Be sure to review the [Ruby API Usage](/guide/api_ruby) guide for important information about using this API in Ruby.
        </MORE_HELP>

        <TEMPLATES>
            <DEFAULT_INSTANCE/>
            <PROPERTY_BAG/>
            <SINGLETON_INSTANCES/>
        </TEMPLATES>

        <CONSTANTS>
            <!-- Printer control languages -->
            <CONSTANT name="PRINTER_LANGUAGE_ZPL" value="PRINTER_LANGUAGE_ZPL" type="STRING">
                <DESC>Printer control language ZPL.</DESC>
            </CONSTANT>

            <CONSTANT name="PRINTER_LANGUAGE_CPCL" value="PRINTER_LANGUAGE_CPCL" type="STRING">
                <DESC>Printer control language CPCL.</DESC>
            </CONSTANT>

            <CONSTANT name="PRINTER_LANGUAGE_EPS" value="PRINTER_LANGUAGE_EPS" type="STRING">
                <DESC>Printer control language EPS.</DESC>
            </CONSTANT>

            <!-- Printer types -->
            <CONSTANT name="PRINTER_TYPE_ANY" value="PRINTER_TYPE_ANY" type="STRING"/>
            <CONSTANT name="PRINTER_TYPE_NATIVE" value="PRINTER_TYPE_NATIVE" type="STRING"/>
            <CONSTANT name="PRINTER_TYPE_ZEBRA" value="PRINTER_TYPE_ZEBRA" type="STRING"/>
            <CONSTANT name="PRINTER_TYPE_EPSON" value="PRINTER_TYPE_EPSON" type="STRING"/>
            <CONSTANT name="PRINTER_TYPE_APD" value="PRINTER_TYPE_APD" type="STRING"/>
            <!-- Connection types types -->
            <CONSTANT name="CONNECTION_TYPE_ANY" value="CONNECTION_TYPE_ANY" type="STRING"/>
            <CONSTANT name="CONNECTION_TYPE_ON_BOARD" value="CONNECTION_TYPE_ON_BOARD" type="STRING"/>
            <CONSTANT name="CONNECTION_TYPE_BLUETOOTH" value="CONNECTION_TYPE_BLUETOOTH" type="STRING"/>
            <CONSTANT name="CONNECTION_TYPE_TCP" value="CONNECTION_TYPE_TCP" type="STRING"/>
            <!-- Printer Status result -->
            <CONSTANT name="PRINTER_STATUS_SUCCESS" value="PRINTER_STATUS_SUCCESS" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERROR" value="PRINTER_STATUS_ERROR" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_IO" value="PRINTER_STATUS_ERR_IO" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_MEMORY" value="PRINTER_STATUS_ERR_MEMORY" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_NETWORK" value="PRINTER_STATUS_ERR_NETWORK" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_NOT_CONNECTED" value="PRINTER_STATUS_ERR_NOT_CONNECTED" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_NOT_FOUND" value="PRINTER_STATUS_ERR_NOT_FOUND" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_PARAM" value="PRINTER_STATUS_ERR_PARAM" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_PROCESSING" value="PRINTER_STATUS_ERR_PROCESSING" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_RESPONSE" value="PRINTER_STATUS_ERR_RESPONSE" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_TIMEOUT" value="PRINTER_STATUS_ERR_TIMEOUT" type="STRING"/>
            <CONSTANT name="PRINTER_STATUS_ERR_UNSUPPORTED" value="PRINTER_STATUS_ERR_UNSUPPORTED" type="STRING"/>

            <CONSTANT name="PRINTER_STATE_IS_READY_TO_PRINT" value="PRINTER_STATE_IS_READY_TO_PRINT" type="STRING">
                <DESC>Use this name for requestState(), return true if printer ready to print.</DESC>
            </CONSTANT>
            <CONSTANT name="PRINTER_STATE_IS_COVER_OPENED" value="PRINTER_STATE_IS_COVER_OPENED" type="STRING">
                <DESC>Use this name for requestState(), return true if cover is opened.</DESC>
            </CONSTANT>
            <CONSTANT name="PRINTER_STATE_IS_DRAWER_OPENED" value="PRINTER_STATE_IS_DRAWER_OPENED" type="STRING">
                <DESC>Use this name for requestState(), return true if drawer is opened.</DESC>
            </CONSTANT>
            <CONSTANT name="PRINTER_STATE_IS_PAPER_OUT" value="PRINTER_STATE_IS_PAPER_OUT" type="STRING">
                <DESC>Use this name for requestState(), return true if paper out.</DESC>
            </CONSTANT>
            <CONSTANT name="PRINTER_STATE_IS_BATTERY_LOW" value="PRINTER_STATE_IS_BATTERY_LOW" type="STRING">
                <DESC>Use this name for requestState(), return true if battery low.</DESC>
            </CONSTANT>
        </CONSTANTS>

        <PROPERTIES> 
            <!-- Common properties -->
            <DESC>General properties for Printer.</DESC>
            <PROPERTY name="ID" type="STRING" readOnly="true">
                <DESC>Unique printer ID during application lifetime.</DESC>
            </PROPERTY>
            <PROPERTY name="deviceName" type="STRING" readOnly="true">
                <DESC>Bluetooth/Network name of printer.</DESC>
            </PROPERTY>
            <PROPERTY name="printerType" type="STRING" readOnly="true">
                <DESC>Type of printer - see PRINTER_TYPE_... consts.</DESC>
            </PROPERTY>
            <PROPERTY name="deviceAddress" type="STRING" readOnly="true">
                <DESC>Bluetooth mac/TCP IP address.</DESC>
            </PROPERTY>
            <PROPERTY name="devicePort" type="INTEGER" generateAccessors="true">
                <DESC>Default port when connecting using TCP/IP.</DESC>
            </PROPERTY>
            <PROPERTY name="connectionType" type="STRING" readOnly="true">
                <DESC>Type of connection to printer.</DESC>
            </PROPERTY>
            <PROPERTY name="isConnected" type="BOOLEAN" readOnly="true">
                <DESC>Connection status flag. All other properties are valid only if isConnect equals to true. Please keep in mind: this property do not guarantee real connection, because all real device functionality processed in separated thread asynchronously. If you want real check physical connection - use requestState() method with receive result in callback. Only this way process real request to device and analyze answer from device.</DESC>
            </PROPERTY>
        </PROPERTIES>   
        
        <METHODS access="INSTANCE">
            <METHOD name="enumerateSupportedTypes" access="STATIC" hasCallback="optional">
                <DESC>Returns array with supported printer types immediately. The result depends on your build configuration. Each extension is linked to application during build. If you want to add or remove support of any printer type please update extension list in the build.yml. </DESC>
                <RETURN type="ARRAY">
                    <DESC>Array of currently supported printer types. Depends on build settings. May contain PRINTER_TYPE_ZEBRA, PRINTER_TYPE_EPSON, PRINTER_TYPE_APD, PRINTER_TYPE_NATIVE or any combination of them.</DESC>
                    <PARAM type="STRING">
                        <DESC>Type of device.</DESC>
                    </PARAM>
                </RETURN>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>

            <METHOD name="searchPrinters" access="STATIC" hasCallback="mandatory">
                <DESC>Search printers connected to this device, available Bluetooth(R) or Network printers. Also this method could be used to get printerID for known network/bluetooth printer, in this case you should specify deviceAddress parameter in options. Result is returned asynchronously using callback. Callback is called for each discovered printer. Search is finished if printerID is not set in callback hash. Note: discovery is not guaranteed to return all the available devices. Please run this method at least 2-3 times to get result with good accuracy.

NOTE: on Android platfrom due to HW specific, when you call searchPrinters() for Bluetooth or for TCP and Bluetooth both, Application can freeze for few seconds - if user touch screen Android system can show Alert about "application not responded" - user should select [continue waiting] button.
                </DESC>
                <PARAMS>
                    <PARAM name="options" type="HASH">
                        <DESC>Options for discover.</DESC>
                        <CAN_BE_NIL/>
                        <PARAMS>
                            <PARAM name="printerType" type="STRING" default="PRINTER_TYPE_ANY">
                                <DESC>Printer types to search. Make sure that Printer type is supported by calling enumerateSupportedTypes method.</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                            <PARAM name="connectionType" type="STRING" default="CONNECTION_TYPE_ANY">
                                <DESC>Interfaces for search (Bluetooth/TCP/All)</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                            <PARAM name="timeout" type="INTEGER" default="30000">
                                <DESC>Maximum search interval in milliseconds, applies to network discovery. This is the maximum interval for wait during connection attempt. Note: if no printer was found even with timeout property status will be set to PRINTER_STATUS_SUCCESS, but without any printerId.</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                            <PARAM name="deviceAddress" type="STRING">
                                <DESC>Printer address (mac or ip). Can be used for setting either subnet mask or full address of printer. For TCP if address is not specified /8 subnet will be used for search. </DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                            <PARAM name="devicePort" type="INTEGER" default="6101">
                                <DESC>Override default printer port number. Applicable for network discovery only.</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                        </PARAMS>
                    </PARAM>
                </PARAMS>
                <CALLBACK type="HASH">
                    <PARAMS>
                        <PARAM name="status" type="STRING">
                            <DESC>Status of network discovery, can be following:
* PRINTER_STATUS_SUCCESS - when printer is discovered or operation is finished;
* PRINTER_STATUS_ERROR - general error 
* PRINTER_STATUS_ERR_UNSUPPORTED - in case if printer type is not supported
* PRINTER_STATUS_ERR_NOT_CONNECTED - in case if deviceAddress was specified in options and device was unable to connect to printer.</DESC>
                        </PARAM>
                        <PARAM name="printerID" type="STRING">
                            <DESC>Printer ID, valid only if status equals to 'PRINTER_STATUS_SUCCESS'. If there are no more printers available printerID will not be defined.</DESC>
                            <CAN_BE_NIL/>
                        </PARAM>
                        <PARAM name="message" type="STRING">
                            <DESC>Error message, only if status = ERROR.</DESC>
                            <CAN_BE_NIL/>
                        </PARAM>
                    </PARAMS>
                </CALLBACK>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>

            <METHOD name="stopSearch" access="STATIC">
                <DESC>Stop all active and pending search requests. Function does not return any results. All running search requests are canceled immediately.</DESC>
                <PLATFORM>Android, iOS</PLATFORM> 
            </METHOD>
            
            <METHOD name="getPrinterByID" access="STATIC">
                <DESC>Return printer instance specified by printerId. If there is no printers with this ID null is returned. To get valid printerId please use searchPrinters function.</DESC>
                <PARAMS>
                    <PARAM name="printerId" type="STRING">
                    </PARAM>
                </PARAMS>    
                <RETURN type="SELF_INSTANCE">
                </RETURN>   
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>

            <METHOD name="connect" hasCallback="optional">
                <DESC>Connect to a printer using default options. Works asynchronously, use callback to check the result. If connection is successful printer state and properties are automatically updated. NB: default options are defined by printer SDK and platform and may vary between different devices.</DESC>
                <CALLBACK type="STRING">
                    <DESC>Returns result of a connection attempt to printer. PRINTER_STATUS_SUCCESS, PRINTER_STATUS_TIMEOUT, PRINTER_STATUS_ERROR, PRINTER_STATUS_NOT_FOUND.</DESC>
                </CALLBACK>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>

            <METHOD name="connectWithOptions" hasCallback="optional">
                <DESC>Connect to a printer using user options. Works asynchronously, use callback to check the result. After this function call state is automatically updated.</DESC>
                <PARAMS>
                    <PARAM name="options" type="HASH">
                        <DESC>Connect options.</DESC>
                        <PARAMS>
                            <PARAM name="timeout" type="INTEGER" default="15000">
                                <DESC>Connection timeout in milliseconds. Must be larger 0 !</DESC>
                                <PLATFORM>WM, iOS, Android</PLATFORM>
                                <CAN_BE_NIL/>
                            </PARAM>
                            <PARAM name="additionalStringOption" type="STRING" generateDoc="false">
                                <DESC>Any additional info. Ignore it - it added for generate correct type for Hash in native code.</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                        </PARAMS>
                    </PARAM>
                </PARAMS>
                <CALLBACK type="STRING">
                    <DESC>Returns result of a connection attempt to printer. PRINTER_STATUS_SUCCESS, PRINTER_STATUS_TIMEOUT, PRINTER_STATUS_ERROR, PRINTER_STATUS_NOT_FOUND.</DESC>
                    <CAN_BE_NIL/>
                </CALLBACK>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>

            <METHOD name="requestState" hasCallback="mandatory">
                <DESC>Requests printer state with a list of parameters.

* Works asynchronously and uses the callback to check the result. 
* Returns hash with status, and parameters as keys.

NOTE: On the Windows Mobile / Windows CE platform, this method does not work in the case of a bluetooth connection.</DESC>
                <PARAMS>
                    <PARAM name="listOfParameters" type="ARRAY">
                        <DESC>List of parameters for request from printer device.</DESC>
                        <PARAM type="STRING">
                            <DESC>Parameter name - see consts with PRINTER_STATE_...</DESC>
                        </PARAM>
                    </PARAM>
                </PARAMS>>
                <CALLBACK type="HASH">
                    <DESC>If printer does not supports some parameter then it will not be included in result hash.</DESC>
                    <PARAMS>
                        <PARAM name="status" type="STRING">
                            <DESC>PRINTER_STATUS_SUCCESS, PRINTER_STATUS_ERROR.</DESC>
                        </PARAM>
                        <PARAM name="message" type="STRING">
                            <DESC>Error message, only if status = ERROR.</DESC>
                            <CAN_BE_NIL/>
                        </PARAM>
                        <PARAM name="propertyWithIntValue" type="INTEGER" generateDoc="false">
                            <DESC>Ignore it - it added for generate correct type for Hash in native code.</DESC>
                            <CAN_BE_NIL/>
                        </PARAM>
                    </PARAMS>
                </CALLBACK>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>

            <METHOD name="disconnect" hasCallback="optional">
                <DESC>Disconnect from a printer and release OS resources. Works asynchronously, use callback to check the result.</DESC>
                <CALLBACK type="STRING">
                    <DESC>Returns result of a disconnection. PRINTER_STATUS_SUCCESS, PRINTER_STATUS_ERROR.</DESC>
                </CALLBACK>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>

            <METHOD name="printFile" hasCallback="optional">
                <DESC>Prints file. Works asynchronously, use callback to check the result. File extension is used to determine its type. Supported types: JPEG and PNG images.</DESC>
                <PARAMS>
                    <PARAM name="filePathOnDevice" type="STRING">
                        <DESC>Full path to local image file on the device.</DESC>
                    </PARAM>
                    <PARAM name="options" type="HASH" generateDoc="false">
                        <CAN_BE_NIL>
                            <DESC>Not providing properties to this function will print with default settings. Reserved for future use.</DESC>
                        </CAN_BE_NIL>
                        <PARAMS>
                            <DESC>Provide a set of properties to configure file printing.</DESC>
                            <PARAM name="propertyWithStringValue" type="STRING"  generateDoc="false">
                                <DESC>Ignore it - it added for generate correct type for Hash in native code.</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                            <PARAM name="propertyWithIntValue" type="INTEGER" generateDoc="false">
                                <DESC>Ignore it - it added for generate correct type for Hash in native code.</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                        </PARAMS>
                    </PARAM>
                </PARAMS>
                <CALLBACK type="STRING">
                    <DESC>Returns result of a printing attempt. PRINTER_STATUS_SUCCESS, PRINTER_STATUS_ERROR, </DESC>
                </CALLBACK>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>

            <METHOD name="printImageFromFile" hasCallback="optional">
                <DESC>Prints an image from mobile digital device's file system to the connected printer as a monochrome image. Works asynchronously, use callback to check the result. Note: if the image resolution is large (e.g. 1024x768) this method may take a long time to execute. It is not guaranteed that files larger than 1024x1024 could be printed correctly.</DESC>
                <PARAMS>
                    <PARAM name="filePathOnDevice" type="STRING">
                        <DESC>Full path to local image file on the device. (The image must be either a PNG or JPG, all other types are platform depend).</DESC>
                    </PARAM>
                    <PARAM name="x" type="INTEGER">
                        <DESC>Horizontal starting position in dots.</DESC>
                    </PARAM>
                    <PARAM name="y" type="INTEGER">
                        <DESC>Vertical starting position in dots.</DESC>
                    </PARAM>
                    <PARAM name="options" type="HASH">
                        <DESC>Provide a set of optional parameters.</DESC>
                        <CAN_BE_NIL></CAN_BE_NIL>
                        <PARAMS>
                            <PARAM name="width" type="INTEGER">
                                <DESC>Desired width of the printed image. Passing -1 will preserve original width.</DESC>
                            </PARAM>
                            <PARAM name="height" type="INTEGER">
                                <DESC>Desired height of the printed image. Passing -1 will preserve original height.</DESC>
                            </PARAM>
                            <PARAM name="isInsideFormat" type="BOOLEAN">
                                <DESC>Boolean value indicating whether this image should be printed by itself (false), or is part of a format being written to the connection (true).</DESC>
                            </PARAM>
                        </PARAMS>
                    </PARAM>
                </PARAMS>
                <CALLBACK type="STRING">
                    <DESC>Returns result of a printing attempt. PRINTER_STATUS_SUCCESS, PRINTER_STATUS_ERROR, </DESC>
                </CALLBACK>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>

            <METHOD name="printRawString" hasCallback="optional">
                <DESC>Send raw string to printer. Works asynchronously, use callback to check the result.</DESC>
                <PARAMS>
                    <PARAM name="command" type="STRING">
                        <DESC>Raw string to print. Could be any valid command in printer supported programming language.</DESC>
                    </PARAM>
                    <PARAM name="options" type="HASH" generateDoc="false">
                        <CAN_BE_NIL>
                            <DESC>Not providing properties to this function will print with default settings.</DESC>                    
                        </CAN_BE_NIL>
                        <PARAMS>
                            <DESC>Provide a set of properties to configure the printer.</DESC>
                            <PARAM name="propertyWithStringValue" type="STRING"  generateDoc="false">
                                <DESC>Ignore it - it added for generate correct type for Hash in native code.</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>
                            <PARAM name="propertyWithIntValue" type="INTEGER"  generateDoc="false">
                                <DESC>Ignore it - it added for generate correct type for Hash in native code.</DESC>
                                <CAN_BE_NIL/>
                            </PARAM>                        
                        </PARAMS>    
                    </PARAM>
                </PARAMS>
                <CALLBACK type="HASH">
                    <DESC></DESC>
                    <PARAMS>
                        <PARAM name="status" type="STRING">
                            <DESC>PRINTER_STATUS_SUCCESS, PRINTER_STATUS_ERROR.</DESC>
                        </PARAM>
                        <PARAM name="message" type="STRING">
                            <DESC>Error message, only if status = ERROR.</DESC>
                            <CAN_BE_NIL/>
                        </PARAM>
                        <PARAM name="stringResponce" type="STRING">
                            <DESC>Response from printer if received, converted to string from byteArray(original data)</DESC>
                            <CAN_BE_NIL/>
                            <PLATFORM>Android, WM</PLATFORM>
                        </PARAM>
                        <PARAM name="byteArrayResponce" type="ARRAY">
                            <PARAM type="INTEGER"></PARAM>    
                            <DESC>Response from printer if received.</DESC>
                            <CAN_BE_NIL/>
                            <PLATFORM>Android</PLATFORM>
                        </PARAM>
                    </PARAMS>
                </CALLBACK>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>

            <METHOD name="enumerateSupportedControlLanguages" hasCallback="optional">
                <DESC>Return array with languages supported by this printer.</DESC>
                <RETURN type="ARRAY">
                    <DESC>Array of supported printer control languages.</DESC>
                    <PARAM type="STRING">
                        <DESC>Language. See - PRINTER_LANGUAGE_... constants.</DESC>
                    </PARAM>
                </RETURN>
                <PLATFORM>WM, Android, iOS</PLATFORM> 
            </METHOD>
        </METHODS>

        <USER_OVERVIEW>
        </USER_OVERVIEW>
        <VER_INTRODUCED>1.0.0</VER_INTRODUCED>
        <PLATFORM>
        </PLATFORM>
    </MODULE>
</API>
