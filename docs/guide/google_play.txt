# Google Play

## Setup native SDK for Android

Follow the instructions for [setting up the development environment](/guide/nativesdksetup#setup-for-android) for building Android applications.

### Using RhoHub

Alternatively, you can create the device builds with RhoHub. RhoHub is a cloud based service that integrates with RhoStudio to allow building and packaging apps for all platforms.

You can use it:

* to avoid installing SDKs locally
* to quickly get you up and running
* for building and packaging for platforms that are not supported by your development computer, for example building iPhone apps from your Windows PC.

See the [RhoHub tutorial](/guide/rhohubtutorial) for more details.

## Configuring the production build

### The minimum Android API level

The minimal API level supported by Rhodes is 4 (Android 1.6) You can set a greater minimal API level in `build.yml`.

For example, the following entry will make your application require Android version 3.0 as a minimum:

    :::yaml
    android:
        minSDK: 11
    
### Device capabilities

You must specify which device capabilities your application will use in `build.yml`. By default, these capabilities are NOT enabled.

For example, your `build.yml` might look like the below:

    :::yaml
    capabilities:
        - audio
        - camera
        - gps
        - network_state
        - phone
        - pim
        - record_audio
        - vibrate
        - bluetooth
        - calendar
        - sdcard
        - push
        - hardware_acceleration
        
### Application Signing

To build a production version of your application, edit your application’s `build.yml` as below:

Configure the developer certificate in the `build.yml`

    :::yaml
    android:
        production:
            certificate: path/to/your/developer/certificate
            password: "password-of-the-certificate"
            alias: "keystore.alias"
            
This will use the specified certificate to sign your application. If the certificate is not found, it will be auto-generated, and you’ll be prompted with several questions like your name, organization etc. The path to the certificate may be absolute or relative to your app directory. If you don’t want to use an auto-generated certificate, refer to the these [instructions](http://developer.android.com/tools/publishing/app-signing.html#cert) on how to create a certificate manually.

### Customizing application’s AndroidManifest.xml

If you have an urgent need to make changes in AndroidManifest.xml that are not supported by build settings, you may edit a manifest template located at `/platform/android/Rhodes/AndroidManifest.xml.erb`. Please note that this template does not relate to a particular application, but it is used for every Android application build.

## Creating the signed APK

Once your `build.yml` is set up, you can run:

    :::term
    $ rake device:android:production

The signed APK will be created in `<app-dir>/bin/target`. You can upload the file to Google Play.

## Publishing on Google Play Market

To publish your app on Google Play you need a Google Play publisher account. Goto the [Google Play Developer Console](https://play.google.com/apps/publish/) to create one.

Refer to the Android docs for [Publishing on Google Play](http://developer.android.com/distribute/googleplay/publish/) for further steps to distribute to Google Play.
