Installing the Heroku command-line tool
=======================================

The `heroku` command-line tool is an interface to the Heroku Web API and
includes support for things like creating/renaming apps, running rake commands,
taking backups, and configuring add-ons. Most app management activities require
the `heroku` command to be installed and configured alongside your local
working environment.

[Sign-up for a Heroku account](http://heroku.com/signup) if you haven't already
and then install the "heroku" gem. You will be asked to enter your Heroku
credentials the first time you run a command. 

    $ sudo gem install heroku

It's general a good idea to add your public key immediately after installing the
heroku gem so that you can use git to push or clone Heroku app repositories:

    $ heroku keys:add
    Enter your Heroku credentials.
    Email: joe@example.com
    Password: 
    Uploading ssh public key /Users/joe/.ssh/id_rsa.pub

### Usage

Running `heroku help` displays a usage summary:

    === General Commands

     list                         # list your apps
     create [<name>]              # create a new app

     keys                         # show your user's public keys
     keys:add [<path to keyfile>] # add a public key
     keys:remove <keyname>        # remove a key by name (user@host)
     keys:clear                   # remove all keys

    === App Commands (execute inside a checkout directory, or use --app <appname>)

     info                         # show app info, like web url and git repo
     open                         # open the app in a web browser
     rename <newname>             # rename the app

     sharing:add <email>          # add a collaborator
     sharing:remove <email>       # remove a collaborator
     sharing:transfer <email>     # transfers the app ownership

     domains:add <domain>         # add a custom domain name
     domains:remove <domain>      # remove a custom domain name
     domains:clear                # remove all custom domains

     rake <command>               # remotely execute a rake command
     console <command>            # remotely execute a single console command
     console                      # start an interactive console to the remote app

     restart                      # restart app servers
     logs                         # fetch recent log output for debugging
     logs:cron                    # fetch cron log output

     config                       # display the app's config vars (environment)
     config:add key=val [...]     # add one or more config vars
     config:remove key [...]      # remove one or more config vars
     config:clear                 # clear user-set vars and reset to default

     db:pull [<database_url>]     # pull the app's database into a local database
     db:push [<database_url>]     # push a local database into the app's remote database
     db:reset                     # reset the database for the app

     bundles                      # list bundles for the app
     bundles:capture [<bundle>]   # capture a bundle of the app's code and data
     bundles:download             # download most recent app bundle as a tarball
     bundles:download <bundle>    # download the named bundle
     bundles:animate <bundle>     # animate a bundle into a new app
     bundles:destroy <bundle>     # destroy the named bundle

     addons                       # list addons
     addons:add name [...]        # install one or more addons
     addons:remove name [...]     # uninstall one or more addons
     addons:clear                 # uninstall all addons

     destroy                      # destroy the app permanently

The commands are divided into two types: general commands and app commands.

### General Commands

General commands operate on your Heroku account as a whole, and are not specific
to a particular app.  For instance, to get a list of apps you created or are a
collaborator on:

    $ heroku list
    fooapp
    barapp
    yetanotherapp

### App Commands

App commands are typically executed from within an app's local git working copy.
The app name is automatically detected by scanning the git remotes for the
current working copy, so you don't have to specify which app to operate on
explicitly. For example, the `heroku info` command can be executed without any
arguments inside the working copy:

    $ cd myapp
    $ heroku info
    === myapp
    Web URL:        http://myapp.heroku.com/
    Git Repo:       git@heroku.com:myapp.git
    Repo size:      960k
    Slug size:      512k
    Data size:      88k in 3 tables
    Collaborators:  you@example.com

If you have multiple heroku remotes or want to execute an app command outside of
a local working copy, you can specify an explicit app name, domain, or git
remote as follows:

    $ heroku info --app myapp
    $ heroku info --app www.example.com
    $ heroku info --remote staging
