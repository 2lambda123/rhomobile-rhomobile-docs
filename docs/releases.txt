Rhomobile Product Releases
===

## Current Release
* Rhodes - [2.3.1 Release Notes](https://github.com/rhomobile/rhodes/raw/2.3.1/CHANGELOG)
* RhoSync - [2.2.0 Release Notes](https://github.com/rhomobile/rhosync/raw/master/CHANGELOG)

Please make sure to review the [Rhodes](/rhodes/introduction) and [RhoSync](/rhosync/introduction) pages periodically for information on new features.

## Getting New Versions

### Rhodes
Choose one of three options, then review the upgrade instructions for the version you downloaded.

Option A: If you already have rhodes as a gem installed, you can simply do:

	:::term
	$ [sudo] gem update rhodes
  	$ rhodes-setup
  	$ set-rhodes-sdk (from your application's root folder)

Option B: If you were tracking rhodes by a specific branch, just run:
	:::term
  	$ cd rhodes
  	$ git pull

or
	:::term
  	$ git checkout <tag> (if you want the specific released version)

Option C: If you downloaded rhodes from github directly, you can download the new versions here: [http://github.com/rhomobile/rhodes/downloads](http://github.com/rhomobile/rhodes/downloads)

### RhoSync
Choose one of three options, then review the upgrade instructions for the version you downloaded.

Option A: If you already have rhosync as a gem installed, you can simply do:
	:::term
  	$ [sudo] gem update rhosync

Option B: If you were tracking rhosync by a specific branch, just run:
	:::term
  	$ cd rhosync
  	$ git pull

or
	:::term
  	$ git checkout <tag> (if you want the specific released version)

Option C: If you downloaded rhosync from github directly, you can download the new versions here: [http://github.com/rhomobile/rhosync/downloads](http://github.com/rhomobile/rhosync/downloads)

#### Migrating to version >= 2.2.0
Starting from version 2.2.0 RhoSync gem uses Bundler to manage gem's dependencies, Also it's based on RSpec2 testing framework which is not compatible with old RSpec1. In result all spec files generated by older gem versions will fail. To fix it and get benefits of bundler support for legacy RhoSync applications, you should make a few small upgrading
steps.

Create in project directory the following file ***'Gemfile'***:

	:::ruby
	source 'http://rubygems.org'

	gem 'rhosync', '2.2.0'

	group :development do
	  # By default to run application Mongrel web server is used
	  gem 'mongrel', '~> 1.1.5'
	  # If you prefer you can use Thin web server instead of Mongrel
	  # gem 'thin', '1.2.11'
	end

	group :test do
	  gem 'rack-test', '>= 0.5.3', :require => "rack/test"
	  gem 'rspec', '~> 2.5.0'
	  gem 'rcov', '>= 0.9.8'
	end


Add to ***spec/spec_helper.rb*** file this line 

	:::ruby
	...
	# Set environment to test
	ENV['RHO_ENV'] = 'test'
	ROOT_PATH = File.expand_path(File.join(File.dirname(__FILE__),'..'))
	Bundler.require(:default, ENV['RHO_ENV'].to_sym) # add bundler 
	...

Insert at the top of ***config.ru*** file:

	:::ruby
	require 'bundler'
	Bundler.require
	...
	
In ***spec/spec_helper.rb*** file comment/remove the following helper code example:

	:::ruby
	describe "SpecHelper", :shared => true do
	  include Rhosync::TestMethods
	  
	  before(:each) do
	    Store.db.flushdb
	    Application.initializer(ROOT_PATH)
	  end
	end

and replace it by shared example group:

	:::ruby	
	shared_examples_for "SpecHelper" do
	  include Rhosync::TestMethods

	  before(:each) do
	    Store.db.flushdb
	    Application.initializer(ROOT_PATH)
	  end  
	end
	
Edit ***spec/sources/\*_spec.rb*** file(s). Add ***do ... end*** block to 
'it_should_behave_like "SpecHelper"' group and move all code examples inside it:    

	:::ruby
	it_should_behave_like "SpecHelper" do
	  before(:each) do
	    setup_test_for Product,'testuser'
	  end

	  ...

	end
