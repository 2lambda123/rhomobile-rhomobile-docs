Setting Up for RhoConnect Push on Android Client
===

You need to have performed the steps to set up your [RhoConnect client application to receive push messages](/rhoconnect/push-client-setup). Then, for Android, you need to perform the additional steps in this chapter to set up an Android RhoConnect client application.

## Enabling for RhoConnect Server Push

Enable push in your rhodes application in build.yml.

	:::yaml
	capabilities:
	  - push

## Setting up the Rhodes Client for Android (GCM)

You may read common [GCM docs](http://developer.android.com/guide/google/gcm/index.html) at google developer site.
In order to use the service, you need to create your Google API project (or use an existing one). To do so please follow Google [GCM Getting Started](http://developer.android.com/guide/google/gcm/gs.html) guide. Here you need to follow

1. Creating a Google API project
2. Enabling the GCM Service
3. Obtaining an API Key

All other staff is done for you by Rhodes.

### Guidelines

Here are some guidelines for developing and testing an Android application that uses the C2DM feature:

* To develop and test your GCM applications, you need to run and debug the applications on an Android 2.2 system image that includes the necessary underlying Google services. 
* To develop and debug on an actual device, you need a device running an Android 2.2 system image that includes the Market application. 
* To develop and test on the Android Emulator, you need to download the Android 2.2 version of the Google APIs Add-On into your SDK using the Android SDK and AVD Manager. Specifically, you need to download the component named "Google APIs by Google Inc, Android API 8". Then, you need to set up an AVD that uses that system image.
* Android GCM system uses an existing connection for Google services. This requires users to set up their Google account on their mobile devices (and on emulator!).

### Setting up the Google API project ID for Your Application

Register the Google API project number for your application. Modify your application's build.yml to specify the Google API project number used to send PUSH messages:

	:::yaml
	android:
	  push:
	    sender: <Google API project number>

See [here](/rhoconnect/push-server-setup#testing-push-in-the-rhoconnect-web-console) for more information.

## Setting up Status Bar Notifications for PUSH Messages

At Android it is possible to set up status bar notifications for PUSH messages. In this case, push notification can be shown on the Android status bar after ruby callback. The user can activate application by touching this notification.
There are two modes available for push notifications:
 - <i>always</i> - push notification is shown always
 - <i>background</i> - push notification is shown only if application is backgrounded (not started)
If no push notification mode is specified in build.yml then no notifications are shown at all.

	:::yaml
	android:
	  push:
	    notifications: background


