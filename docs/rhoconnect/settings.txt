RhoConnect settings
===

All Rhoconnect application and source settings located in the *`settings/settings.yml`* file.
There are two main categories: application environment settings and source settings.

## Application settings

Application-wide settings are specified per deployment environment (`:test`, `:development`, `:production`).
Each of the environment categories must have the following entries:
	
	:::yaml
	:syncserver: <url>
	:redis: <url>
	:licensefile: <filename>

`:syncserver`: application's base url.

`:redis`: Redis url.

`:licensefile`: application's license file.

In addition, you can specify the following settings:

	:::yaml
	:connection_pool_size: <number_of_redis_connections>
	:connection_pool_timeout: <secs>
	:redis_timeout: <secs>
	:poll_interval_default: <secs>
	:bulk_sync_poll_interval: <secs>
	:c2dm_username: <google's email>
	:c2dm_passwd: <passwd>                       
	:authtoken: <authtoken>

`:connection_pool_size`: By default, RhoConnect maintains multiple concurrent connections to Redis organized in Connection Pool. This setting allows you to specify the size of the pool. By default, RhoConnect starts with five (5) Redis connections.

`:connection_pool_timeout`: The timeout value for the Redis Connection Pool, in seconds. Specifies how much time a request will wait for an available Redis connection. Default is 30 seconds.

`:redis_timeout:` - timeout setting for Redis commands. Default is 30 seconds.

`:poll_interval_default`: default sync poll interval setting for source adapters, in seconds. This setting is used as a default if source doesn't specify its own value. Also, it is applied to dynamic adapters as a default sync poll interval.

`:bulk_sync_poll_interval`: poll interval setting for bulk data sync, in seconds.

`:c2dm_username`: The email address for the C2DM Google account.

`:c2dm_passwd`: The password for the C2DM Google account.

`:authtoken`: these settings are used specifically for Android push notifications. In order to push messages to the Android device, your server needs to obtain Google's C2DM authentication token associated with the trusted google account. For this purpose, you can specify C2DM Google account's username/password combo via the `:c2dm_username` and `:c2dm_passwd` settings. At run-time, the system will use these credentials to obtain the C2DM token and store it in the Redis for the future use. Once the token is expired, the system will automatically connect to the Google C2DM service to renew the token.

Alternatively, you can use the `:authtoken` setting to specify the pre-defined authentication token. This token MUST be related to the role-based google account registered for your application. See [the rhodes push instructions](/rhodes/device-caps#push-notifications) for more details. To retrieve this token, use sample script [c2dm.rb](http://github.com/rhomobile/rhodes/blob/master/bin/c2dm.rb). Uncomment last two lines and put your google account specific data, then run it. It will print token to stdout. This approach, however, will not allow the server to connect to the C2DM service and renew the token once it is expired.

## Source settings

All source-specific settings are specified under the corresponding source name entry in the `:sources` category.
Typical source settings include:

	:::yaml
	:poll_interval: <secs>
	:force_default: <true|false>
    :partition_type: <app|user>
    :priority: <num>  

`:poll_interval`: source's sync poll interval in seconds.

`:force_default`: true or false. If specified, this setting forces use of the default application poll interval even if source has its own setting.

`:partition_type`: app or user. default partition type for the source.

`:priority:` A priority number used to determine the order in which the models are processed and synchronized. This is useful when there are a set of linked together sources and the client needs to know in which order to process them.  Priority starts from lower value 1. If priorities are not specified, then there is no guarantee that models will be listed and processed in natural order.  




