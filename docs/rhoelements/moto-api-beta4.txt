# Motorola API
RhoElements 2.0 support Barcode, WebKit Browser and many other device capabilities for Motorola Windows Mobile, Windows CE and Android(ET1) devices.

## Build

* Install RhoStudio installer or RhoElements gem with Rhodes latest beta

* To enable Motorola device capabilities add to build.yml:

    app_type: rhoelements

### Windows Mobile and CE prerequisites:

To build for Motorola Windows Mobile devices: 

* Follow build instructions for [Windows Mobile](/rhodes/build#build-for-windows-mobile)

To build for Motorola Windows CE devices: 

* Install MC3000c50b PSDK from [Symbol support site](http://support.symbol.com/support/search.do?cmd=displayKC&docType=kc&externalId=11964&sliceId=&dialogID=45371217&stateId=0%200%2045367143)
* Add to build.yml:

        wm:
          sdk: "MC3000c50b (ARMV4I)"
      
### Android prerequisites:
To run an RhoElements application on ET1 device:

* Install Android USB drivers
* Define Symbol USB vendor ID (0x05e0) in (user_profile)/.android/adb_usb.ini :

    0x05E0

## Barcode API

Get a list of scanners present on the device. Return array of hashes ('name','id'):

	:::ruby
    Barcode.enumerate(url_for(:action => :enumerate_callback))

Callback parameters:

* scannerArray - array of Hashes("deviceName","friendlyName")
    
Enables the scanner. barcode_callback get the same parameters as Barcode.take_barcode:

    :::ruby
    Barcode.enable(url_for(:action => :barcode_callback), {:deviceName=>deviceName_from_enumerate})

Callback parameters:

* "status" - "ok" or "cancel"
* "barcode" - recognized barcode string

Disables the currently enabled scanner. This reverts the scanner to its default state and flushes any current decoder settings

    :::ruby    
    Barcode.disable

Performs a soft trigger start. If the scan does not result in a decode it is necessary to perform a soft stop before another soft start    

    :::ruby    
    Barcode.start

Performs a soft trigger stop     

    :::ruby    
    Barcode.stop 

Enables the scanner and start scanner. Before callback is called scanner is disabled:

    :::ruby
    Barcode.take_barcode(url_for(:action => :barcode_callback), {:deviceName=>deviceName_from_enumerate})

THe callback uses these parameters.

 * "status" - "ok" or "cancel"
 * "barcode" - recognized barcode string

### Sample
See controller and view in the /app/BarcodeRecognizerMoto folder of the [System API Samples application](http://github.com/rhomobile/rhodes-system-api-samples/tree/master/app/BarcodeRecognizerMoto/controller.rb) for more information.

## WebKit browser for Motorola devices
RhoElements 2.0 use Motorola WebKit browser for Windows Mobile, Windows CE and Android (ET1) devices when you added to build.yml:

    app_type: rhoelements
    
To use Native(Platform built-in) Web Browser, add to build.yml:
    
    capabilities:
    - native_browser

## RhoElements Shared Runtime
RhoElements 2.0 support developing applications int Shared Runtime mode:

* Shared Runtime contains all RhoElements specific binaries and Rhodes Ruby libraries
* Shared Runtime contains all Native Extensions included at build time of Shared Runtime
* Shared Runtime may contain public folder with common files like javascripts, css, images etc. RhoElements first looks in application public folder, then in Shared Runtime public folder
* Application bundle in Shared Runtime mode contain only application specific code and ruby extensions(Native extensions should be included in Shared Runtime)

NOTE: RhoElements 2.0 Beta 4 support Shared Runtime only for Windows Mobile and CE devices.

Shared Runtime itself is RhoElements application, so you can configure it and build for specific OS.
 
### Building RhoElements Shared Runtime

* Open folder: <RhoStudio>\ruby\lib\ruby\gems\1.8\gems\rhoelements-2.0.0\RhoElements2

* To build for Windows Mobile or Windows CE:

        rake device:wm:production

The resulting `cab` file can be found at `<RhoStudio>\ruby\lib\ruby\gems\1.8\gems\rhoelements-2.0.0\RhoElements2\bin\target\<platform_id>\RhoElements2.cab`.

* To build for Android:

        rake device:android:production

The resulting `apk` file can be found at `<RhoStudio>\ruby\lib\ruby\gems\1.8\gems\rhoelements-2.0.0\RhoElements2\bin\target\RhoElements2.apk`

### Installing RhoElements Shared Runtime
To install Shared Runtime on specific device follow [build instructions](/rhodes/build)

NOTE: RhoElements Shared Runtime <b>must</b> be installed to the primary disk partition of Windows CE/Mobile device, i.e. it has to be installed to `\Program Files\RhoElements2` only.
On Windows Mobile the `Device` option must be selected when the installer asks for the location to install.
On Windows CE the default path (`\Program Files\RhoElements2`) must be selected.

### Install and run RhoElements v2.0 applications
To build RhoElements v2.0 application in Shared Runtime mode add to build.yml:

    wm:
      use_shared_runtime: yes

All RhoStudio or rake commands will automatically build application in Shared Runtime mode:

* Windows CE and Windows Mobile : Follow build instructions for [Windows Mobile](/rhodes/build#build-for-windows-mobile)
* Android ET1 : Follow build instructions for [Android](/rhodes/build#build-for-android)

NOTE: RhoElements v2.0 applications <b>must</b> be installed to the primary disk partition of Windows CE/Mobile device, i.e. they have to be installed to `\Program Files\&lt;app-name&gt;` only.
On Windows Mobile the `Device` option must be selected when the installer asks for the location to install.
On Windows CE the default path (`\Program Files\&lt;app-name&gt;`) must be selected.

### Shortcut for RhoElements application in Shared Runtime mode
If RhoElements v2.0 application running in Shared Runtime mode is not a hidden app (i.e. there is no `hidden_app: yes` line at `build.yml`),
then on Windows Mobile or Windows CE the shortcut (`.lnk` file) containing the complete command line and icon path is created and placed to:

* _Start Menu_ if application is installed from `.cab` file or by `rake run:wm:device:cab` command.
* _application folder_ if application is installed by `rake run:wm:device` command.

The generated `.lnk` is a standard Windows Mobile/CE shortcut file having the following format:
`<line-length>#"<runtime-exe>" -approot="<app-folder>"?"<icon-path>"`

### RhoElements Shared Runtime command line parameters

* RhoElements v2.0 applications should be deployed and ran as described above.
* RhoElements v1.0 applications should be started using command line parameters.

Shared Runtime installation path on Windows CE/Mobile devices is `\Program Files\RhoElements2` and the path to the executable is `\Program Files\RhoElements2\RhoElements2.exe`.

The following command line parameters are supported by the RhoElements Shared Runtime (`RhoElements2.exe`):

    /C: Specifies the location of the configuration file for
        RhoElements v1.0 application
        e.g. /C:file://\application\config.xml
    /S: Specifies the start page of the RhoElements v1.0 application
        e.g. /S:file://\HTML\index.html
        e.g. /S:http://www.motorola.com
    -approot='<path-to-app>': Specifies the path to the root folder
        of the RhoElements v2.0 application
        e.g. -approot='\Program Files\app'

If `/C` parameter is present with no `/S` parameter, then the value from `Configuration` > `Applications` > `Application` > `General` > `StartPage` tag
of the configuration file will be used as the start page parameter.

If `/S` parameter is present with no `/C` parameter, then the default configuration file from the runtime will be used to launch the application.

If neither `/S` nor `/C` nor `-approot` parameters are present, then the value from `Configuration` > `Applications` > `Application` > `General` > `StartPage` tag
of RhoElements Shared Runtime configuration file will be used as the start page parameter (usually it points to 'Welcome to Motorola RhoElements' page).

### RhoElements applications logging
RhoElements Shared Runtime writes its internal log to file named `rholog.txt`. The location of this file is defined by the following rules (in the order of priority):

1. If the `Value` attribute of `Configuration` > `Logger` > `LogProtocol` tag in the configuration file equals to "FILE" or "HTTP",
then path to the log is taken from `Configuration` > `Logger` > `LogURI` tag:
   - In case of "FILE" protocol the file name part of `LogURI` is ignored and `rholog.txt` is used as a file name;
   - In case of "HTTP" protocol the log messages are sent to the `LogURI` via POST HTTP-requests.

2. If the start page parameter is a local file, then path to this file is used for log file `rholog.txt`
(file name part of the start page parameter is ignored and `rholog.txt` is used as a file name).

3. Otherwise the log file `rholog.txt` is placed to `rho` folder in the Shared Runtime installation folder.
