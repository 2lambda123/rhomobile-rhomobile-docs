SSL
===

SSL is a cryptographic protocol that provides end-to-end data encryption and
data integrity for all web requests. Apps that transmit sensitive data should
enable SSL to ensure all information is transmitted securely.

Piggyback SSL (myapp.heroku.com only)
-------------------------------------

SSL can be turned on for any `.heroku.com` domain by enabling the Piggyback SSL
add-on with the [heroku command-line tool](heroku-command):

    $ cd myapp
    $ heroku addons:add piggyback_ssl
    Adding ssl to myapp...done.

Access the app over SSL at: `https://myapp.heroku.com/`. 

NOTE: The SSL add-on can also be enabled on the web by signing into the <a
href="https://heroku.com/myapps">Heroku app admin tool</a> and customizing the
add-on section of an apps Resources page.

An app specific SSL certificate is not required for Piggyback SSL. The
`*.heroku.com` wildcard SSL certificate is used for all apps. You can view
information about this certificate by visiting <https://heroku.com/> and
clicking the lock icon <img src='/images/lock_icon.gif' height='16' width='12' alt=''>
in your browser chrome.

Custom-domain SSL (www.yourdomain.com)
--------------------------------------

Heroku offers you two choices to support running SSL on your domain, SNI and Custom SSL.  

SNI is supported by all browsers except IE on Windows XP.  Due to this limitation, we recommend using SNI for advanced users and testing.  When you are ready to deploy to a broader internet audience, you can seamlessly transition to Custom SSL.

For SNI or SSL, the workflow is the same:

 1. <a href="#acquirecert">Aquire a SSL certificate</a>
 2. <a href="#addcert">Add your certificate to your Heroku application</a>
 3. <a href="#chooseSSL">Choose which SSL add-on to enable</a>

### <a name="acquirecert">Acquiring a SSL Certificate</a>

Custom SSL and SNI SSL both require generating a SSL certificate.  You can use the same certificate for either solution.  When generating a certificate for Heroku, here is some information you may need to know:

 * Web Server: nginx
 * You must remove the passphrase from your certificate so Heroku can automatically start the server 
 
For testing, use this excellent instructions to generate a [self-signed certificate](http://sial.org/howto/openssl/self-signed/).  
In production, to remove the warnings, you will need to [purchase a SSL certificate](http://www.google.com/search?client=safari&rls=en&q=ssl+certificate&ie=UTF-8&oe=UTF-8).  Each provider will walk you through the process on their website.


### <a name="addcert">Add your certificate to your app</a>

Using the certificate you generated in the previous step, upload it to Heroku:

    $ heroku ssl:add cert.pem private.key
    Added certificate to www.yourdomain.com, expiring in 2012/08/27 22:16:39 -0700
    
### <a name="chooseSSL">Choose your SSL addon</a>

Now that you've uploaded your certificate, you can choose which SSL option:

#### SNI SSL

    $ heroku addons:add sni_ssl
    Adding ssl to myapp...done.
    
Your site will now be accessible on https://www.yourdomain.com.
    

#### Custom SSL    
    $ heroku addons:add custom_ssl
    Adding ssl to myapp...done.


NOTE: Custom SSL will provide you with a new public IP address.  Due to Heroku's cloud architecture, the public IP addresses may need to be changed from time to time. When using Custom SSL, be aware that we may request that you change your settings at some point in the future. We will provide advance notice, but if you do not update your addresses, your site may stop working. 

Heroku will allocate you a public IP address and email it to you within two business days.  You will then need to configure your DNS to point to the provided IP address.  Although you have a dedicated IP for your incoming traffic, you will still take full advantage of the cloud architecture on Heroku.

Once your DNS is pointing to the new IP address, your site will now be accessible on https://www.yourdomain.com.

FAQ
---

**Why is Custom SSL so expensive?**

SSL was designed before cloud computing.  The original implementation requires that each domain have it's own dedicated IP address.  Further adding to the complexity, Amazon doesn't have a mechanism to have multiple IP addresses connected to a single instance, meaning that Heroku must spin up a dedicated instance for each domain using SSL.  

SNI was designed to address this issue, and is the best way to support SSL in a cloud architecture.  Unfortunately, Microsoft has decided to not support SNI on Windows XP.  Until Vista/Windows 7 has major market penetration, for users requiring broad browser compatibiltiy Custom SSL is the only viable option.  We are providing an expensive option in favor of none at all, while we work with Amazon to provide cheaper alternatives.
